(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[]]);!function(n){function e(e){for(var r,i,s=e[0],l=e[1],c=e[2],u=0,d=[];u<s.length;u++)i=s[u],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&d.push(a[i][0]),a[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(n[r]=l[r]);for(p&&p(e);d.length;)d.shift()();return o.push.apply(o,c||[]),t()}function t(){for(var n,e=0;e<o.length;e++){for(var t=o[e],r=!0,s=1;s<t.length;s++){var l=t[s];0!==a[l]&&(r=!1)}r&&(o.splice(e--,1),n=i(i.s=t[0]))}return n}var r={},a={1:0},o=[];function i(e){if(r[e])return r[e].exports;var t=r[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.e=function(n){var e=[],t=a[n];if(0!==t)if(t)e.push(t[2]);else{var r=new Promise((function(e,r){t=a[n]=[e,r]}));e.push(t[2]=r);var o,s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(n){return i.p+"assets/js/"+({}[n]||n)+"."+{2:"acae172f",3:"71c56e22",4:"3e1c98e7",5:"70e5e3ae",6:"3240da3a",7:"7db7c6ce",8:"4b447818",9:"aa59e582",10:"ef41a5b1",11:"c5e9df66",12:"562d0b11",13:"94b7f0ec",14:"b308bbdc",15:"cf843c7e",16:"eccd0ad4",17:"35053421",18:"b88e13b3",19:"59076647",20:"ccd4e286",21:"dd65ce2e",22:"c21d9f43",23:"e687f0f8",24:"2edf3fee",25:"d7d6d1b7",26:"96d64e54",27:"4369a1fd",28:"6173ce2d",29:"39e00150",30:"aae0affa",31:"0d6e99fe",32:"ee97954c",33:"b57f7d4e",34:"d1a06cd8",35:"f03191b7",36:"acdab7e0",37:"17181c7a",38:"15c2be1c",39:"0eb4c654",40:"08695d3c",41:"edee4acc",42:"d4a6bc7c",43:"92060097",44:"8648b83f",45:"3d313376",46:"2b51c3e0",47:"69ecfee9",48:"23ea4519",49:"cb9f1ef1",50:"2b121fe3",51:"2dfa2a49",52:"92f1b878",53:"9e9a9fb3",54:"993eb48a",55:"3afde6ef",56:"c47fcc4f",57:"d201f2d6",58:"c7cab613",59:"68012960",60:"97a67ff7",61:"0ae18e2f",62:"2585e98e",63:"0337fa3c",64:"6cdb3af2",65:"67a9e6c2",66:"c4cf09c9",67:"32b4df95",68:"d6e4fac3",69:"27a8cf28",70:"56280f39",71:"db0bef2a",72:"ea0db57a",73:"fe988115",74:"3c725cc1",75:"b2ea4d75",76:"1da2c1a8",77:"f5326468",78:"ed3ceb1c",79:"e510d25f",80:"46a50c1e",81:"9aee972d",82:"b97f0246",83:"1f8976a4"}[n]+".js"}(n);var l=new Error;o=function(e){s.onerror=s.onload=null,clearTimeout(c);var t=a[n];if(0!==t){if(t){var r=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;l.message="Loading chunk "+n+" failed.\n("+r+": "+o+")",l.name="ChunkLoadError",l.type=r,l.request=o,t[1](l)}a[n]=void 0}};var c=setTimeout((function(){o({type:"timeout",target:s})}),12e4);s.onerror=s.onload=o,document.head.appendChild(s)}return Promise.all(e)},i.m=n,i.c=r,i.d=function(n,e,t){i.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},i.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},i.t=function(n,e){if(1&e&&(n=i(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)i.d(t,r,function(e){return n[e]}.bind(null,r));return t},i.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return i.d(e,"a",e),e},i.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},i.p="/",i.oe=function(n){throw console.error(n),n};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=e,s=s.slice();for(var c=0;c<s.length;c++)e(s[c]);var p=l;o.push([233,0]),t()}([function(n,e){var t=function(n){return n&&n.Math==Math&&n};n.exports=t("object"==typeof globalThis&&globalThis)||t("object"==typeof window&&window)||t("object"==typeof self&&self)||t("object"==typeof global&&global)||function(){return this}()||Function("return this")()},function(n,e){var t=Function.prototype,r=t.bind,a=t.call,o=r&&r.bind(a,a);n.exports=r?function(n){return n&&o(n)}:function(n){return n&&function(){return a.apply(n,arguments)}}},function(n,e,t){var r=t(0),a=t(40).f,o=t(23),i=t(15),s=t(110),l=t(117),c=t(87);n.exports=function(n,e){var t,p,u,d,m,f=n.target,g=n.global,h=n.stat;if(t=g?r:h?r[f]||s(f,{}):(r[f]||{}).prototype)for(p in e){if(d=e[p],u=n.noTargetGet?(m=a(t,p))&&m.value:t[p],!c(g?p:f+(h?".":"#")+p,n.forced)&&void 0!==u){if(typeof d==typeof u)continue;l(d,u)}(n.sham||u&&u.sham)&&o(d,"sham",!0),i(t,p,d,n)}}},function(n,e,t){"use strict";t.r(e);
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
var r=Object.freeze({});function a(n){return null==n}function o(n){return null!=n}function i(n){return!0===n}function s(n){return"string"==typeof n||"number"==typeof n||"symbol"==typeof n||"boolean"==typeof n}function l(n){return null!==n&&"object"==typeof n}var c=Object.prototype.toString;function p(n){return"[object Object]"===c.call(n)}function u(n){return"[object RegExp]"===c.call(n)}function d(n){var e=parseFloat(String(n));return e>=0&&Math.floor(e)===e&&isFinite(n)}function m(n){return o(n)&&"function"==typeof n.then&&"function"==typeof n.catch}function f(n){return null==n?"":Array.isArray(n)||p(n)&&n.toString===c?JSON.stringify(n,null,2):String(n)}function g(n){var e=parseFloat(n);return isNaN(e)?n:e}function h(n,e){for(var t=Object.create(null),r=n.split(","),a=0;a<r.length;a++)t[r[a]]=!0;return e?function(n){return t[n.toLowerCase()]}:function(n){return t[n]}}h("slot,component",!0);var v=h("key,ref,slot,slot-scope,is");function y(n,e){if(n.length){var t=n.indexOf(e);if(t>-1)return n.splice(t,1)}}var b=Object.prototype.hasOwnProperty;function x(n,e){return b.call(n,e)}function w(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var k=/-(\w)/g,S=w((function(n){return n.replace(k,(function(n,e){return e?e.toUpperCase():""}))})),E=w((function(n){return n.charAt(0).toUpperCase()+n.slice(1)})),_=/\B([A-Z])/g,C=w((function(n){return n.replace(_,"-$1").toLowerCase()}));var T=Function.prototype.bind?function(n,e){return n.bind(e)}:function(n,e){function t(t){var r=arguments.length;return r?r>1?n.apply(e,arguments):n.call(e,t):n.call(e)}return t._length=n.length,t};function j(n,e){e=e||0;for(var t=n.length-e,r=new Array(t);t--;)r[t]=n[t+e];return r}function A(n,e){for(var t in e)n[t]=e[t];return n}function M(n){for(var e={},t=0;t<n.length;t++)n[t]&&A(e,n[t]);return e}function I(n,e,t){}var O=function(n,e,t){return!1},P=function(n){return n};function R(n,e){if(n===e)return!0;var t=l(n),r=l(e);if(!t||!r)return!t&&!r&&String(n)===String(e);try{var a=Array.isArray(n),o=Array.isArray(e);if(a&&o)return n.length===e.length&&n.every((function(n,t){return R(n,e[t])}));if(n instanceof Date&&e instanceof Date)return n.getTime()===e.getTime();if(a||o)return!1;var i=Object.keys(n),s=Object.keys(e);return i.length===s.length&&i.every((function(t){return R(n[t],e[t])}))}catch(n){return!1}}function B(n,e){for(var t=0;t<n.length;t++)if(R(n[t],e))return t;return-1}function q(n){var e=!1;return function(){e||(e=!0,n.apply(this,arguments))}}var z=["component","directive","filter"],L=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],D={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:O,isReservedAttr:O,isUnknownElement:O,getTagNamespace:I,parsePlatformTagName:P,mustUseProp:O,async:!0,_lifecycleHooks:L},N=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function F(n,e,t,r){Object.defineProperty(n,e,{value:t,enumerable:!!r,writable:!0,configurable:!0})}var V=new RegExp("[^"+N.source+".$_\\d]");var $,U="__proto__"in{},H="undefined"!=typeof window,J="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,W=J&&WXEnvironment.platform.toLowerCase(),G=H&&window.navigator.userAgent.toLowerCase(),Q=G&&/msie|trident/.test(G),K=G&&G.indexOf("msie 9.0")>0,Y=G&&G.indexOf("edge/")>0,Z=(G&&G.indexOf("android"),G&&/iphone|ipad|ipod|ios/.test(G)||"ios"===W),X=(G&&/chrome\/\d+/.test(G),G&&/phantomjs/.test(G),G&&G.match(/firefox\/(\d+)/)),nn={}.watch,en=!1;if(H)try{var tn={};Object.defineProperty(tn,"passive",{get:function(){en=!0}}),window.addEventListener("test-passive",null,tn)}catch(n){}var rn=function(){return void 0===$&&($=!H&&!J&&"undefined"!=typeof global&&(global.process&&"server"===global.process.env.VUE_ENV)),$},an=H&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function on(n){return"function"==typeof n&&/native code/.test(n.toString())}var sn,ln="undefined"!=typeof Symbol&&on(Symbol)&&"undefined"!=typeof Reflect&&on(Reflect.ownKeys);sn="undefined"!=typeof Set&&on(Set)?Set:function(){function n(){this.set=Object.create(null)}return n.prototype.has=function(n){return!0===this.set[n]},n.prototype.add=function(n){this.set[n]=!0},n.prototype.clear=function(){this.set=Object.create(null)},n}();var cn=I,pn=0,un=function(){this.id=pn++,this.subs=[]};un.prototype.addSub=function(n){this.subs.push(n)},un.prototype.removeSub=function(n){y(this.subs,n)},un.prototype.depend=function(){un.target&&un.target.addDep(this)},un.prototype.notify=function(){var n=this.subs.slice();for(var e=0,t=n.length;e<t;e++)n[e].update()},un.target=null;var dn=[];function mn(n){dn.push(n),un.target=n}function fn(){dn.pop(),un.target=dn[dn.length-1]}var gn=function(n,e,t,r,a,o,i,s){this.tag=n,this.data=e,this.children=t,this.text=r,this.elm=a,this.ns=void 0,this.context=o,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=e&&e.key,this.componentOptions=i,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=s,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},hn={child:{configurable:!0}};hn.child.get=function(){return this.componentInstance},Object.defineProperties(gn.prototype,hn);var vn=function(n){void 0===n&&(n="");var e=new gn;return e.text=n,e.isComment=!0,e};function yn(n){return new gn(void 0,void 0,void 0,String(n))}function bn(n){var e=new gn(n.tag,n.data,n.children&&n.children.slice(),n.text,n.elm,n.context,n.componentOptions,n.asyncFactory);return e.ns=n.ns,e.isStatic=n.isStatic,e.key=n.key,e.isComment=n.isComment,e.fnContext=n.fnContext,e.fnOptions=n.fnOptions,e.fnScopeId=n.fnScopeId,e.asyncMeta=n.asyncMeta,e.isCloned=!0,e}var xn=Array.prototype,wn=Object.create(xn);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(n){var e=xn[n];F(wn,n,(function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];var a,o=e.apply(this,t),i=this.__ob__;switch(n){case"push":case"unshift":a=t;break;case"splice":a=t.slice(2)}return a&&i.observeArray(a),i.dep.notify(),o}))}));var kn=Object.getOwnPropertyNames(wn),Sn=!0;function En(n){Sn=n}var _n=function(n){this.value=n,this.dep=new un,this.vmCount=0,F(n,"__ob__",this),Array.isArray(n)?(U?function(n,e){n.__proto__=e}(n,wn):function(n,e,t){for(var r=0,a=t.length;r<a;r++){var o=t[r];F(n,o,e[o])}}(n,wn,kn),this.observeArray(n)):this.walk(n)};function Cn(n,e){var t;if(l(n)&&!(n instanceof gn))return x(n,"__ob__")&&n.__ob__ instanceof _n?t=n.__ob__:Sn&&!rn()&&(Array.isArray(n)||p(n))&&Object.isExtensible(n)&&!n._isVue&&(t=new _n(n)),e&&t&&t.vmCount++,t}function Tn(n,e,t,r,a){var o=new un,i=Object.getOwnPropertyDescriptor(n,e);if(!i||!1!==i.configurable){var s=i&&i.get,l=i&&i.set;s&&!l||2!==arguments.length||(t=n[e]);var c=!a&&Cn(t);Object.defineProperty(n,e,{enumerable:!0,configurable:!0,get:function(){var e=s?s.call(n):t;return un.target&&(o.depend(),c&&(c.dep.depend(),Array.isArray(e)&&Mn(e))),e},set:function(e){var r=s?s.call(n):t;e===r||e!=e&&r!=r||s&&!l||(l?l.call(n,e):t=e,c=!a&&Cn(e),o.notify())}})}}function jn(n,e,t){if(Array.isArray(n)&&d(e))return n.length=Math.max(n.length,e),n.splice(e,1,t),t;if(e in n&&!(e in Object.prototype))return n[e]=t,t;var r=n.__ob__;return n._isVue||r&&r.vmCount?t:r?(Tn(r.value,e,t),r.dep.notify(),t):(n[e]=t,t)}function An(n,e){if(Array.isArray(n)&&d(e))n.splice(e,1);else{var t=n.__ob__;n._isVue||t&&t.vmCount||x(n,e)&&(delete n[e],t&&t.dep.notify())}}function Mn(n){for(var e=void 0,t=0,r=n.length;t<r;t++)(e=n[t])&&e.__ob__&&e.__ob__.dep.depend(),Array.isArray(e)&&Mn(e)}_n.prototype.walk=function(n){for(var e=Object.keys(n),t=0;t<e.length;t++)Tn(n,e[t])},_n.prototype.observeArray=function(n){for(var e=0,t=n.length;e<t;e++)Cn(n[e])};var In=D.optionMergeStrategies;function On(n,e){if(!e)return n;for(var t,r,a,o=ln?Reflect.ownKeys(e):Object.keys(e),i=0;i<o.length;i++)"__ob__"!==(t=o[i])&&(r=n[t],a=e[t],x(n,t)?r!==a&&p(r)&&p(a)&&On(r,a):jn(n,t,a));return n}function Pn(n,e,t){return t?function(){var r="function"==typeof e?e.call(t,t):e,a="function"==typeof n?n.call(t,t):n;return r?On(r,a):a}:e?n?function(){return On("function"==typeof e?e.call(this,this):e,"function"==typeof n?n.call(this,this):n)}:e:n}function Rn(n,e){var t=e?n?n.concat(e):Array.isArray(e)?e:[e]:n;return t?function(n){for(var e=[],t=0;t<n.length;t++)-1===e.indexOf(n[t])&&e.push(n[t]);return e}(t):t}function Bn(n,e,t,r){var a=Object.create(n||null);return e?A(a,e):a}In.data=function(n,e,t){return t?Pn(n,e,t):e&&"function"!=typeof e?n:Pn(n,e)},L.forEach((function(n){In[n]=Rn})),z.forEach((function(n){In[n+"s"]=Bn})),In.watch=function(n,e,t,r){if(n===nn&&(n=void 0),e===nn&&(e=void 0),!e)return Object.create(n||null);if(!n)return e;var a={};for(var o in A(a,n),e){var i=a[o],s=e[o];i&&!Array.isArray(i)&&(i=[i]),a[o]=i?i.concat(s):Array.isArray(s)?s:[s]}return a},In.props=In.methods=In.inject=In.computed=function(n,e,t,r){if(!n)return e;var a=Object.create(null);return A(a,n),e&&A(a,e),a},In.provide=Pn;var qn=function(n,e){return void 0===e?n:e};function zn(n,e,t){if("function"==typeof e&&(e=e.options),function(n,e){var t=n.props;if(t){var r,a,o={};if(Array.isArray(t))for(r=t.length;r--;)"string"==typeof(a=t[r])&&(o[S(a)]={type:null});else if(p(t))for(var i in t)a=t[i],o[S(i)]=p(a)?a:{type:a};else 0;n.props=o}}(e),function(n,e){var t=n.inject;if(t){var r=n.inject={};if(Array.isArray(t))for(var a=0;a<t.length;a++)r[t[a]]={from:t[a]};else if(p(t))for(var o in t){var i=t[o];r[o]=p(i)?A({from:o},i):{from:i}}else 0}}(e),function(n){var e=n.directives;if(e)for(var t in e){var r=e[t];"function"==typeof r&&(e[t]={bind:r,update:r})}}(e),!e._base&&(e.extends&&(n=zn(n,e.extends,t)),e.mixins))for(var r=0,a=e.mixins.length;r<a;r++)n=zn(n,e.mixins[r],t);var o,i={};for(o in n)s(o);for(o in e)x(n,o)||s(o);function s(r){var a=In[r]||qn;i[r]=a(n[r],e[r],t,r)}return i}function Ln(n,e,t,r){if("string"==typeof t){var a=n[e];if(x(a,t))return a[t];var o=S(t);if(x(a,o))return a[o];var i=E(o);return x(a,i)?a[i]:a[t]||a[o]||a[i]}}function Dn(n,e,t,r){var a=e[n],o=!x(t,n),i=t[n],s=$n(Boolean,a.type);if(s>-1)if(o&&!x(a,"default"))i=!1;else if(""===i||i===C(n)){var l=$n(String,a.type);(l<0||s<l)&&(i=!0)}if(void 0===i){i=function(n,e,t){if(!x(e,"default"))return;var r=e.default;0;if(n&&n.$options.propsData&&void 0===n.$options.propsData[t]&&void 0!==n._props[t])return n._props[t];return"function"==typeof r&&"Function"!==Fn(e.type)?r.call(n):r}(r,a,n);var c=Sn;En(!0),Cn(i),En(c)}return i}var Nn=/^\s*function (\w+)/;function Fn(n){var e=n&&n.toString().match(Nn);return e?e[1]:""}function Vn(n,e){return Fn(n)===Fn(e)}function $n(n,e){if(!Array.isArray(e))return Vn(e,n)?0:-1;for(var t=0,r=e.length;t<r;t++)if(Vn(e[t],n))return t;return-1}function Un(n,e,t){mn();try{if(e)for(var r=e;r=r.$parent;){var a=r.$options.errorCaptured;if(a)for(var o=0;o<a.length;o++)try{if(!1===a[o].call(r,n,e,t))return}catch(n){Jn(n,r,"errorCaptured hook")}}Jn(n,e,t)}finally{fn()}}function Hn(n,e,t,r,a){var o;try{(o=t?n.apply(e,t):n.call(e))&&!o._isVue&&m(o)&&!o._handled&&(o.catch((function(n){return Un(n,r,a+" (Promise/async)")})),o._handled=!0)}catch(n){Un(n,r,a)}return o}function Jn(n,e,t){if(D.errorHandler)try{return D.errorHandler.call(null,n,e,t)}catch(e){e!==n&&Wn(e,null,"config.errorHandler")}Wn(n,e,t)}function Wn(n,e,t){if(!H&&!J||"undefined"==typeof console)throw n;console.error(n)}var Gn,Qn=!1,Kn=[],Yn=!1;function Zn(){Yn=!1;var n=Kn.slice(0);Kn.length=0;for(var e=0;e<n.length;e++)n[e]()}if("undefined"!=typeof Promise&&on(Promise)){var Xn=Promise.resolve();Gn=function(){Xn.then(Zn),Z&&setTimeout(I)},Qn=!0}else if(Q||"undefined"==typeof MutationObserver||!on(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Gn="undefined"!=typeof setImmediate&&on(setImmediate)?function(){setImmediate(Zn)}:function(){setTimeout(Zn,0)};else{var ne=1,ee=new MutationObserver(Zn),te=document.createTextNode(String(ne));ee.observe(te,{characterData:!0}),Gn=function(){ne=(ne+1)%2,te.data=String(ne)},Qn=!0}function re(n,e){var t;if(Kn.push((function(){if(n)try{n.call(e)}catch(n){Un(n,e,"nextTick")}else t&&t(e)})),Yn||(Yn=!0,Gn()),!n&&"undefined"!=typeof Promise)return new Promise((function(n){t=n}))}var ae=new sn;function oe(n){!function n(e,t){var r,a,o=Array.isArray(e);if(!o&&!l(e)||Object.isFrozen(e)||e instanceof gn)return;if(e.__ob__){var i=e.__ob__.dep.id;if(t.has(i))return;t.add(i)}if(o)for(r=e.length;r--;)n(e[r],t);else for(a=Object.keys(e),r=a.length;r--;)n(e[a[r]],t)}(n,ae),ae.clear()}var ie=w((function(n){var e="&"===n.charAt(0),t="~"===(n=e?n.slice(1):n).charAt(0),r="!"===(n=t?n.slice(1):n).charAt(0);return{name:n=r?n.slice(1):n,once:t,capture:r,passive:e}}));function se(n,e){function t(){var n=arguments,r=t.fns;if(!Array.isArray(r))return Hn(r,null,arguments,e,"v-on handler");for(var a=r.slice(),o=0;o<a.length;o++)Hn(a[o],null,n,e,"v-on handler")}return t.fns=n,t}function le(n,e,t,r,o,s){var l,c,p,u;for(l in n)c=n[l],p=e[l],u=ie(l),a(c)||(a(p)?(a(c.fns)&&(c=n[l]=se(c,s)),i(u.once)&&(c=n[l]=o(u.name,c,u.capture)),t(u.name,c,u.capture,u.passive,u.params)):c!==p&&(p.fns=c,n[l]=p));for(l in e)a(n[l])&&r((u=ie(l)).name,e[l],u.capture)}function ce(n,e,t){var r;n instanceof gn&&(n=n.data.hook||(n.data.hook={}));var s=n[e];function l(){t.apply(this,arguments),y(r.fns,l)}a(s)?r=se([l]):o(s.fns)&&i(s.merged)?(r=s).fns.push(l):r=se([s,l]),r.merged=!0,n[e]=r}function pe(n,e,t,r,a){if(o(e)){if(x(e,t))return n[t]=e[t],a||delete e[t],!0;if(x(e,r))return n[t]=e[r],a||delete e[r],!0}return!1}function ue(n){return s(n)?[yn(n)]:Array.isArray(n)?function n(e,t){var r,l,c,p,u=[];for(r=0;r<e.length;r++)a(l=e[r])||"boolean"==typeof l||(c=u.length-1,p=u[c],Array.isArray(l)?l.length>0&&(de((l=n(l,(t||"")+"_"+r))[0])&&de(p)&&(u[c]=yn(p.text+l[0].text),l.shift()),u.push.apply(u,l)):s(l)?de(p)?u[c]=yn(p.text+l):""!==l&&u.push(yn(l)):de(l)&&de(p)?u[c]=yn(p.text+l.text):(i(e._isVList)&&o(l.tag)&&a(l.key)&&o(t)&&(l.key="__vlist"+t+"_"+r+"__"),u.push(l)));return u}(n):void 0}function de(n){return o(n)&&o(n.text)&&!1===n.isComment}function me(n,e){if(n){for(var t=Object.create(null),r=ln?Reflect.ownKeys(n):Object.keys(n),a=0;a<r.length;a++){var o=r[a];if("__ob__"!==o){for(var i=n[o].from,s=e;s;){if(s._provided&&x(s._provided,i)){t[o]=s._provided[i];break}s=s.$parent}if(!s)if("default"in n[o]){var l=n[o].default;t[o]="function"==typeof l?l.call(e):l}else 0}}return t}}function fe(n,e){if(!n||!n.length)return{};for(var t={},r=0,a=n.length;r<a;r++){var o=n[r],i=o.data;if(i&&i.attrs&&i.attrs.slot&&delete i.attrs.slot,o.context!==e&&o.fnContext!==e||!i||null==i.slot)(t.default||(t.default=[])).push(o);else{var s=i.slot,l=t[s]||(t[s]=[]);"template"===o.tag?l.push.apply(l,o.children||[]):l.push(o)}}for(var c in t)t[c].every(ge)&&delete t[c];return t}function ge(n){return n.isComment&&!n.asyncFactory||" "===n.text}function he(n){return n.isComment&&n.asyncFactory}function ve(n,e,t){var a,o=Object.keys(e).length>0,i=n?!!n.$stable:!o,s=n&&n.$key;if(n){if(n._normalized)return n._normalized;if(i&&t&&t!==r&&s===t.$key&&!o&&!t.$hasNormal)return t;for(var l in a={},n)n[l]&&"$"!==l[0]&&(a[l]=ye(e,l,n[l]))}else a={};for(var c in e)c in a||(a[c]=be(e,c));return n&&Object.isExtensible(n)&&(n._normalized=a),F(a,"$stable",i),F(a,"$key",s),F(a,"$hasNormal",o),a}function ye(n,e,t){var r=function(){var n=arguments.length?t.apply(null,arguments):t({}),e=(n=n&&"object"==typeof n&&!Array.isArray(n)?[n]:ue(n))&&n[0];return n&&(!e||1===n.length&&e.isComment&&!he(e))?void 0:n};return t.proxy&&Object.defineProperty(n,e,{get:r,enumerable:!0,configurable:!0}),r}function be(n,e){return function(){return n[e]}}function xe(n,e){var t,r,a,i,s;if(Array.isArray(n)||"string"==typeof n)for(t=new Array(n.length),r=0,a=n.length;r<a;r++)t[r]=e(n[r],r);else if("number"==typeof n)for(t=new Array(n),r=0;r<n;r++)t[r]=e(r+1,r);else if(l(n))if(ln&&n[Symbol.iterator]){t=[];for(var c=n[Symbol.iterator](),p=c.next();!p.done;)t.push(e(p.value,t.length)),p=c.next()}else for(i=Object.keys(n),t=new Array(i.length),r=0,a=i.length;r<a;r++)s=i[r],t[r]=e(n[s],s,r);return o(t)||(t=[]),t._isVList=!0,t}function we(n,e,t,r){var a,o=this.$scopedSlots[n];o?(t=t||{},r&&(t=A(A({},r),t)),a=o(t)||("function"==typeof e?e():e)):a=this.$slots[n]||("function"==typeof e?e():e);var i=t&&t.slot;return i?this.$createElement("template",{slot:i},a):a}function ke(n){return Ln(this.$options,"filters",n)||P}function Se(n,e){return Array.isArray(n)?-1===n.indexOf(e):n!==e}function Ee(n,e,t,r,a){var o=D.keyCodes[e]||t;return a&&r&&!D.keyCodes[e]?Se(a,r):o?Se(o,n):r?C(r)!==e:void 0===n}function _e(n,e,t,r,a){if(t)if(l(t)){var o;Array.isArray(t)&&(t=M(t));var i=function(i){if("class"===i||"style"===i||v(i))o=n;else{var s=n.attrs&&n.attrs.type;o=r||D.mustUseProp(e,s,i)?n.domProps||(n.domProps={}):n.attrs||(n.attrs={})}var l=S(i),c=C(i);l in o||c in o||(o[i]=t[i],a&&((n.on||(n.on={}))["update:"+i]=function(n){t[i]=n}))};for(var s in t)i(s)}else;return n}function Ce(n,e){var t=this._staticTrees||(this._staticTrees=[]),r=t[n];return r&&!e||je(r=t[n]=this.$options.staticRenderFns[n].call(this._renderProxy,null,this),"__static__"+n,!1),r}function Te(n,e,t){return je(n,"__once__"+e+(t?"_"+t:""),!0),n}function je(n,e,t){if(Array.isArray(n))for(var r=0;r<n.length;r++)n[r]&&"string"!=typeof n[r]&&Ae(n[r],e+"_"+r,t);else Ae(n,e,t)}function Ae(n,e,t){n.isStatic=!0,n.key=e,n.isOnce=t}function Me(n,e){if(e)if(p(e)){var t=n.on=n.on?A({},n.on):{};for(var r in e){var a=t[r],o=e[r];t[r]=a?[].concat(a,o):o}}else;return n}function Ie(n,e,t,r){e=e||{$stable:!t};for(var a=0;a<n.length;a++){var o=n[a];Array.isArray(o)?Ie(o,e,t):o&&(o.proxy&&(o.fn.proxy=!0),e[o.key]=o.fn)}return r&&(e.$key=r),e}function Oe(n,e){for(var t=0;t<e.length;t+=2){var r=e[t];"string"==typeof r&&r&&(n[e[t]]=e[t+1])}return n}function Pe(n,e){return"string"==typeof n?e+n:n}function Re(n){n._o=Te,n._n=g,n._s=f,n._l=xe,n._t=we,n._q=R,n._i=B,n._m=Ce,n._f=ke,n._k=Ee,n._b=_e,n._v=yn,n._e=vn,n._u=Ie,n._g=Me,n._d=Oe,n._p=Pe}function Be(n,e,t,a,o){var s,l=this,c=o.options;x(a,"_uid")?(s=Object.create(a))._original=a:(s=a,a=a._original);var p=i(c._compiled),u=!p;this.data=n,this.props=e,this.children=t,this.parent=a,this.listeners=n.on||r,this.injections=me(c.inject,a),this.slots=function(){return l.$slots||ve(n.scopedSlots,l.$slots=fe(t,a)),l.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return ve(n.scopedSlots,this.slots())}}),p&&(this.$options=c,this.$slots=this.slots(),this.$scopedSlots=ve(n.scopedSlots,this.$slots)),c._scopeId?this._c=function(n,e,t,r){var o=Ve(s,n,e,t,r,u);return o&&!Array.isArray(o)&&(o.fnScopeId=c._scopeId,o.fnContext=a),o}:this._c=function(n,e,t,r){return Ve(s,n,e,t,r,u)}}function qe(n,e,t,r,a){var o=bn(n);return o.fnContext=t,o.fnOptions=r,e.slot&&((o.data||(o.data={})).slot=e.slot),o}function ze(n,e){for(var t in e)n[S(t)]=e[t]}Re(Be.prototype);var Le={init:function(n,e){if(n.componentInstance&&!n.componentInstance._isDestroyed&&n.data.keepAlive){var t=n;Le.prepatch(t,t)}else{(n.componentInstance=function(n,e){var t={_isComponent:!0,_parentVnode:n,parent:e},r=n.data.inlineTemplate;o(r)&&(t.render=r.render,t.staticRenderFns=r.staticRenderFns);return new n.componentOptions.Ctor(t)}(n,Ye)).$mount(e?n.elm:void 0,e)}},prepatch:function(n,e){var t=e.componentOptions;!function(n,e,t,a,o){0;var i=a.data.scopedSlots,s=n.$scopedSlots,l=!!(i&&!i.$stable||s!==r&&!s.$stable||i&&n.$scopedSlots.$key!==i.$key||!i&&n.$scopedSlots.$key),c=!!(o||n.$options._renderChildren||l);n.$options._parentVnode=a,n.$vnode=a,n._vnode&&(n._vnode.parent=a);if(n.$options._renderChildren=o,n.$attrs=a.data.attrs||r,n.$listeners=t||r,e&&n.$options.props){En(!1);for(var p=n._props,u=n.$options._propKeys||[],d=0;d<u.length;d++){var m=u[d],f=n.$options.props;p[m]=Dn(m,f,e,n)}En(!0),n.$options.propsData=e}t=t||r;var g=n.$options._parentListeners;n.$options._parentListeners=t,Ke(n,t,g),c&&(n.$slots=fe(o,a.context),n.$forceUpdate());0}(e.componentInstance=n.componentInstance,t.propsData,t.listeners,e,t.children)},insert:function(n){var e,t=n.context,r=n.componentInstance;r._isMounted||(r._isMounted=!0,et(r,"mounted")),n.data.keepAlive&&(t._isMounted?((e=r)._inactive=!1,rt.push(e)):nt(r,!0))},destroy:function(n){var e=n.componentInstance;e._isDestroyed||(n.data.keepAlive?function n(e,t){if(t&&(e._directInactive=!0,Xe(e)))return;if(!e._inactive){e._inactive=!0;for(var r=0;r<e.$children.length;r++)n(e.$children[r]);et(e,"deactivated")}}(e,!0):e.$destroy())}},De=Object.keys(Le);function Ne(n,e,t,s,c){if(!a(n)){var p=t.$options._base;if(l(n)&&(n=p.extend(n)),"function"==typeof n){var u;if(a(n.cid)&&void 0===(n=function(n,e){if(i(n.error)&&o(n.errorComp))return n.errorComp;if(o(n.resolved))return n.resolved;var t=Ue;t&&o(n.owners)&&-1===n.owners.indexOf(t)&&n.owners.push(t);if(i(n.loading)&&o(n.loadingComp))return n.loadingComp;if(t&&!o(n.owners)){var r=n.owners=[t],s=!0,c=null,p=null;t.$on("hook:destroyed",(function(){return y(r,t)}));var u=function(n){for(var e=0,t=r.length;e<t;e++)r[e].$forceUpdate();n&&(r.length=0,null!==c&&(clearTimeout(c),c=null),null!==p&&(clearTimeout(p),p=null))},d=q((function(t){n.resolved=He(t,e),s?r.length=0:u(!0)})),f=q((function(e){o(n.errorComp)&&(n.error=!0,u(!0))})),g=n(d,f);return l(g)&&(m(g)?a(n.resolved)&&g.then(d,f):m(g.component)&&(g.component.then(d,f),o(g.error)&&(n.errorComp=He(g.error,e)),o(g.loading)&&(n.loadingComp=He(g.loading,e),0===g.delay?n.loading=!0:c=setTimeout((function(){c=null,a(n.resolved)&&a(n.error)&&(n.loading=!0,u(!1))}),g.delay||200)),o(g.timeout)&&(p=setTimeout((function(){p=null,a(n.resolved)&&f(null)}),g.timeout)))),s=!1,n.loading?n.loadingComp:n.resolved}}(u=n,p)))return function(n,e,t,r,a){var o=vn();return o.asyncFactory=n,o.asyncMeta={data:e,context:t,children:r,tag:a},o}(u,e,t,s,c);e=e||{},St(n),o(e.model)&&function(n,e){var t=n.model&&n.model.prop||"value",r=n.model&&n.model.event||"input";(e.attrs||(e.attrs={}))[t]=e.model.value;var a=e.on||(e.on={}),i=a[r],s=e.model.callback;o(i)?(Array.isArray(i)?-1===i.indexOf(s):i!==s)&&(a[r]=[s].concat(i)):a[r]=s}(n.options,e);var d=function(n,e,t){var r=e.options.props;if(!a(r)){var i={},s=n.attrs,l=n.props;if(o(s)||o(l))for(var c in r){var p=C(c);pe(i,l,c,p,!0)||pe(i,s,c,p,!1)}return i}}(e,n);if(i(n.options.functional))return function(n,e,t,a,i){var s=n.options,l={},c=s.props;if(o(c))for(var p in c)l[p]=Dn(p,c,e||r);else o(t.attrs)&&ze(l,t.attrs),o(t.props)&&ze(l,t.props);var u=new Be(t,l,i,a,n),d=s.render.call(null,u._c,u);if(d instanceof gn)return qe(d,t,u.parent,s,u);if(Array.isArray(d)){for(var m=ue(d)||[],f=new Array(m.length),g=0;g<m.length;g++)f[g]=qe(m[g],t,u.parent,s,u);return f}}(n,d,e,t,s);var f=e.on;if(e.on=e.nativeOn,i(n.options.abstract)){var g=e.slot;e={},g&&(e.slot=g)}!function(n){for(var e=n.hook||(n.hook={}),t=0;t<De.length;t++){var r=De[t],a=e[r],o=Le[r];a===o||a&&a._merged||(e[r]=a?Fe(o,a):o)}}(e);var h=n.options.name||c;return new gn("vue-component-"+n.cid+(h?"-"+h:""),e,void 0,void 0,void 0,t,{Ctor:n,propsData:d,listeners:f,tag:c,children:s},u)}}}function Fe(n,e){var t=function(t,r){n(t,r),e(t,r)};return t._merged=!0,t}function Ve(n,e,t,r,c,p){return(Array.isArray(t)||s(t))&&(c=r,r=t,t=void 0),i(p)&&(c=2),function(n,e,t,r,s){if(o(t)&&o(t.__ob__))return vn();o(t)&&o(t.is)&&(e=t.is);if(!e)return vn();0;Array.isArray(r)&&"function"==typeof r[0]&&((t=t||{}).scopedSlots={default:r[0]},r.length=0);2===s?r=ue(r):1===s&&(r=function(n){for(var e=0;e<n.length;e++)if(Array.isArray(n[e]))return Array.prototype.concat.apply([],n);return n}(r));var c,p;if("string"==typeof e){var u;p=n.$vnode&&n.$vnode.ns||D.getTagNamespace(e),c=D.isReservedTag(e)?new gn(D.parsePlatformTagName(e),t,r,void 0,void 0,n):t&&t.pre||!o(u=Ln(n.$options,"components",e))?new gn(e,t,r,void 0,void 0,n):Ne(u,t,n,r,e)}else c=Ne(e,t,n,r);return Array.isArray(c)?c:o(c)?(o(p)&&function n(e,t,r){e.ns=t,"foreignObject"===e.tag&&(t=void 0,r=!0);if(o(e.children))for(var s=0,l=e.children.length;s<l;s++){var c=e.children[s];o(c.tag)&&(a(c.ns)||i(r)&&"svg"!==c.tag)&&n(c,t,r)}}(c,p),o(t)&&function(n){l(n.style)&&oe(n.style);l(n.class)&&oe(n.class)}(t),c):vn()}(n,e,t,r,c)}var $e,Ue=null;function He(n,e){return(n.__esModule||ln&&"Module"===n[Symbol.toStringTag])&&(n=n.default),l(n)?e.extend(n):n}function Je(n){if(Array.isArray(n))for(var e=0;e<n.length;e++){var t=n[e];if(o(t)&&(o(t.componentOptions)||he(t)))return t}}function We(n,e){$e.$on(n,e)}function Ge(n,e){$e.$off(n,e)}function Qe(n,e){var t=$e;return function r(){var a=e.apply(null,arguments);null!==a&&t.$off(n,r)}}function Ke(n,e,t){$e=n,le(e,t||{},We,Ge,Qe,n),$e=void 0}var Ye=null;function Ze(n){var e=Ye;return Ye=n,function(){Ye=e}}function Xe(n){for(;n&&(n=n.$parent);)if(n._inactive)return!0;return!1}function nt(n,e){if(e){if(n._directInactive=!1,Xe(n))return}else if(n._directInactive)return;if(n._inactive||null===n._inactive){n._inactive=!1;for(var t=0;t<n.$children.length;t++)nt(n.$children[t]);et(n,"activated")}}function et(n,e){mn();var t=n.$options[e],r=e+" hook";if(t)for(var a=0,o=t.length;a<o;a++)Hn(t[a],n,null,n,r);n._hasHookEvent&&n.$emit("hook:"+e),fn()}var tt=[],rt=[],at={},ot=!1,it=!1,st=0;var lt=0,ct=Date.now;if(H&&!Q){var pt=window.performance;pt&&"function"==typeof pt.now&&ct()>document.createEvent("Event").timeStamp&&(ct=function(){return pt.now()})}function ut(){var n,e;for(lt=ct(),it=!0,tt.sort((function(n,e){return n.id-e.id})),st=0;st<tt.length;st++)(n=tt[st]).before&&n.before(),e=n.id,at[e]=null,n.run();var t=rt.slice(),r=tt.slice();st=tt.length=rt.length=0,at={},ot=it=!1,function(n){for(var e=0;e<n.length;e++)n[e]._inactive=!0,nt(n[e],!0)}(t),function(n){var e=n.length;for(;e--;){var t=n[e],r=t.vm;r._watcher===t&&r._isMounted&&!r._isDestroyed&&et(r,"updated")}}(r),an&&D.devtools&&an.emit("flush")}var dt=0,mt=function(n,e,t,r,a){this.vm=n,a&&(n._watcher=this),n._watchers.push(this),r?(this.deep=!!r.deep,this.user=!!r.user,this.lazy=!!r.lazy,this.sync=!!r.sync,this.before=r.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++dt,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new sn,this.newDepIds=new sn,this.expression="","function"==typeof e?this.getter=e:(this.getter=function(n){if(!V.test(n)){var e=n.split(".");return function(n){for(var t=0;t<e.length;t++){if(!n)return;n=n[e[t]]}return n}}}(e),this.getter||(this.getter=I)),this.value=this.lazy?void 0:this.get()};mt.prototype.get=function(){var n;mn(this);var e=this.vm;try{n=this.getter.call(e,e)}catch(n){if(!this.user)throw n;Un(n,e,'getter for watcher "'+this.expression+'"')}finally{this.deep&&oe(n),fn(),this.cleanupDeps()}return n},mt.prototype.addDep=function(n){var e=n.id;this.newDepIds.has(e)||(this.newDepIds.add(e),this.newDeps.push(n),this.depIds.has(e)||n.addSub(this))},mt.prototype.cleanupDeps=function(){for(var n=this.deps.length;n--;){var e=this.deps[n];this.newDepIds.has(e.id)||e.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},mt.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(n){var e=n.id;if(null==at[e]){if(at[e]=!0,it){for(var t=tt.length-1;t>st&&tt[t].id>n.id;)t--;tt.splice(t+1,0,n)}else tt.push(n);ot||(ot=!0,re(ut))}}(this)},mt.prototype.run=function(){if(this.active){var n=this.get();if(n!==this.value||l(n)||this.deep){var e=this.value;if(this.value=n,this.user){var t='callback for watcher "'+this.expression+'"';Hn(this.cb,this.vm,[n,e],this.vm,t)}else this.cb.call(this.vm,n,e)}}},mt.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},mt.prototype.depend=function(){for(var n=this.deps.length;n--;)this.deps[n].depend()},mt.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||y(this.vm._watchers,this);for(var n=this.deps.length;n--;)this.deps[n].removeSub(this);this.active=!1}};var ft={enumerable:!0,configurable:!0,get:I,set:I};function gt(n,e,t){ft.get=function(){return this[e][t]},ft.set=function(n){this[e][t]=n},Object.defineProperty(n,t,ft)}function ht(n){n._watchers=[];var e=n.$options;e.props&&function(n,e){var t=n.$options.propsData||{},r=n._props={},a=n.$options._propKeys=[];n.$parent&&En(!1);var o=function(o){a.push(o);var i=Dn(o,e,t,n);Tn(r,o,i),o in n||gt(n,"_props",o)};for(var i in e)o(i);En(!0)}(n,e.props),e.methods&&function(n,e){n.$options.props;for(var t in e)n[t]="function"!=typeof e[t]?I:T(e[t],n)}(n,e.methods),e.data?function(n){var e=n.$options.data;p(e=n._data="function"==typeof e?function(n,e){mn();try{return n.call(e,e)}catch(n){return Un(n,e,"data()"),{}}finally{fn()}}(e,n):e||{})||(e={});var t=Object.keys(e),r=n.$options.props,a=(n.$options.methods,t.length);for(;a--;){var o=t[a];0,r&&x(r,o)||(i=void 0,36!==(i=(o+"").charCodeAt(0))&&95!==i&&gt(n,"_data",o))}var i;Cn(e,!0)}(n):Cn(n._data={},!0),e.computed&&function(n,e){var t=n._computedWatchers=Object.create(null),r=rn();for(var a in e){var o=e[a],i="function"==typeof o?o:o.get;0,r||(t[a]=new mt(n,i||I,I,vt)),a in n||yt(n,a,o)}}(n,e.computed),e.watch&&e.watch!==nn&&function(n,e){for(var t in e){var r=e[t];if(Array.isArray(r))for(var a=0;a<r.length;a++)wt(n,t,r[a]);else wt(n,t,r)}}(n,e.watch)}var vt={lazy:!0};function yt(n,e,t){var r=!rn();"function"==typeof t?(ft.get=r?bt(e):xt(t),ft.set=I):(ft.get=t.get?r&&!1!==t.cache?bt(e):xt(t.get):I,ft.set=t.set||I),Object.defineProperty(n,e,ft)}function bt(n){return function(){var e=this._computedWatchers&&this._computedWatchers[n];if(e)return e.dirty&&e.evaluate(),un.target&&e.depend(),e.value}}function xt(n){return function(){return n.call(this,this)}}function wt(n,e,t,r){return p(t)&&(r=t,t=t.handler),"string"==typeof t&&(t=n[t]),n.$watch(e,t,r)}var kt=0;function St(n){var e=n.options;if(n.super){var t=St(n.super);if(t!==n.superOptions){n.superOptions=t;var r=function(n){var e,t=n.options,r=n.sealedOptions;for(var a in t)t[a]!==r[a]&&(e||(e={}),e[a]=t[a]);return e}(n);r&&A(n.extendOptions,r),(e=n.options=zn(t,n.extendOptions)).name&&(e.components[e.name]=n)}}return e}function Et(n){this._init(n)}function _t(n){n.cid=0;var e=1;n.extend=function(n){n=n||{};var t=this,r=t.cid,a=n._Ctor||(n._Ctor={});if(a[r])return a[r];var o=n.name||t.options.name;var i=function(n){this._init(n)};return(i.prototype=Object.create(t.prototype)).constructor=i,i.cid=e++,i.options=zn(t.options,n),i.super=t,i.options.props&&function(n){var e=n.options.props;for(var t in e)gt(n.prototype,"_props",t)}(i),i.options.computed&&function(n){var e=n.options.computed;for(var t in e)yt(n.prototype,t,e[t])}(i),i.extend=t.extend,i.mixin=t.mixin,i.use=t.use,z.forEach((function(n){i[n]=t[n]})),o&&(i.options.components[o]=i),i.superOptions=t.options,i.extendOptions=n,i.sealedOptions=A({},i.options),a[r]=i,i}}function Ct(n){return n&&(n.Ctor.options.name||n.tag)}function Tt(n,e){return Array.isArray(n)?n.indexOf(e)>-1:"string"==typeof n?n.split(",").indexOf(e)>-1:!!u(n)&&n.test(e)}function jt(n,e){var t=n.cache,r=n.keys,a=n._vnode;for(var o in t){var i=t[o];if(i){var s=i.name;s&&!e(s)&&At(t,o,r,a)}}}function At(n,e,t,r){var a=n[e];!a||r&&a.tag===r.tag||a.componentInstance.$destroy(),n[e]=null,y(t,e)}!function(n){n.prototype._init=function(n){var e=this;e._uid=kt++,e._isVue=!0,n&&n._isComponent?function(n,e){var t=n.$options=Object.create(n.constructor.options),r=e._parentVnode;t.parent=e.parent,t._parentVnode=r;var a=r.componentOptions;t.propsData=a.propsData,t._parentListeners=a.listeners,t._renderChildren=a.children,t._componentTag=a.tag,e.render&&(t.render=e.render,t.staticRenderFns=e.staticRenderFns)}(e,n):e.$options=zn(St(e.constructor),n||{},e),e._renderProxy=e,e._self=e,function(n){var e=n.$options,t=e.parent;if(t&&!e.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(n)}n.$parent=t,n.$root=t?t.$root:n,n.$children=[],n.$refs={},n._watcher=null,n._inactive=null,n._directInactive=!1,n._isMounted=!1,n._isDestroyed=!1,n._isBeingDestroyed=!1}(e),function(n){n._events=Object.create(null),n._hasHookEvent=!1;var e=n.$options._parentListeners;e&&Ke(n,e)}(e),function(n){n._vnode=null,n._staticTrees=null;var e=n.$options,t=n.$vnode=e._parentVnode,a=t&&t.context;n.$slots=fe(e._renderChildren,a),n.$scopedSlots=r,n._c=function(e,t,r,a){return Ve(n,e,t,r,a,!1)},n.$createElement=function(e,t,r,a){return Ve(n,e,t,r,a,!0)};var o=t&&t.data;Tn(n,"$attrs",o&&o.attrs||r,null,!0),Tn(n,"$listeners",e._parentListeners||r,null,!0)}(e),et(e,"beforeCreate"),function(n){var e=me(n.$options.inject,n);e&&(En(!1),Object.keys(e).forEach((function(t){Tn(n,t,e[t])})),En(!0))}(e),ht(e),function(n){var e=n.$options.provide;e&&(n._provided="function"==typeof e?e.call(n):e)}(e),et(e,"created"),e.$options.el&&e.$mount(e.$options.el)}}(Et),function(n){var e={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(n.prototype,"$data",e),Object.defineProperty(n.prototype,"$props",t),n.prototype.$set=jn,n.prototype.$delete=An,n.prototype.$watch=function(n,e,t){if(p(e))return wt(this,n,e,t);(t=t||{}).user=!0;var r=new mt(this,n,e,t);if(t.immediate){var a='callback for immediate watcher "'+r.expression+'"';mn(),Hn(e,this,[r.value],this,a),fn()}return function(){r.teardown()}}}(Et),function(n){var e=/^hook:/;n.prototype.$on=function(n,t){var r=this;if(Array.isArray(n))for(var a=0,o=n.length;a<o;a++)r.$on(n[a],t);else(r._events[n]||(r._events[n]=[])).push(t),e.test(n)&&(r._hasHookEvent=!0);return r},n.prototype.$once=function(n,e){var t=this;function r(){t.$off(n,r),e.apply(t,arguments)}return r.fn=e,t.$on(n,r),t},n.prototype.$off=function(n,e){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(Array.isArray(n)){for(var r=0,a=n.length;r<a;r++)t.$off(n[r],e);return t}var o,i=t._events[n];if(!i)return t;if(!e)return t._events[n]=null,t;for(var s=i.length;s--;)if((o=i[s])===e||o.fn===e){i.splice(s,1);break}return t},n.prototype.$emit=function(n){var e=this,t=e._events[n];if(t){t=t.length>1?j(t):t;for(var r=j(arguments,1),a='event handler for "'+n+'"',o=0,i=t.length;o<i;o++)Hn(t[o],e,r,e,a)}return e}}(Et),function(n){n.prototype._update=function(n,e){var t=this,r=t.$el,a=t._vnode,o=Ze(t);t._vnode=n,t.$el=a?t.__patch__(a,n):t.__patch__(t.$el,n,e,!1),o(),r&&(r.__vue__=null),t.$el&&(t.$el.__vue__=t),t.$vnode&&t.$parent&&t.$vnode===t.$parent._vnode&&(t.$parent.$el=t.$el)},n.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},n.prototype.$destroy=function(){var n=this;if(!n._isBeingDestroyed){et(n,"beforeDestroy"),n._isBeingDestroyed=!0;var e=n.$parent;!e||e._isBeingDestroyed||n.$options.abstract||y(e.$children,n),n._watcher&&n._watcher.teardown();for(var t=n._watchers.length;t--;)n._watchers[t].teardown();n._data.__ob__&&n._data.__ob__.vmCount--,n._isDestroyed=!0,n.__patch__(n._vnode,null),et(n,"destroyed"),n.$off(),n.$el&&(n.$el.__vue__=null),n.$vnode&&(n.$vnode.parent=null)}}}(Et),function(n){Re(n.prototype),n.prototype.$nextTick=function(n){return re(n,this)},n.prototype._render=function(){var n,e=this,t=e.$options,r=t.render,a=t._parentVnode;a&&(e.$scopedSlots=ve(a.data.scopedSlots,e.$slots,e.$scopedSlots)),e.$vnode=a;try{Ue=e,n=r.call(e._renderProxy,e.$createElement)}catch(t){Un(t,e,"render"),n=e._vnode}finally{Ue=null}return Array.isArray(n)&&1===n.length&&(n=n[0]),n instanceof gn||(n=vn()),n.parent=a,n}}(Et);var Mt=[String,RegExp,Array],It={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:Mt,exclude:Mt,max:[String,Number]},methods:{cacheVNode:function(){var n=this.cache,e=this.keys,t=this.vnodeToCache,r=this.keyToCache;if(t){var a=t.tag,o=t.componentInstance,i=t.componentOptions;n[r]={name:Ct(i),tag:a,componentInstance:o},e.push(r),this.max&&e.length>parseInt(this.max)&&At(n,e[0],e,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var n in this.cache)At(this.cache,n,this.keys)},mounted:function(){var n=this;this.cacheVNode(),this.$watch("include",(function(e){jt(n,(function(n){return Tt(e,n)}))})),this.$watch("exclude",(function(e){jt(n,(function(n){return!Tt(e,n)}))}))},updated:function(){this.cacheVNode()},render:function(){var n=this.$slots.default,e=Je(n),t=e&&e.componentOptions;if(t){var r=Ct(t),a=this.include,o=this.exclude;if(a&&(!r||!Tt(a,r))||o&&r&&Tt(o,r))return e;var i=this.cache,s=this.keys,l=null==e.key?t.Ctor.cid+(t.tag?"::"+t.tag:""):e.key;i[l]?(e.componentInstance=i[l].componentInstance,y(s,l),s.push(l)):(this.vnodeToCache=e,this.keyToCache=l),e.data.keepAlive=!0}return e||n&&n[0]}}};!function(n){var e={get:function(){return D}};Object.defineProperty(n,"config",e),n.util={warn:cn,extend:A,mergeOptions:zn,defineReactive:Tn},n.set=jn,n.delete=An,n.nextTick=re,n.observable=function(n){return Cn(n),n},n.options=Object.create(null),z.forEach((function(e){n.options[e+"s"]=Object.create(null)})),n.options._base=n,A(n.options.components,It),function(n){n.use=function(n){var e=this._installedPlugins||(this._installedPlugins=[]);if(e.indexOf(n)>-1)return this;var t=j(arguments,1);return t.unshift(this),"function"==typeof n.install?n.install.apply(n,t):"function"==typeof n&&n.apply(null,t),e.push(n),this}}(n),function(n){n.mixin=function(n){return this.options=zn(this.options,n),this}}(n),_t(n),function(n){z.forEach((function(e){n[e]=function(n,t){return t?("component"===e&&p(t)&&(t.name=t.name||n,t=this.options._base.extend(t)),"directive"===e&&"function"==typeof t&&(t={bind:t,update:t}),this.options[e+"s"][n]=t,t):this.options[e+"s"][n]}}))}(n)}(Et),Object.defineProperty(Et.prototype,"$isServer",{get:rn}),Object.defineProperty(Et.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(Et,"FunctionalRenderContext",{value:Be}),Et.version="2.6.14";var Ot=h("style,class"),Pt=h("input,textarea,option,select,progress"),Rt=h("contenteditable,draggable,spellcheck"),Bt=h("events,caret,typing,plaintext-only"),qt=h("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),zt="http://www.w3.org/1999/xlink",Lt=function(n){return":"===n.charAt(5)&&"xlink"===n.slice(0,5)},Dt=function(n){return Lt(n)?n.slice(6,n.length):""},Nt=function(n){return null==n||!1===n};function Ft(n){for(var e=n.data,t=n,r=n;o(r.componentInstance);)(r=r.componentInstance._vnode)&&r.data&&(e=Vt(r.data,e));for(;o(t=t.parent);)t&&t.data&&(e=Vt(e,t.data));return function(n,e){if(o(n)||o(e))return $t(n,Ut(e));return""}(e.staticClass,e.class)}function Vt(n,e){return{staticClass:$t(n.staticClass,e.staticClass),class:o(n.class)?[n.class,e.class]:e.class}}function $t(n,e){return n?e?n+" "+e:n:e||""}function Ut(n){return Array.isArray(n)?function(n){for(var e,t="",r=0,a=n.length;r<a;r++)o(e=Ut(n[r]))&&""!==e&&(t&&(t+=" "),t+=e);return t}(n):l(n)?function(n){var e="";for(var t in n)n[t]&&(e&&(e+=" "),e+=t);return e}(n):"string"==typeof n?n:""}var Ht={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Jt=h("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Wt=h("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Gt=function(n){return Jt(n)||Wt(n)};var Qt=Object.create(null);var Kt=h("text,number,password,search,email,tel,url");var Yt=Object.freeze({createElement:function(n,e){var t=document.createElement(n);return"select"!==n||e.data&&e.data.attrs&&void 0!==e.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(n,e){return document.createElementNS(Ht[n],e)},createTextNode:function(n){return document.createTextNode(n)},createComment:function(n){return document.createComment(n)},insertBefore:function(n,e,t){n.insertBefore(e,t)},removeChild:function(n,e){n.removeChild(e)},appendChild:function(n,e){n.appendChild(e)},parentNode:function(n){return n.parentNode},nextSibling:function(n){return n.nextSibling},tagName:function(n){return n.tagName},setTextContent:function(n,e){n.textContent=e},setStyleScope:function(n,e){n.setAttribute(e,"")}}),Zt={create:function(n,e){Xt(e)},update:function(n,e){n.data.ref!==e.data.ref&&(Xt(n,!0),Xt(e))},destroy:function(n){Xt(n,!0)}};function Xt(n,e){var t=n.data.ref;if(o(t)){var r=n.context,a=n.componentInstance||n.elm,i=r.$refs;e?Array.isArray(i[t])?y(i[t],a):i[t]===a&&(i[t]=void 0):n.data.refInFor?Array.isArray(i[t])?i[t].indexOf(a)<0&&i[t].push(a):i[t]=[a]:i[t]=a}}var nr=new gn("",{},[]),er=["create","activate","update","remove","destroy"];function tr(n,e){return n.key===e.key&&n.asyncFactory===e.asyncFactory&&(n.tag===e.tag&&n.isComment===e.isComment&&o(n.data)===o(e.data)&&function(n,e){if("input"!==n.tag)return!0;var t,r=o(t=n.data)&&o(t=t.attrs)&&t.type,a=o(t=e.data)&&o(t=t.attrs)&&t.type;return r===a||Kt(r)&&Kt(a)}(n,e)||i(n.isAsyncPlaceholder)&&a(e.asyncFactory.error))}function rr(n,e,t){var r,a,i={};for(r=e;r<=t;++r)o(a=n[r].key)&&(i[a]=r);return i}var ar={create:or,update:or,destroy:function(n){or(n,nr)}};function or(n,e){(n.data.directives||e.data.directives)&&function(n,e){var t,r,a,o=n===nr,i=e===nr,s=sr(n.data.directives,n.context),l=sr(e.data.directives,e.context),c=[],p=[];for(t in l)r=s[t],a=l[t],r?(a.oldValue=r.value,a.oldArg=r.arg,cr(a,"update",e,n),a.def&&a.def.componentUpdated&&p.push(a)):(cr(a,"bind",e,n),a.def&&a.def.inserted&&c.push(a));if(c.length){var u=function(){for(var t=0;t<c.length;t++)cr(c[t],"inserted",e,n)};o?ce(e,"insert",u):u()}p.length&&ce(e,"postpatch",(function(){for(var t=0;t<p.length;t++)cr(p[t],"componentUpdated",e,n)}));if(!o)for(t in s)l[t]||cr(s[t],"unbind",n,n,i)}(n,e)}var ir=Object.create(null);function sr(n,e){var t,r,a=Object.create(null);if(!n)return a;for(t=0;t<n.length;t++)(r=n[t]).modifiers||(r.modifiers=ir),a[lr(r)]=r,r.def=Ln(e.$options,"directives",r.name);return a}function lr(n){return n.rawName||n.name+"."+Object.keys(n.modifiers||{}).join(".")}function cr(n,e,t,r,a){var o=n.def&&n.def[e];if(o)try{o(t.elm,n,t,r,a)}catch(r){Un(r,t.context,"directive "+n.name+" "+e+" hook")}}var pr=[Zt,ar];function ur(n,e){var t=e.componentOptions;if(!(o(t)&&!1===t.Ctor.options.inheritAttrs||a(n.data.attrs)&&a(e.data.attrs))){var r,i,s=e.elm,l=n.data.attrs||{},c=e.data.attrs||{};for(r in o(c.__ob__)&&(c=e.data.attrs=A({},c)),c)i=c[r],l[r]!==i&&dr(s,r,i,e.data.pre);for(r in(Q||Y)&&c.value!==l.value&&dr(s,"value",c.value),l)a(c[r])&&(Lt(r)?s.removeAttributeNS(zt,Dt(r)):Rt(r)||s.removeAttribute(r))}}function dr(n,e,t,r){r||n.tagName.indexOf("-")>-1?mr(n,e,t):qt(e)?Nt(t)?n.removeAttribute(e):(t="allowfullscreen"===e&&"EMBED"===n.tagName?"true":e,n.setAttribute(e,t)):Rt(e)?n.setAttribute(e,function(n,e){return Nt(e)||"false"===e?"false":"contenteditable"===n&&Bt(e)?e:"true"}(e,t)):Lt(e)?Nt(t)?n.removeAttributeNS(zt,Dt(e)):n.setAttributeNS(zt,e,t):mr(n,e,t)}function mr(n,e,t){if(Nt(t))n.removeAttribute(e);else{if(Q&&!K&&"TEXTAREA"===n.tagName&&"placeholder"===e&&""!==t&&!n.__ieph){var r=function(e){e.stopImmediatePropagation(),n.removeEventListener("input",r)};n.addEventListener("input",r),n.__ieph=!0}n.setAttribute(e,t)}}var fr={create:ur,update:ur};function gr(n,e){var t=e.elm,r=e.data,i=n.data;if(!(a(r.staticClass)&&a(r.class)&&(a(i)||a(i.staticClass)&&a(i.class)))){var s=Ft(e),l=t._transitionClasses;o(l)&&(s=$t(s,Ut(l))),s!==t._prevClass&&(t.setAttribute("class",s),t._prevClass=s)}}var hr,vr={create:gr,update:gr};function yr(n,e,t){var r=hr;return function a(){var o=e.apply(null,arguments);null!==o&&wr(n,a,t,r)}}var br=Qn&&!(X&&Number(X[1])<=53);function xr(n,e,t,r){if(br){var a=lt,o=e;e=o._wrapper=function(n){if(n.target===n.currentTarget||n.timeStamp>=a||n.timeStamp<=0||n.target.ownerDocument!==document)return o.apply(this,arguments)}}hr.addEventListener(n,e,en?{capture:t,passive:r}:t)}function wr(n,e,t,r){(r||hr).removeEventListener(n,e._wrapper||e,t)}function kr(n,e){if(!a(n.data.on)||!a(e.data.on)){var t=e.data.on||{},r=n.data.on||{};hr=e.elm,function(n){if(o(n.__r)){var e=Q?"change":"input";n[e]=[].concat(n.__r,n[e]||[]),delete n.__r}o(n.__c)&&(n.change=[].concat(n.__c,n.change||[]),delete n.__c)}(t),le(t,r,xr,wr,yr,e.context),hr=void 0}}var Sr,Er={create:kr,update:kr};function _r(n,e){if(!a(n.data.domProps)||!a(e.data.domProps)){var t,r,i=e.elm,s=n.data.domProps||{},l=e.data.domProps||{};for(t in o(l.__ob__)&&(l=e.data.domProps=A({},l)),s)t in l||(i[t]="");for(t in l){if(r=l[t],"textContent"===t||"innerHTML"===t){if(e.children&&(e.children.length=0),r===s[t])continue;1===i.childNodes.length&&i.removeChild(i.childNodes[0])}if("value"===t&&"PROGRESS"!==i.tagName){i._value=r;var c=a(r)?"":String(r);Cr(i,c)&&(i.value=c)}else if("innerHTML"===t&&Wt(i.tagName)&&a(i.innerHTML)){(Sr=Sr||document.createElement("div")).innerHTML="<svg>"+r+"</svg>";for(var p=Sr.firstChild;i.firstChild;)i.removeChild(i.firstChild);for(;p.firstChild;)i.appendChild(p.firstChild)}else if(r!==s[t])try{i[t]=r}catch(n){}}}}function Cr(n,e){return!n.composing&&("OPTION"===n.tagName||function(n,e){var t=!0;try{t=document.activeElement!==n}catch(n){}return t&&n.value!==e}(n,e)||function(n,e){var t=n.value,r=n._vModifiers;if(o(r)){if(r.number)return g(t)!==g(e);if(r.trim)return t.trim()!==e.trim()}return t!==e}(n,e))}var Tr={create:_r,update:_r},jr=w((function(n){var e={},t=/:(.+)/;return n.split(/;(?![^(]*\))/g).forEach((function(n){if(n){var r=n.split(t);r.length>1&&(e[r[0].trim()]=r[1].trim())}})),e}));function Ar(n){var e=Mr(n.style);return n.staticStyle?A(n.staticStyle,e):e}function Mr(n){return Array.isArray(n)?M(n):"string"==typeof n?jr(n):n}var Ir,Or=/^--/,Pr=/\s*!important$/,Rr=function(n,e,t){if(Or.test(e))n.style.setProperty(e,t);else if(Pr.test(t))n.style.setProperty(C(e),t.replace(Pr,""),"important");else{var r=qr(e);if(Array.isArray(t))for(var a=0,o=t.length;a<o;a++)n.style[r]=t[a];else n.style[r]=t}},Br=["Webkit","Moz","ms"],qr=w((function(n){if(Ir=Ir||document.createElement("div").style,"filter"!==(n=S(n))&&n in Ir)return n;for(var e=n.charAt(0).toUpperCase()+n.slice(1),t=0;t<Br.length;t++){var r=Br[t]+e;if(r in Ir)return r}}));function zr(n,e){var t=e.data,r=n.data;if(!(a(t.staticStyle)&&a(t.style)&&a(r.staticStyle)&&a(r.style))){var i,s,l=e.elm,c=r.staticStyle,p=r.normalizedStyle||r.style||{},u=c||p,d=Mr(e.data.style)||{};e.data.normalizedStyle=o(d.__ob__)?A({},d):d;var m=function(n,e){var t,r={};if(e)for(var a=n;a.componentInstance;)(a=a.componentInstance._vnode)&&a.data&&(t=Ar(a.data))&&A(r,t);(t=Ar(n.data))&&A(r,t);for(var o=n;o=o.parent;)o.data&&(t=Ar(o.data))&&A(r,t);return r}(e,!0);for(s in u)a(m[s])&&Rr(l,s,"");for(s in m)(i=m[s])!==u[s]&&Rr(l,s,null==i?"":i)}}var Lr={create:zr,update:zr},Dr=/\s+/;function Nr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Dr).forEach((function(e){return n.classList.add(e)})):n.classList.add(e);else{var t=" "+(n.getAttribute("class")||"")+" ";t.indexOf(" "+e+" ")<0&&n.setAttribute("class",(t+e).trim())}}function Fr(n,e){if(e&&(e=e.trim()))if(n.classList)e.indexOf(" ")>-1?e.split(Dr).forEach((function(e){return n.classList.remove(e)})):n.classList.remove(e),n.classList.length||n.removeAttribute("class");else{for(var t=" "+(n.getAttribute("class")||"")+" ",r=" "+e+" ";t.indexOf(r)>=0;)t=t.replace(r," ");(t=t.trim())?n.setAttribute("class",t):n.removeAttribute("class")}}function Vr(n){if(n){if("object"==typeof n){var e={};return!1!==n.css&&A(e,$r(n.name||"v")),A(e,n),e}return"string"==typeof n?$r(n):void 0}}var $r=w((function(n){return{enterClass:n+"-enter",enterToClass:n+"-enter-to",enterActiveClass:n+"-enter-active",leaveClass:n+"-leave",leaveToClass:n+"-leave-to",leaveActiveClass:n+"-leave-active"}})),Ur=H&&!K,Hr="transition",Jr="transitionend",Wr="animation",Gr="animationend";Ur&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Hr="WebkitTransition",Jr="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(Wr="WebkitAnimation",Gr="webkitAnimationEnd"));var Qr=H?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(n){return n()};function Kr(n){Qr((function(){Qr(n)}))}function Yr(n,e){var t=n._transitionClasses||(n._transitionClasses=[]);t.indexOf(e)<0&&(t.push(e),Nr(n,e))}function Zr(n,e){n._transitionClasses&&y(n._transitionClasses,e),Fr(n,e)}function Xr(n,e,t){var r=ea(n,e),a=r.type,o=r.timeout,i=r.propCount;if(!a)return t();var s="transition"===a?Jr:Gr,l=0,c=function(){n.removeEventListener(s,p),t()},p=function(e){e.target===n&&++l>=i&&c()};setTimeout((function(){l<i&&c()}),o+1),n.addEventListener(s,p)}var na=/\b(transform|all)(,|$)/;function ea(n,e){var t,r=window.getComputedStyle(n),a=(r[Hr+"Delay"]||"").split(", "),o=(r[Hr+"Duration"]||"").split(", "),i=ta(a,o),s=(r[Wr+"Delay"]||"").split(", "),l=(r[Wr+"Duration"]||"").split(", "),c=ta(s,l),p=0,u=0;return"transition"===e?i>0&&(t="transition",p=i,u=o.length):"animation"===e?c>0&&(t="animation",p=c,u=l.length):u=(t=(p=Math.max(i,c))>0?i>c?"transition":"animation":null)?"transition"===t?o.length:l.length:0,{type:t,timeout:p,propCount:u,hasTransform:"transition"===t&&na.test(r[Hr+"Property"])}}function ta(n,e){for(;n.length<e.length;)n=n.concat(n);return Math.max.apply(null,e.map((function(e,t){return ra(e)+ra(n[t])})))}function ra(n){return 1e3*Number(n.slice(0,-1).replace(",","."))}function aa(n,e){var t=n.elm;o(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var r=Vr(n.data.transition);if(!a(r)&&!o(t._enterCb)&&1===t.nodeType){for(var i=r.css,s=r.type,c=r.enterClass,p=r.enterToClass,u=r.enterActiveClass,d=r.appearClass,m=r.appearToClass,f=r.appearActiveClass,h=r.beforeEnter,v=r.enter,y=r.afterEnter,b=r.enterCancelled,x=r.beforeAppear,w=r.appear,k=r.afterAppear,S=r.appearCancelled,E=r.duration,_=Ye,C=Ye.$vnode;C&&C.parent;)_=C.context,C=C.parent;var T=!_._isMounted||!n.isRootInsert;if(!T||w||""===w){var j=T&&d?d:c,A=T&&f?f:u,M=T&&m?m:p,I=T&&x||h,O=T&&"function"==typeof w?w:v,P=T&&k||y,R=T&&S||b,B=g(l(E)?E.enter:E);0;var z=!1!==i&&!K,L=sa(O),D=t._enterCb=q((function(){z&&(Zr(t,M),Zr(t,A)),D.cancelled?(z&&Zr(t,j),R&&R(t)):P&&P(t),t._enterCb=null}));n.data.show||ce(n,"insert",(function(){var e=t.parentNode,r=e&&e._pending&&e._pending[n.key];r&&r.tag===n.tag&&r.elm._leaveCb&&r.elm._leaveCb(),O&&O(t,D)})),I&&I(t),z&&(Yr(t,j),Yr(t,A),Kr((function(){Zr(t,j),D.cancelled||(Yr(t,M),L||(ia(B)?setTimeout(D,B):Xr(t,s,D)))}))),n.data.show&&(e&&e(),O&&O(t,D)),z||L||D()}}}function oa(n,e){var t=n.elm;o(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var r=Vr(n.data.transition);if(a(r)||1!==t.nodeType)return e();if(!o(t._leaveCb)){var i=r.css,s=r.type,c=r.leaveClass,p=r.leaveToClass,u=r.leaveActiveClass,d=r.beforeLeave,m=r.leave,f=r.afterLeave,h=r.leaveCancelled,v=r.delayLeave,y=r.duration,b=!1!==i&&!K,x=sa(m),w=g(l(y)?y.leave:y);0;var k=t._leaveCb=q((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[n.key]=null),b&&(Zr(t,p),Zr(t,u)),k.cancelled?(b&&Zr(t,c),h&&h(t)):(e(),f&&f(t)),t._leaveCb=null}));v?v(S):S()}function S(){k.cancelled||(!n.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[n.key]=n),d&&d(t),b&&(Yr(t,c),Yr(t,u),Kr((function(){Zr(t,c),k.cancelled||(Yr(t,p),x||(ia(w)?setTimeout(k,w):Xr(t,s,k)))}))),m&&m(t,k),b||x||k())}}function ia(n){return"number"==typeof n&&!isNaN(n)}function sa(n){if(a(n))return!1;var e=n.fns;return o(e)?sa(Array.isArray(e)?e[0]:e):(n._length||n.length)>1}function la(n,e){!0!==e.data.show&&aa(e)}var ca=function(n){var e,t,r={},l=n.modules,c=n.nodeOps;for(e=0;e<er.length;++e)for(r[er[e]]=[],t=0;t<l.length;++t)o(l[t][er[e]])&&r[er[e]].push(l[t][er[e]]);function p(n){var e=c.parentNode(n);o(e)&&c.removeChild(e,n)}function u(n,e,t,a,s,l,p){if(o(n.elm)&&o(l)&&(n=l[p]=bn(n)),n.isRootInsert=!s,!function(n,e,t,a){var s=n.data;if(o(s)){var l=o(n.componentInstance)&&s.keepAlive;if(o(s=s.hook)&&o(s=s.init)&&s(n,!1),o(n.componentInstance))return d(n,e),m(t,n.elm,a),i(l)&&function(n,e,t,a){var i,s=n;for(;s.componentInstance;)if(s=s.componentInstance._vnode,o(i=s.data)&&o(i=i.transition)){for(i=0;i<r.activate.length;++i)r.activate[i](nr,s);e.push(s);break}m(t,n.elm,a)}(n,e,t,a),!0}}(n,e,t,a)){var u=n.data,g=n.children,h=n.tag;o(h)?(n.elm=n.ns?c.createElementNS(n.ns,h):c.createElement(h,n),y(n),f(n,g,e),o(u)&&v(n,e),m(t,n.elm,a)):i(n.isComment)?(n.elm=c.createComment(n.text),m(t,n.elm,a)):(n.elm=c.createTextNode(n.text),m(t,n.elm,a))}}function d(n,e){o(n.data.pendingInsert)&&(e.push.apply(e,n.data.pendingInsert),n.data.pendingInsert=null),n.elm=n.componentInstance.$el,g(n)?(v(n,e),y(n)):(Xt(n),e.push(n))}function m(n,e,t){o(n)&&(o(t)?c.parentNode(t)===n&&c.insertBefore(n,e,t):c.appendChild(n,e))}function f(n,e,t){if(Array.isArray(e)){0;for(var r=0;r<e.length;++r)u(e[r],t,n.elm,null,!0,e,r)}else s(n.text)&&c.appendChild(n.elm,c.createTextNode(String(n.text)))}function g(n){for(;n.componentInstance;)n=n.componentInstance._vnode;return o(n.tag)}function v(n,t){for(var a=0;a<r.create.length;++a)r.create[a](nr,n);o(e=n.data.hook)&&(o(e.create)&&e.create(nr,n),o(e.insert)&&t.push(n))}function y(n){var e;if(o(e=n.fnScopeId))c.setStyleScope(n.elm,e);else for(var t=n;t;)o(e=t.context)&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e),t=t.parent;o(e=Ye)&&e!==n.context&&e!==n.fnContext&&o(e=e.$options._scopeId)&&c.setStyleScope(n.elm,e)}function b(n,e,t,r,a,o){for(;r<=a;++r)u(t[r],o,n,e,!1,t,r)}function x(n){var e,t,a=n.data;if(o(a))for(o(e=a.hook)&&o(e=e.destroy)&&e(n),e=0;e<r.destroy.length;++e)r.destroy[e](n);if(o(e=n.children))for(t=0;t<n.children.length;++t)x(n.children[t])}function w(n,e,t){for(;e<=t;++e){var r=n[e];o(r)&&(o(r.tag)?(k(r),x(r)):p(r.elm))}}function k(n,e){if(o(e)||o(n.data)){var t,a=r.remove.length+1;for(o(e)?e.listeners+=a:e=function(n,e){function t(){0==--t.listeners&&p(n)}return t.listeners=e,t}(n.elm,a),o(t=n.componentInstance)&&o(t=t._vnode)&&o(t.data)&&k(t,e),t=0;t<r.remove.length;++t)r.remove[t](n,e);o(t=n.data.hook)&&o(t=t.remove)?t(n,e):e()}else p(n.elm)}function S(n,e,t,r){for(var a=t;a<r;a++){var i=e[a];if(o(i)&&tr(n,i))return a}}function E(n,e,t,s,l,p){if(n!==e){o(e.elm)&&o(s)&&(e=s[l]=bn(e));var d=e.elm=n.elm;if(i(n.isAsyncPlaceholder))o(e.asyncFactory.resolved)?T(n.elm,e,t):e.isAsyncPlaceholder=!0;else if(i(e.isStatic)&&i(n.isStatic)&&e.key===n.key&&(i(e.isCloned)||i(e.isOnce)))e.componentInstance=n.componentInstance;else{var m,f=e.data;o(f)&&o(m=f.hook)&&o(m=m.prepatch)&&m(n,e);var h=n.children,v=e.children;if(o(f)&&g(e)){for(m=0;m<r.update.length;++m)r.update[m](n,e);o(m=f.hook)&&o(m=m.update)&&m(n,e)}a(e.text)?o(h)&&o(v)?h!==v&&function(n,e,t,r,i){var s,l,p,d=0,m=0,f=e.length-1,g=e[0],h=e[f],v=t.length-1,y=t[0],x=t[v],k=!i;for(0;d<=f&&m<=v;)a(g)?g=e[++d]:a(h)?h=e[--f]:tr(g,y)?(E(g,y,r,t,m),g=e[++d],y=t[++m]):tr(h,x)?(E(h,x,r,t,v),h=e[--f],x=t[--v]):tr(g,x)?(E(g,x,r,t,v),k&&c.insertBefore(n,g.elm,c.nextSibling(h.elm)),g=e[++d],x=t[--v]):tr(h,y)?(E(h,y,r,t,m),k&&c.insertBefore(n,h.elm,g.elm),h=e[--f],y=t[++m]):(a(s)&&(s=rr(e,d,f)),a(l=o(y.key)?s[y.key]:S(y,e,d,f))?u(y,r,n,g.elm,!1,t,m):tr(p=e[l],y)?(E(p,y,r,t,m),e[l]=void 0,k&&c.insertBefore(n,p.elm,g.elm)):u(y,r,n,g.elm,!1,t,m),y=t[++m]);d>f?b(n,a(t[v+1])?null:t[v+1].elm,t,m,v,r):m>v&&w(e,d,f)}(d,h,v,t,p):o(v)?(o(n.text)&&c.setTextContent(d,""),b(d,null,v,0,v.length-1,t)):o(h)?w(h,0,h.length-1):o(n.text)&&c.setTextContent(d,""):n.text!==e.text&&c.setTextContent(d,e.text),o(f)&&o(m=f.hook)&&o(m=m.postpatch)&&m(n,e)}}}function _(n,e,t){if(i(t)&&o(n.parent))n.parent.data.pendingInsert=e;else for(var r=0;r<e.length;++r)e[r].data.hook.insert(e[r])}var C=h("attrs,class,staticClass,staticStyle,key");function T(n,e,t,r){var a,s=e.tag,l=e.data,c=e.children;if(r=r||l&&l.pre,e.elm=n,i(e.isComment)&&o(e.asyncFactory))return e.isAsyncPlaceholder=!0,!0;if(o(l)&&(o(a=l.hook)&&o(a=a.init)&&a(e,!0),o(a=e.componentInstance)))return d(e,t),!0;if(o(s)){if(o(c))if(n.hasChildNodes())if(o(a=l)&&o(a=a.domProps)&&o(a=a.innerHTML)){if(a!==n.innerHTML)return!1}else{for(var p=!0,u=n.firstChild,m=0;m<c.length;m++){if(!u||!T(u,c[m],t,r)){p=!1;break}u=u.nextSibling}if(!p||u)return!1}else f(e,c,t);if(o(l)){var g=!1;for(var h in l)if(!C(h)){g=!0,v(e,t);break}!g&&l.class&&oe(l.class)}}else n.data!==e.text&&(n.data=e.text);return!0}return function(n,e,t,s){if(!a(e)){var l,p=!1,d=[];if(a(n))p=!0,u(e,d);else{var m=o(n.nodeType);if(!m&&tr(n,e))E(n,e,d,null,null,s);else{if(m){if(1===n.nodeType&&n.hasAttribute("data-server-rendered")&&(n.removeAttribute("data-server-rendered"),t=!0),i(t)&&T(n,e,d))return _(e,d,!0),n;l=n,n=new gn(c.tagName(l).toLowerCase(),{},[],void 0,l)}var f=n.elm,h=c.parentNode(f);if(u(e,d,f._leaveCb?null:h,c.nextSibling(f)),o(e.parent))for(var v=e.parent,y=g(e);v;){for(var b=0;b<r.destroy.length;++b)r.destroy[b](v);if(v.elm=e.elm,y){for(var k=0;k<r.create.length;++k)r.create[k](nr,v);var S=v.data.hook.insert;if(S.merged)for(var C=1;C<S.fns.length;C++)S.fns[C]()}else Xt(v);v=v.parent}o(h)?w([n],0,0):o(n.tag)&&x(n)}}return _(e,d,p),e.elm}o(n)&&x(n)}}({nodeOps:Yt,modules:[fr,vr,Er,Tr,Lr,H?{create:la,activate:la,remove:function(n,e){!0!==n.data.show?oa(n,e):e()}}:{}].concat(pr)});K&&document.addEventListener("selectionchange",(function(){var n=document.activeElement;n&&n.vmodel&&va(n,"input")}));var pa={inserted:function(n,e,t,r){"select"===t.tag?(r.elm&&!r.elm._vOptions?ce(t,"postpatch",(function(){pa.componentUpdated(n,e,t)})):ua(n,e,t.context),n._vOptions=[].map.call(n.options,fa)):("textarea"===t.tag||Kt(n.type))&&(n._vModifiers=e.modifiers,e.modifiers.lazy||(n.addEventListener("compositionstart",ga),n.addEventListener("compositionend",ha),n.addEventListener("change",ha),K&&(n.vmodel=!0)))},componentUpdated:function(n,e,t){if("select"===t.tag){ua(n,e,t.context);var r=n._vOptions,a=n._vOptions=[].map.call(n.options,fa);if(a.some((function(n,e){return!R(n,r[e])})))(n.multiple?e.value.some((function(n){return ma(n,a)})):e.value!==e.oldValue&&ma(e.value,a))&&va(n,"change")}}};function ua(n,e,t){da(n,e,t),(Q||Y)&&setTimeout((function(){da(n,e,t)}),0)}function da(n,e,t){var r=e.value,a=n.multiple;if(!a||Array.isArray(r)){for(var o,i,s=0,l=n.options.length;s<l;s++)if(i=n.options[s],a)o=B(r,fa(i))>-1,i.selected!==o&&(i.selected=o);else if(R(fa(i),r))return void(n.selectedIndex!==s&&(n.selectedIndex=s));a||(n.selectedIndex=-1)}}function ma(n,e){return e.every((function(e){return!R(e,n)}))}function fa(n){return"_value"in n?n._value:n.value}function ga(n){n.target.composing=!0}function ha(n){n.target.composing&&(n.target.composing=!1,va(n.target,"input"))}function va(n,e){var t=document.createEvent("HTMLEvents");t.initEvent(e,!0,!0),n.dispatchEvent(t)}function ya(n){return!n.componentInstance||n.data&&n.data.transition?n:ya(n.componentInstance._vnode)}var ba={model:pa,show:{bind:function(n,e,t){var r=e.value,a=(t=ya(t)).data&&t.data.transition,o=n.__vOriginalDisplay="none"===n.style.display?"":n.style.display;r&&a?(t.data.show=!0,aa(t,(function(){n.style.display=o}))):n.style.display=r?o:"none"},update:function(n,e,t){var r=e.value;!r!=!e.oldValue&&((t=ya(t)).data&&t.data.transition?(t.data.show=!0,r?aa(t,(function(){n.style.display=n.__vOriginalDisplay})):oa(t,(function(){n.style.display="none"}))):n.style.display=r?n.__vOriginalDisplay:"none")},unbind:function(n,e,t,r,a){a||(n.style.display=n.__vOriginalDisplay)}}},xa={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function wa(n){var e=n&&n.componentOptions;return e&&e.Ctor.options.abstract?wa(Je(e.children)):n}function ka(n){var e={},t=n.$options;for(var r in t.propsData)e[r]=n[r];var a=t._parentListeners;for(var o in a)e[S(o)]=a[o];return e}function Sa(n,e){if(/\d-keep-alive$/.test(e.tag))return n("keep-alive",{props:e.componentOptions.propsData})}var Ea=function(n){return n.tag||he(n)},_a=function(n){return"show"===n.name},Ca={name:"transition",props:xa,abstract:!0,render:function(n){var e=this,t=this.$slots.default;if(t&&(t=t.filter(Ea)).length){0;var r=this.mode;0;var a=t[0];if(function(n){for(;n=n.parent;)if(n.data.transition)return!0}(this.$vnode))return a;var o=wa(a);if(!o)return a;if(this._leaving)return Sa(n,a);var i="__transition-"+this._uid+"-";o.key=null==o.key?o.isComment?i+"comment":i+o.tag:s(o.key)?0===String(o.key).indexOf(i)?o.key:i+o.key:o.key;var l=(o.data||(o.data={})).transition=ka(this),c=this._vnode,p=wa(c);if(o.data.directives&&o.data.directives.some(_a)&&(o.data.show=!0),p&&p.data&&!function(n,e){return e.key===n.key&&e.tag===n.tag}(o,p)&&!he(p)&&(!p.componentInstance||!p.componentInstance._vnode.isComment)){var u=p.data.transition=A({},l);if("out-in"===r)return this._leaving=!0,ce(u,"afterLeave",(function(){e._leaving=!1,e.$forceUpdate()})),Sa(n,a);if("in-out"===r){if(he(o))return c;var d,m=function(){d()};ce(l,"afterEnter",m),ce(l,"enterCancelled",m),ce(u,"delayLeave",(function(n){d=n}))}}return a}}},Ta=A({tag:String,moveClass:String},xa);function ja(n){n.elm._moveCb&&n.elm._moveCb(),n.elm._enterCb&&n.elm._enterCb()}function Aa(n){n.data.newPos=n.elm.getBoundingClientRect()}function Ma(n){var e=n.data.pos,t=n.data.newPos,r=e.left-t.left,a=e.top-t.top;if(r||a){n.data.moved=!0;var o=n.elm.style;o.transform=o.WebkitTransform="translate("+r+"px,"+a+"px)",o.transitionDuration="0s"}}delete Ta.mode;var Ia={Transition:Ca,TransitionGroup:{props:Ta,beforeMount:function(){var n=this,e=this._update;this._update=function(t,r){var a=Ze(n);n.__patch__(n._vnode,n.kept,!1,!0),n._vnode=n.kept,a(),e.call(n,t,r)}},render:function(n){for(var e=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),r=this.prevChildren=this.children,a=this.$slots.default||[],o=this.children=[],i=ka(this),s=0;s<a.length;s++){var l=a[s];if(l.tag)if(null!=l.key&&0!==String(l.key).indexOf("__vlist"))o.push(l),t[l.key]=l,(l.data||(l.data={})).transition=i;else;}if(r){for(var c=[],p=[],u=0;u<r.length;u++){var d=r[u];d.data.transition=i,d.data.pos=d.elm.getBoundingClientRect(),t[d.key]?c.push(d):p.push(d)}this.kept=n(e,null,c),this.removed=p}return n(e,null,o)},updated:function(){var n=this.prevChildren,e=this.moveClass||(this.name||"v")+"-move";n.length&&this.hasMove(n[0].elm,e)&&(n.forEach(ja),n.forEach(Aa),n.forEach(Ma),this._reflow=document.body.offsetHeight,n.forEach((function(n){if(n.data.moved){var t=n.elm,r=t.style;Yr(t,e),r.transform=r.WebkitTransform=r.transitionDuration="",t.addEventListener(Jr,t._moveCb=function n(r){r&&r.target!==t||r&&!/transform$/.test(r.propertyName)||(t.removeEventListener(Jr,n),t._moveCb=null,Zr(t,e))})}})))},methods:{hasMove:function(n,e){if(!Ur)return!1;if(this._hasMove)return this._hasMove;var t=n.cloneNode();n._transitionClasses&&n._transitionClasses.forEach((function(n){Fr(t,n)})),Nr(t,e),t.style.display="none",this.$el.appendChild(t);var r=ea(t);return this.$el.removeChild(t),this._hasMove=r.hasTransform}}}};Et.config.mustUseProp=function(n,e,t){return"value"===t&&Pt(n)&&"button"!==e||"selected"===t&&"option"===n||"checked"===t&&"input"===n||"muted"===t&&"video"===n},Et.config.isReservedTag=Gt,Et.config.isReservedAttr=Ot,Et.config.getTagNamespace=function(n){return Wt(n)?"svg":"math"===n?"math":void 0},Et.config.isUnknownElement=function(n){if(!H)return!0;if(Gt(n))return!1;if(n=n.toLowerCase(),null!=Qt[n])return Qt[n];var e=document.createElement(n);return n.indexOf("-")>-1?Qt[n]=e.constructor===window.HTMLUnknownElement||e.constructor===window.HTMLElement:Qt[n]=/HTMLUnknownElement/.test(e.toString())},A(Et.options.directives,ba),A(Et.options.components,Ia),Et.prototype.__patch__=H?ca:I,Et.prototype.$mount=function(n,e){return function(n,e,t){var r;return n.$el=e,n.$options.render||(n.$options.render=vn),et(n,"beforeMount"),r=function(){n._update(n._render(),t)},new mt(n,r,I,{before:function(){n._isMounted&&!n._isDestroyed&&et(n,"beforeUpdate")}},!0),t=!1,null==n.$vnode&&(n._isMounted=!0,et(n,"mounted")),n}(this,n=n&&H?function(n){if("string"==typeof n){var e=document.querySelector(n);return e||document.createElement("div")}return n}(n):void 0,e)},H&&setTimeout((function(){D.devtools&&an&&an.emit("init",Et)}),0),e.default=Et},function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},function(n,e,t){var r=t(120),a=t(15),o=t(249);r||a(Object.prototype,"toString",o,{unsafe:!0})},function(n,e,t){var r=t(0),a=t(78),o=t(11),i=t(79),s=t(111),l=t(151),c=a("wks"),p=r.Symbol,u=p&&p.for,d=l?p:p&&p.withoutSetter||i;n.exports=function(n){if(!o(c,n)||!s&&"string"!=typeof c[n]){var e="Symbol."+n;s&&o(p,n)?c[n]=p[n]:c[n]=l&&u?u(e):d(e)}return c[n]}},function(n,e){n.exports=function(n){return"function"==typeof n}},function(n,e,t){var r=t(4);n.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(n,e,t){var r=t(0),a=t(10),o=r.String,i=r.TypeError;n.exports=function(n){if(a(n))return n;throw i(o(n)+" is not an object")}},function(n,e,t){var r=t(7);n.exports=function(n){return"object"==typeof n?null!==n:r(n)}},function(n,e,t){var r=t(1),a=t(17),o=r({}.hasOwnProperty);n.exports=Object.hasOwn||function(n,e){return o(a(n),e)}},function(n,e,t){var r=t(0),a=t(8),o=t(153),i=t(152),s=t(9),l=t(81),c=r.TypeError,p=Object.defineProperty,u=Object.getOwnPropertyDescriptor;e.f=a?i?function(n,e,t){if(s(n),e=l(e),s(t),"function"==typeof n&&"prototype"===e&&"value"in t&&"writable"in t&&!t.writable){var r=u(n,e);r&&r.writable&&(n[e]=t.value,t={configurable:"configurable"in t?t.configurable:r.configurable,enumerable:"enumerable"in t?t.enumerable:r.enumerable,writable:!1})}return p(n,e,t)}:p:function(n,e,t){if(s(n),e=l(e),s(t),o)try{return p(n,e,t)}catch(n){}if("get"in t||"set"in t)throw c("Accessors not supported");return"value"in t&&(n[e]=t.value),n}},function(n,e,t){var r=t(0),a=t(75),o=r.String;n.exports=function(n){if("Symbol"===a(n))throw TypeError("Cannot convert a Symbol value to a string");return o(n)}},function(n,e){var t=Function.prototype.call;n.exports=t.bind?t.bind(t):function(){return t.apply(t,arguments)}},function(n,e,t){var r=t(0),a=t(7),o=t(11),i=t(23),s=t(110),l=t(86),c=t(27),p=t(74).CONFIGURABLE,u=c.get,d=c.enforce,m=String(String).split("String");(n.exports=function(n,e,t,l){var c,u=!!l&&!!l.unsafe,f=!!l&&!!l.enumerable,g=!!l&&!!l.noTargetGet,h=l&&void 0!==l.name?l.name:e;a(t)&&("Symbol("===String(h).slice(0,7)&&(h="["+String(h).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),(!o(t,"name")||p&&t.name!==h)&&i(t,"name",h),(c=d(t)).source||(c.source=m.join("string"==typeof h?h:""))),n!==r?(u?!g&&n[e]&&(f=!0):delete n[e],f?n[e]=t:i(n,e,t)):f?n[e]=t:s(e,t)})(Function.prototype,"toString",(function(){return a(this)&&u(this).source||l(this)}))},function(n,e,t){"use strict";function r(n,e,t,r,a,o,i,s){var l,c="function"==typeof n?n.options:n;if(e&&(c.render=e,c.staticRenderFns=t,c._compiled=!0),r&&(c.functional=!0),o&&(c._scopeId="data-v-"+o),i?(l=function(n){(n=n||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(n=__VUE_SSR_CONTEXT__),a&&a.call(this,n),n&&n._registeredComponents&&n._registeredComponents.add(i)},c._ssrRegister=l):a&&(l=s?function(){a.call(this,(c.functional?this.parent:this).$root.$options.shadowRoot)}:a),l)if(c.functional){c._injectStyles=l;var p=c.render;c.render=function(n,e){return l.call(e),p(n,e)}}else{var u=c.beforeCreate;c.beforeCreate=u?[].concat(u,l):[l]}return{exports:n,options:c}}t.d(e,"a",(function(){return r}))},function(n,e,t){var r=t(0),a=t(20),o=r.Object;n.exports=function(n){return o(a(n))}},function(n,e,t){var r=t(0),a=t(7),o=function(n){return a(n)?n:void 0};n.exports=function(n,e){return arguments.length<2?o(r[n]):r[n]&&r[n][e]}},function(n,e,t){"use strict";var r=t(2),a=t(93);r({target:"RegExp",proto:!0,forced:/./.exec!==a},{exec:a})},function(n,e,t){var r=t(0).TypeError;n.exports=function(n){if(null==n)throw r("Can't call method on "+n);return n}},function(n,e,t){var r=t(61),a=t(20);n.exports=function(n){return r(a(n))}},function(n,e,t){var r=t(1),a=r({}.toString),o=r("".slice);n.exports=function(n){return o(a(n),8,-1)}},function(n,e,t){var r=t(8),a=t(12),o=t(47);n.exports=r?function(n,e,t){return a.f(n,e,o(1,t))}:function(n,e,t){return n[e]=t,n}},function(n,e,t){var r=t(51);n.exports=function(n){return r(n.length)}},function(n,e,t){"use strict";var r=t(2),a=t(57).filter;r({target:"Array",proto:!0,forced:!t(91)("filter")},{filter:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e){n.exports=!1},function(n,e,t){var r,a,o,i=t(235),s=t(0),l=t(1),c=t(10),p=t(23),u=t(11),d=t(109),m=t(85),f=t(62),g=s.TypeError,h=s.WeakMap;if(i||d.state){var v=d.state||(d.state=new h),y=l(v.get),b=l(v.has),x=l(v.set);r=function(n,e){if(b(v,n))throw new g("Object already initialized");return e.facade=n,x(v,n,e),e},a=function(n){return y(v,n)||{}},o=function(n){return b(v,n)}}else{var w=m("state");f[w]=!0,r=function(n,e){if(u(n,w))throw new g("Object already initialized");return e.facade=n,p(n,w,e),e},a=function(n){return u(n,w)?n[w]:{}},o=function(n){return u(n,w)}}n.exports={set:r,get:a,has:o,enforce:function(n){return o(n)?a(n):r(n,{})},getterFor:function(n){return function(e){var t;if(!c(e)||(t=a(e)).type!==n)throw g("Incompatible receiver, "+n+" required");return t}}}},function(n,e,t){"use strict";var r=t(171).charAt,a=t(13),o=t(27),i=t(157),s=o.set,l=o.getterFor("String Iterator");i(String,"String",(function(n){s(this,{type:"String Iterator",string:a(n),index:0})}),(function(){var n,e=l(this),t=e.string,a=e.index;return a>=t.length?{value:void 0,done:!0}:(n=r(t,a),e.index+=n.length,{value:n,done:!1})}))},function(n,e,t){"use strict";var r=t(2),a=t(178);r({target:"Array",proto:!0,forced:[].forEach!=a},{forEach:a})},function(n,e,t){var r=t(0),a=t(172),o=t(173),i=t(178),s=t(23),l=function(n){if(n&&n.forEach!==i)try{s(n,"forEach",i)}catch(e){n.forEach=i}};for(var c in a)a[c]&&l(r[c]&&r[c].prototype);l(o)},function(n,e,t){var r=t(15),a=t(265),o=Error.prototype;o.toString!==a&&r(o,"toString",a)},function(n,e){var t=Array.isArray;n.exports=t},function(n,e,t){var r=t(18);n.exports=r("navigator","userAgent")||""},function(n,e,t){var r=t(1);n.exports=r({}.isPrototypeOf)},function(n,e,t){var r=t(188),a="object"==typeof self&&self&&self.Object===Object&&self,o=r||a||Function("return this")();n.exports=o},function(n,e,t){var r=t(0),a=t(172),o=t(173),i=t(144),s=t(23),l=t(6),c=l("iterator"),p=l("toStringTag"),u=i.values,d=function(n,e){if(n){if(n[c]!==u)try{s(n,c,u)}catch(e){n[c]=u}if(n[p]||s(n,p,e),a[e])for(var t in i)if(n[t]!==i[t])try{s(n,t,i[t])}catch(e){n[t]=i[t]}}};for(var m in a)d(r[m]&&r[m].prototype,m);d(o,"DOMTokenList")},function(n,e,t){var r,a=t(9),o=t(112),i=t(115),s=t(62),l=t(156),c=t(80),p=t(85),u=p("IE_PROTO"),d=function(){},m=function(n){return"<script>"+n+"<\/script>"},f=function(n){n.write(m("")),n.close();var e=n.parentWindow.Object;return n=null,e},g=function(){try{r=new ActiveXObject("htmlfile")}catch(n){}var n,e;g="undefined"!=typeof document?document.domain&&r?f(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(n=e.contentWindow.document).open(),n.write(m("document.F=Object")),n.close(),n.F):f(r);for(var t=i.length;t--;)delete g.prototype[i[t]];return g()};s[u]=!0,n.exports=Object.create||function(n,e){var t;return null!==n?(d.prototype=a(n),t=new d,d.prototype=null,t[u]=n):t=g(),void 0===e?t:o.f(t,e)}},function(n,e){var t=Function.prototype,r=t.apply,a=t.bind,o=t.call;n.exports="object"==typeof Reflect&&Reflect.apply||(a?o.bind(r):function(){return o.apply(r,arguments)})},function(n,e,t){var r=t(0),a=t(7),o=t(83),i=r.TypeError;n.exports=function(n){if(a(n))return n;throw i(o(n)+" is not a function")}},function(n,e,t){var r=t(8),a=t(14),o=t(116),i=t(47),s=t(21),l=t(81),c=t(11),p=t(153),u=Object.getOwnPropertyDescriptor;e.f=r?u:function(n,e){if(n=s(n),e=l(e),p)try{return u(n,e)}catch(n){}if(c(n,e))return i(!a(o.f,n,e),n[e])}},function(n,e,t){"use strict";var r=t(2),a=t(57).map;r({target:"Array",proto:!0,forced:!t(91)("map")},{map:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(2),a=t(0),o=t(38),i=t(261),s=a.WebAssembly,l=7!==Error("e",{cause:7}).cause,c=function(n,e){var t={};t[n]=i(n,e,l),r({global:!0,forced:l},t)},p=function(n,e){if(s&&s[n]){var t={};t[n]=i("WebAssembly."+n,e,l),r({target:"WebAssembly",stat:!0,forced:l},t)}};c("Error",(function(n){return function(e){return o(n,this,arguments)}})),c("EvalError",(function(n){return function(e){return o(n,this,arguments)}})),c("RangeError",(function(n){return function(e){return o(n,this,arguments)}})),c("ReferenceError",(function(n){return function(e){return o(n,this,arguments)}})),c("SyntaxError",(function(n){return function(e){return o(n,this,arguments)}})),c("TypeError",(function(n){return function(e){return o(n,this,arguments)}})),c("URIError",(function(n){return function(e){return o(n,this,arguments)}})),p("CompileError",(function(n){return function(e){return o(n,this,arguments)}})),p("LinkError",(function(n){return function(e){return o(n,this,arguments)}})),p("RuntimeError",(function(n){return function(e){return o(n,this,arguments)}}))},function(n,e,t){var r=t(286),a=t(289);n.exports=function(n,e){var t=a(n,e);return r(t)?t:void 0}},function(n,e,t){"use strict";t.d(e,"e",(function(){return r})),t.d(e,"b",(function(){return o})),t.d(e,"j",(function(){return i})),t.d(e,"g",(function(){return l})),t.d(e,"h",(function(){return c})),t.d(e,"i",(function(){return p})),t.d(e,"c",(function(){return u})),t.d(e,"f",(function(){return d})),t.d(e,"l",(function(){return m})),t.d(e,"m",(function(){return f})),t.d(e,"d",(function(){return h})),t.d(e,"k",(function(){return v})),t.d(e,"n",(function(){return y})),t.d(e,"a",(function(){return x}));t(19),t(54),t(221),t(53),t(220),t(108),t(41),t(29),t(5),t(30),t(25),t(76),t(141),t(149),t(72),t(208),t(31),t(104);var r=/#.*$/,a=/\.(md|html)$/,o=/\/$/,i=/^[a-z]+:/i;function s(n){return decodeURI(n).replace(r,"").replace(a,"")}function l(n){return i.test(n)}function c(n){return/^mailto:/.test(n)}function p(n){return/^tel:/.test(n)}function u(n){if(l(n))return n;var e=n.match(r),t=e?e[0]:"",a=s(n);return o.test(a)?n:a+".html"+t}function d(n,e){var t=n.hash,a=function(n){var e=n.match(r);if(e)return e[0]}(e);return(!a||t===a)&&s(n.path)===s(e)}function m(n,e,t){if(l(e))return{type:"external",path:e};t&&(e=function(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var a=e.split("/");t&&a[a.length-1]||a.pop();for(var o=n.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var s=o[i];".."===s?a.pop():"."!==s&&a.push(s)}""!==a[0]&&a.unshift("");return a.join("/")}(e,t));for(var r=s(e),a=0;a<n.length;a++)if(s(n[a].regularPath)===r)return Object.assign({},n[a],{type:"page",path:u(n[a].path)});return console.error('[vuepress] No matching page found for sidebar item "'.concat(e,'"')),{}}function f(n,e,t,r){var a=t.pages,o=t.themeConfig,i=r&&o.locales&&o.locales[r]||o;if("auto"===(n.frontmatter.sidebar||i.sidebar||o.sidebar))return g(n);var s=i.sidebar||o.sidebar;if(s){var l=function(n,e){if(Array.isArray(e))return{base:"/",config:e};for(var t in e)if(0===(r=n,/(\.html|\/)$/.test(r)?r:r+"/").indexOf(encodeURI(t)))return{base:t,config:e[t]};var r;return{}}(e,s),c=l.base,p=l.config;return"auto"===p?g(n):p?p.map((function(n){return function n(e,t,r){var a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if("string"==typeof e)return m(t,e,r);if(Array.isArray(e))return Object.assign(m(t,e[0],r),{title:e[1]});a>3&&console.error("[vuepress] detected a too deep nested sidebar group.");var o=e.children||[];return 0===o.length&&e.path?Object.assign(m(t,e.path,r),{title:e.title}):{type:"group",path:e.path,title:e.title,sidebarDepth:e.sidebarDepth,initialOpenGroupIndex:e.initialOpenGroupIndex,children:o.map((function(e){return n(e,t,r,a+1)})),collapsable:!1!==e.collapsable}}(n,a,c)})):[]}return[]}function g(n){var e=h(n.headers||[]);return[{type:"group",collapsable:!1,title:n.title,path:null,children:e.map((function(e){return{type:"auto",title:e.title,basePath:n.path,path:n.path+"#"+e.slug,children:e.children||[]}}))}]}function h(n){var e;return(n=n.map((function(n){return Object.assign({},n)}))).forEach((function(n){2===n.level?e=n:e&&(e.children||(e.children=[])).push(n)})),n.filter((function(n){return 2===n.level}))}function v(n){return Object.assign(n,{type:n.items&&n.items.length?"links":"link"})}function y(n){return Object.prototype.toString.call(n).match(/\[object (.*?)\]/)[1].toLowerCase()}function b(n){var e=n.frontmatter.date||n.lastUpdated||new Date,t=new Date(e);return"Invalid Date"==t&&e&&(t=new Date(e.replace(/-/g,"/"))),t.getTime()}function x(n,e){return b(e)-b(n)}},function(n,e,t){"use strict";var r=t(4);n.exports=function(n,e){var t=[][n];return!!t&&r((function(){t.call(null,e||function(){throw 1},1)}))}},function(n,e,t){var r=t(39);n.exports=function(n,e){var t=n[e];return null==t?void 0:r(t)}},function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},function(n,e){n.exports=function(n){return null!=n&&"object"==typeof n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(73),t(67),t(25),t(5),t(376),t(29),t(30),t(174),t(377),t(100);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}},function(n,e,t){var r,a,o=t(0),i=t(33),s=o.process,l=o.Deno,c=s&&s.versions||l&&l.version,p=c&&c.v8;p&&(a=(r=p.split("."))[0]>0&&r[0]<4?1:+(r[0]+r[1])),!a&&i&&(!(r=i.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=i.match(/Chrome\/(\d+)/))&&(a=+r[1]),n.exports=a},function(n,e,t){var r=t(55),a=Math.min;n.exports=function(n){return n>0?a(r(n),9007199254740991):0}},function(n,e,t){var r=t(155),a=t(115).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,a)}},function(n,e,t){"use strict";t(19);var r,a,o=t(2),i=t(0),s=t(14),l=t(1),c=t(7),p=t(10),u=(r=!1,(a=/[ac]/).exec=function(){return r=!0,/./.exec.apply(this,arguments)},!0===a.test("abc")&&r),d=i.Error,m=l(/./.test);o({target:"RegExp",proto:!0,forced:!u},{test:function(n){var e=this.exec;if(!c(e))return m(this,n);var t=s(e,this,n);if(null!==t&&!p(t))throw new d("RegExp exec method returned something other than an Object or null");return!!t}})},function(n,e,t){"use strict";var r=t(38),a=t(14),o=t(1),i=t(106),s=t(4),l=t(9),c=t(7),p=t(55),u=t(51),d=t(13),m=t(20),f=t(128),g=t(46),h=t(266),v=t(107),y=t(6)("replace"),b=Math.max,x=Math.min,w=o([].concat),k=o([].push),S=o("".indexOf),E=o("".slice),_="$0"==="a".replace(/./,"$0"),C=!!/./[y]&&""===/./[y]("a","$0");i("replace",(function(n,e,t){var o=C?"$":"$0";return[function(n,t){var r=m(this),o=null==n?void 0:g(n,y);return o?a(o,n,r,t):a(e,d(r),n,t)},function(n,a){var i=l(this),s=d(n);if("string"==typeof a&&-1===S(a,o)&&-1===S(a,"$<")){var m=t(e,i,s,a);if(m.done)return m.value}var g=c(a);g||(a=d(a));var y=i.global;if(y){var _=i.unicode;i.lastIndex=0}for(var C=[];;){var T=v(i,s);if(null===T)break;if(k(C,T),!y)break;""===d(T[0])&&(i.lastIndex=f(s,u(i.lastIndex),_))}for(var j,A="",M=0,I=0;I<C.length;I++){for(var O=d((T=C[I])[0]),P=b(x(p(T.index),s.length),0),R=[],B=1;B<T.length;B++)k(R,void 0===(j=T[B])?j:String(j));var q=T.groups;if(g){var z=w([O],R,P,s);void 0!==q&&k(z,q);var L=d(r(a,void 0,z))}else L=h(O,s,P,R,q,a);P>=M&&(A+=E(s,M,P)+L,M=P+O.length)}return A+E(s,M)}]}),!!s((function(){var n=/./;return n.exec=function(){var n=[];return n.groups={a:"7"},n},"7"!=="".replace(n,"$<a>")}))||!_||C)},function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){var e=+n;return e!=e||0===e?0:(e>0?r:t)(e)}},function(n,e,t){var r=t(1),a=t(39),o=r(r.bind);n.exports=function(n,e){return a(n),void 0===e?n:o?o(n,e):function(){return n.apply(e,arguments)}}},function(n,e,t){var r=t(56),a=t(1),o=t(61),i=t(17),s=t(24),l=t(146),c=a([].push),p=function(n){var e=1==n,t=2==n,a=3==n,p=4==n,u=6==n,d=7==n,m=5==n||u;return function(f,g,h,v){for(var y,b,x=i(f),w=o(x),k=r(g,h),S=s(w),E=0,_=v||l,C=e?_(f,S):t||d?_(f,0):void 0;S>E;E++)if((m||E in w)&&(b=k(y=w[E],E,x),n))if(e)C[E]=b;else if(b)switch(n){case 3:return!0;case 5:return y;case 6:return E;case 2:c(C,y)}else switch(n){case 4:return!1;case 7:c(C,y)}return u?-1:a||p?p:C}};n.exports={forEach:p(0),map:p(1),filter:p(2),some:p(3),every:p(4),find:p(5),findIndex:p(6),filterReject:p(7)}},function(n,e,t){var r=t(12).f,a=t(11),o=t(6)("toStringTag");n.exports=function(n,e,t){n&&!t&&(n=n.prototype),n&&!a(n,o)&&r(n,o,{configurable:!0,value:e})}},function(n,e,t){var r=t(22);n.exports=Array.isArray||function(n){return"Array"==r(n)}},function(n,e,t){var r=t(68),a=t(271),o=t(272),i=r?r.toStringTag:void 0;n.exports=function(n){return null==n?void 0===n?"[object Undefined]":"[object Null]":i&&i in Object(n)?a(n):o(n)}},function(n,e,t){var r=t(0),a=t(1),o=t(4),i=t(22),s=r.Object,l=a("".split);n.exports=o((function(){return!s("z").propertyIsEnumerable(0)}))?function(n){return"String"==i(n)?l(n,""):s(n)}:s},function(n,e){n.exports={}},function(n,e){n.exports={}},function(n,e,t){var r=t(1),a=t(9),o=t(236);n.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var n,e=!1,t={};try{(n=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(t,[]),e=t instanceof Array}catch(n){}return function(t,r){return a(t),o(r),e?n(t,r):t.__proto__=r,t}}():void 0)},function(n,e,t){var r=t(1);n.exports=r([].slice)},function(n,e,t){"use strict";var r=t(81),a=t(12),o=t(47);n.exports=function(n,e,t){var i=r(e);i in n?a.f(n,i,o(0,t)):n[i]=t}},function(n,e,t){"use strict";var r=t(2),a=t(0),o=t(18),i=t(38),s=t(14),l=t(1),c=t(26),p=t(8),u=t(111),d=t(4),m=t(11),f=t(59),g=t(7),h=t(10),v=t(34),y=t(82),b=t(9),x=t(17),w=t(21),k=t(81),S=t(13),E=t(47),_=t(37),C=t(84),T=t(52),j=t(180),A=t(118),M=t(40),I=t(12),O=t(112),P=t(116),R=t(65),B=t(15),q=t(78),z=t(85),L=t(62),D=t(79),N=t(6),F=t(181),V=t(182),$=t(58),U=t(27),H=t(57).forEach,J=z("hidden"),W=N("toPrimitive"),G=U.set,Q=U.getterFor("Symbol"),K=Object.prototype,Y=a.Symbol,Z=Y&&Y.prototype,X=a.TypeError,nn=a.QObject,en=o("JSON","stringify"),tn=M.f,rn=I.f,an=j.f,on=P.f,sn=l([].push),ln=q("symbols"),cn=q("op-symbols"),pn=q("string-to-symbol-registry"),un=q("symbol-to-string-registry"),dn=q("wks"),mn=!nn||!nn.prototype||!nn.prototype.findChild,fn=p&&d((function(){return 7!=_(rn({},"a",{get:function(){return rn(this,"a",{value:7}).a}})).a}))?function(n,e,t){var r=tn(K,e);r&&delete K[e],rn(n,e,t),r&&n!==K&&rn(K,e,r)}:rn,gn=function(n,e){var t=ln[n]=_(Z);return G(t,{type:"Symbol",tag:n,description:e}),p||(t.description=e),t},hn=function(n,e,t){n===K&&hn(cn,e,t),b(n);var r=k(e);return b(t),m(ln,r)?(t.enumerable?(m(n,J)&&n[J][r]&&(n[J][r]=!1),t=_(t,{enumerable:E(0,!1)})):(m(n,J)||rn(n,J,E(1,{})),n[J][r]=!0),fn(n,r,t)):rn(n,r,t)},vn=function(n,e){b(n);var t=w(e),r=C(t).concat(wn(t));return H(r,(function(e){p&&!s(yn,t,e)||hn(n,e,t[e])})),n},yn=function(n){var e=k(n),t=s(on,this,e);return!(this===K&&m(ln,e)&&!m(cn,e))&&(!(t||!m(this,e)||!m(ln,e)||m(this,J)&&this[J][e])||t)},bn=function(n,e){var t=w(n),r=k(e);if(t!==K||!m(ln,r)||m(cn,r)){var a=tn(t,r);return!a||!m(ln,r)||m(t,J)&&t[J][r]||(a.enumerable=!0),a}},xn=function(n){var e=an(w(n)),t=[];return H(e,(function(n){m(ln,n)||m(L,n)||sn(t,n)})),t},wn=function(n){var e=n===K,t=an(e?cn:w(n)),r=[];return H(t,(function(n){!m(ln,n)||e&&!m(K,n)||sn(r,ln[n])})),r};(u||(B(Z=(Y=function(){if(v(Z,this))throw X("Symbol is not a constructor");var n=arguments.length&&void 0!==arguments[0]?S(arguments[0]):void 0,e=D(n),t=function(n){this===K&&s(t,cn,n),m(this,J)&&m(this[J],e)&&(this[J][e]=!1),fn(this,e,E(1,n))};return p&&mn&&fn(K,e,{configurable:!0,set:t}),gn(e,n)}).prototype,"toString",(function(){return Q(this).tag})),B(Y,"withoutSetter",(function(n){return gn(D(n),n)})),P.f=yn,I.f=hn,O.f=vn,M.f=bn,T.f=j.f=xn,A.f=wn,F.f=function(n){return gn(N(n),n)},p&&(rn(Z,"description",{configurable:!0,get:function(){return Q(this).description}}),c||B(K,"propertyIsEnumerable",yn,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:Y}),H(C(dn),(function(n){V(n)})),r({target:"Symbol",stat:!0,forced:!u},{for:function(n){var e=S(n);if(m(pn,e))return pn[e];var t=Y(e);return pn[e]=t,un[t]=e,t},keyFor:function(n){if(!y(n))throw X(n+" is not a symbol");if(m(un,n))return un[n]},useSetter:function(){mn=!0},useSimple:function(){mn=!1}}),r({target:"Object",stat:!0,forced:!u,sham:!p},{create:function(n,e){return void 0===e?_(n):vn(_(n),e)},defineProperty:hn,defineProperties:vn,getOwnPropertyDescriptor:bn}),r({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:xn,getOwnPropertySymbols:wn}),r({target:"Object",stat:!0,forced:d((function(){A.f(1)}))},{getOwnPropertySymbols:function(n){return A.f(x(n))}}),en)&&r({target:"JSON",stat:!0,forced:!u||d((function(){var n=Y();return"[null]"!=en([n])||"{}"!=en({a:n})||"{}"!=en(Object(n))}))},{stringify:function(n,e,t){var r=R(arguments),a=e;if((h(e)||void 0!==n)&&!y(n))return f(e)||(e=function(n,e){if(g(a)&&(e=s(a,this,n,e)),!y(e))return e}),r[1]=e,i(en,null,r)}});if(!Z[W]){var kn=Z.valueOf;B(Z,W,(function(n){return s(kn,this)}))}$(Y,"Symbol"),L[J]=!0},function(n,e,t){var r=t(35).Symbol;n.exports=r},function(n,e,t){"use strict";t.d(e,"a",(function(){return o}));t(76);var r=t(70);t(67),t(92),t(5),t(124),t(28),t(36),t(183);var a=t(101);t(42),t(31);function o(n){return function(n){if(Array.isArray(n))return Object(r.a)(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||Object(a.a)(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";function r(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}t.d(e,"a",(function(){return r}))},function(n,e,t){"use strict";var r=t(2),a=t(0),o=t(59),i=t(88),s=t(10),l=t(114),c=t(24),p=t(21),u=t(66),d=t(6),m=t(91),f=t(65),g=m("slice"),h=d("species"),v=a.Array,y=Math.max;r({target:"Array",proto:!0,forced:!g},{slice:function(n,e){var t,r,a,d=p(this),m=c(d),g=l(n,m),b=l(void 0===e?m:e,m);if(o(d)&&(t=d.constructor,(i(t)&&(t===v||o(t.prototype))||s(t)&&null===(t=t[h]))&&(t=void 0),t===v||void 0===t))return f(d,g,b);for(r=new(void 0===t?v:t)(y(b-g,0)),a=0;g<b;g++,a++)g in d&&u(r,a,d[g]);return r.length=a,r}})},function(n,e,t){"use strict";var r=t(2),a=t(0),o=t(4),i=t(59),s=t(10),l=t(17),c=t(24),p=t(66),u=t(146),d=t(91),m=t(6),f=t(50),g=m("isConcatSpreadable"),h=a.TypeError,v=f>=51||!o((function(){var n=[];return n[g]=!1,n.concat()[0]!==n})),y=d("concat"),b=function(n){if(!s(n))return!1;var e=n[g];return void 0!==e?!!e:i(n)};r({target:"Array",proto:!0,forced:!v||!y},{concat:function(n){var e,t,r,a,o,i=l(this),s=u(i,0),d=0;for(e=-1,r=arguments.length;e<r;e++)if(b(o=-1===e?i:arguments[e])){if(d+(a=c(o))>9007199254740991)throw h("Maximum allowed index exceeded");for(t=0;t<a;t++,d++)t in o&&p(s,d,o[t])}else{if(d>=9007199254740991)throw h("Maximum allowed index exceeded");p(s,d++,o)}return s.length=d,s}})},function(n,e,t){var r=t(2),a=t(17),o=t(84);r({target:"Object",stat:!0,forced:t(4)((function(){o(1)}))},{keys:function(n){return o(a(n))}})},function(n,e,t){var r=t(8),a=t(11),o=Function.prototype,i=r&&Object.getOwnPropertyDescriptor,s=a(o,"name"),l=s&&"something"===function(){}.name,c=s&&(!r||r&&i(o,"name").configurable);n.exports={EXISTS:s,PROPER:l,CONFIGURABLE:c}},function(n,e,t){var r=t(0),a=t(120),o=t(7),i=t(22),s=t(6)("toStringTag"),l=r.Object,c="Arguments"==i(function(){return arguments}());n.exports=a?i:function(n){var e,t,r;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=l(n),s))?t:c?i(e):"Object"==(r=i(e))&&o(e.callee)?"Arguments":r}},function(n,e,t){t(2)({target:"Array",stat:!0},{isArray:t(59)})},function(n,e,t){var r=t(8),a=t(74).EXISTS,o=t(1),i=t(12).f,s=Function.prototype,l=o(s.toString),c=/function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/,p=o(c.exec);r&&!a&&i(s,"name",{configurable:!0,get:function(){try{return p(c,l(this))[1]}catch(n){return""}}})},function(n,e,t){var r=t(26),a=t(109);(n.exports=function(n,e){return a[n]||(a[n]=void 0!==e?e:{})})("versions",[]).push({version:"3.20.2",mode:r?"pure":"global",copyright:"© 2022 Denis Pushkarev (zloirock.ru)"})},function(n,e,t){var r=t(1),a=0,o=Math.random(),i=r(1..toString);n.exports=function(n){return"Symbol("+(void 0===n?"":n)+")_"+i(++a+o,36)}},function(n,e,t){var r=t(0),a=t(10),o=r.document,i=a(o)&&a(o.createElement);n.exports=function(n){return i?o.createElement(n):{}}},function(n,e,t){var r=t(154),a=t(82);n.exports=function(n){var e=r(n,"string");return a(e)?e:e+""}},function(n,e,t){var r=t(0),a=t(18),o=t(7),i=t(34),s=t(151),l=r.Object;n.exports=s?function(n){return"symbol"==typeof n}:function(n){var e=a("Symbol");return o(e)&&i(e.prototype,l(n))}},function(n,e,t){var r=t(0).String;n.exports=function(n){try{return r(n)}catch(n){return"Object"}}},function(n,e,t){var r=t(155),a=t(115);n.exports=Object.keys||function(n){return r(n,a)}},function(n,e,t){var r=t(78),a=t(79),o=r("keys");n.exports=function(n){return o[n]||(o[n]=a(n))}},function(n,e,t){var r=t(1),a=t(7),o=t(109),i=r(Function.toString);a(o.inspectSource)||(o.inspectSource=function(n){return i(n)}),n.exports=o.inspectSource},function(n,e,t){var r=t(4),a=t(7),o=/#|\.prototype\./,i=function(n,e){var t=l[s(n)];return t==p||t!=c&&(a(e)?r(e):!!e)},s=i.normalize=function(n){return String(n).replace(o,".").toLowerCase()},l=i.data={},c=i.NATIVE="N",p=i.POLYFILL="P";n.exports=i},function(n,e,t){var r=t(1),a=t(4),o=t(7),i=t(75),s=t(18),l=t(86),c=function(){},p=[],u=s("Reflect","construct"),d=/^\s*(?:class|function)\b/,m=r(d.exec),f=!d.exec(c),g=function(n){if(!o(n))return!1;try{return u(c,p,n),!0}catch(n){return!1}},h=function(n){if(!o(n))return!1;switch(i(n)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return f||!!m(d,l(n))}catch(n){return!0}};h.sham=!0,n.exports=!u||a((function(){var n;return g(g.call)||!g(Object)||!g((function(){n=!0}))||n}))?h:g},function(n,e,t){var r=t(22),a=t(0);n.exports="process"==r(a.process)},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(5);function r(n,e,t,r,a,o,i){try{var s=n[o](i),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function a(n){return function(){var e=this,t=arguments;return new Promise((function(a,o){var i=n.apply(e,t);function s(n){r(i,a,o,s,l,"next",n)}function l(n){r(i,a,o,s,l,"throw",n)}s(void 0)}))}}},function(n,e,t){var r=t(4),a=t(6),o=t(50),i=a("species");n.exports=function(n){return o>=51||!r((function(){var e=[];return(e.constructor={})[i]=function(){return{foo:1}},1!==e[n](Boolean).foo}))}},function(n,e,t){"use strict";var r=t(2),a=t(8),o=t(0),i=t(1),s=t(11),l=t(7),c=t(34),p=t(13),u=t(12).f,d=t(117),m=o.Symbol,f=m&&m.prototype;if(a&&l(m)&&(!("description"in f)||void 0!==m().description)){var g={},h=function(){var n=arguments.length<1||void 0===arguments[0]?void 0:p(arguments[0]),e=c(f,this)?new m(n):void 0===n?m():m(n);return""===n&&(g[e]=!0),e};d(h,m),h.prototype=f,f.constructor=h;var v="Symbol(test)"==String(m("test")),y=i(f.toString),b=i(f.valueOf),x=/^Symbol\((.*)\)[^)]+$/,w=i("".replace),k=i("".slice);u(f,"description",{configurable:!0,get:function(){var n=b(this),e=y(n);if(s(g,n))return"";var t=v?k(e,7,-1):w(e,x,"$1");return""===t?void 0:t}}),r({global:!0,forced:!0},{Symbol:h})}},function(n,e,t){"use strict";var r,a,o=t(14),i=t(1),s=t(13),l=t(125),c=t(94),p=t(78),u=t(37),d=t(27).get,m=t(126),f=t(184),g=p("native-string-replace",String.prototype.replace),h=RegExp.prototype.exec,v=h,y=i("".charAt),b=i("".indexOf),x=i("".replace),w=i("".slice),k=(a=/b*/g,o(h,r=/a/,"a"),o(h,a,"a"),0!==r.lastIndex||0!==a.lastIndex),S=c.BROKEN_CARET,E=void 0!==/()??/.exec("")[1];(k||E||S||m||f)&&(v=function(n){var e,t,r,a,i,c,p,m=this,f=d(m),_=s(n),C=f.raw;if(C)return C.lastIndex=m.lastIndex,e=o(v,C,_),m.lastIndex=C.lastIndex,e;var T=f.groups,j=S&&m.sticky,A=o(l,m),M=m.source,I=0,O=_;if(j&&(A=x(A,"y",""),-1===b(A,"g")&&(A+="g"),O=w(_,m.lastIndex),m.lastIndex>0&&(!m.multiline||m.multiline&&"\n"!==y(_,m.lastIndex-1))&&(M="(?: "+M+")",O=" "+O,I++),t=new RegExp("^(?:"+M+")",A)),E&&(t=new RegExp("^"+M+"$(?!\\s)",A)),k&&(r=m.lastIndex),a=o(h,j?t:m,O),j?a?(a.input=w(a.input,I),a[0]=w(a[0],I),a.index=m.lastIndex,m.lastIndex+=a[0].length):m.lastIndex=0:k&&a&&(m.lastIndex=m.global?a.index+a[0].length:r),E&&a&&a.length>1&&o(g,a[0],t,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(a[i]=void 0)})),a&&T)for(a.groups=c=u(null),i=0;i<T.length;i++)c[(p=T[i])[0]]=a[p[1]];return a}),n.exports=v},function(n,e,t){var r=t(4),a=t(0).RegExp,o=r((function(){var n=a("a","y");return n.lastIndex=2,null!=n.exec("abcd")})),i=o||r((function(){return!a("a","y").sticky})),s=o||r((function(){var n=a("^r","gy");return n.lastIndex=2,null!=n.exec("str")}));n.exports={BROKEN_CARET:s,MISSED_STICKY:i,UNSUPPORTED_Y:o}},function(n,e,t){var r=t(276),a=t(277),o=t(278),i=t(279),s=t(280);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(190);n.exports=function(n,e){for(var t=n.length;t--;)if(r(n[t][0],e))return t;return-1}},function(n,e,t){var r=t(43)(Object,"create");n.exports=r},function(n,e,t){var r=t(298);n.exports=function(n,e){var t=n.__data__;return r(e)?t["string"==typeof e?"string":"hash"]:t.map}},function(n,e,t){var r=t(136);n.exports=function(n){if("string"==typeof n||r(n))return n;var e=n+"";return"0"==e&&1/n==-1/0?"-0":e}},function(n,e,t){var r=t(2),a=t(8),o=t(12).f;r({target:"Object",stat:!0,forced:Object.defineProperty!==o,sham:!a},{defineProperty:o})},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(71),t(5),t(77),t(183),t(28),t(19),t(53);var r=t(70);function a(n,e){if(n){if("string"==typeof n)return Object(r.a)(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Object(r.a)(n,e):void 0}}},function(n,e,t){var r,a;
/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */void 0===(a="function"==typeof(r=function(){var n,e,t={version:"0.2.0"},r=t.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};function a(n,e,t){return n<e?e:n>t?t:n}function o(n){return 100*(-1+n)}t.configure=function(n){var e,t;for(e in n)void 0!==(t=n[e])&&n.hasOwnProperty(e)&&(r[e]=t);return this},t.status=null,t.set=function(n){var e=t.isStarted();n=a(n,r.minimum,1),t.status=1===n?null:n;var l=t.render(!e),c=l.querySelector(r.barSelector),p=r.speed,u=r.easing;return l.offsetWidth,i((function(e){""===r.positionUsing&&(r.positionUsing=t.getPositioningCSS()),s(c,function(n,e,t){var a;return(a="translate3d"===r.positionUsing?{transform:"translate3d("+o(n)+"%,0,0)"}:"translate"===r.positionUsing?{transform:"translate("+o(n)+"%,0)"}:{"margin-left":o(n)+"%"}).transition="all "+e+"ms "+t,a}(n,p,u)),1===n?(s(l,{transition:"none",opacity:1}),l.offsetWidth,setTimeout((function(){s(l,{transition:"all "+p+"ms linear",opacity:0}),setTimeout((function(){t.remove(),e()}),p)}),p)):setTimeout(e,p)})),this},t.isStarted=function(){return"number"==typeof t.status},t.start=function(){t.status||t.set(0);var n=function(){setTimeout((function(){t.status&&(t.trickle(),n())}),r.trickleSpeed)};return r.trickle&&n(),this},t.done=function(n){return n||t.status?t.inc(.3+.5*Math.random()).set(1):this},t.inc=function(n){var e=t.status;return e?("number"!=typeof n&&(n=(1-e)*a(Math.random()*e,.1,.95)),e=a(e+n,0,.994),t.set(e)):t.start()},t.trickle=function(){return t.inc(Math.random()*r.trickleRate)},n=0,e=0,t.promise=function(r){return r&&"resolved"!==r.state()?(0===e&&t.start(),n++,e++,r.always((function(){0==--e?(n=0,t.done()):t.set((n-e)/n)})),this):this},t.render=function(n){if(t.isRendered())return document.getElementById("nprogress");c(document.documentElement,"nprogress-busy");var e=document.createElement("div");e.id="nprogress",e.innerHTML=r.template;var a,i=e.querySelector(r.barSelector),l=n?"-100":o(t.status||0),p=document.querySelector(r.parent);return s(i,{transition:"all 0 linear",transform:"translate3d("+l+"%,0,0)"}),r.showSpinner||(a=e.querySelector(r.spinnerSelector))&&d(a),p!=document.body&&c(p,"nprogress-custom-parent"),p.appendChild(e),e},t.remove=function(){p(document.documentElement,"nprogress-busy"),p(document.querySelector(r.parent),"nprogress-custom-parent");var n=document.getElementById("nprogress");n&&d(n)},t.isRendered=function(){return!!document.getElementById("nprogress")},t.getPositioningCSS=function(){var n=document.body.style,e="WebkitTransform"in n?"Webkit":"MozTransform"in n?"Moz":"msTransform"in n?"ms":"OTransform"in n?"O":"";return e+"Perspective"in n?"translate3d":e+"Transform"in n?"translate":"margin"};var i=function(){var n=[];function e(){var t=n.shift();t&&t(e)}return function(t){n.push(t),1==n.length&&e()}}(),s=function(){var n=["Webkit","O","Moz","ms"],e={};function t(t){return t=t.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,(function(n,e){return e.toUpperCase()})),e[t]||(e[t]=function(e){var t=document.body.style;if(e in t)return e;for(var r,a=n.length,o=e.charAt(0).toUpperCase()+e.slice(1);a--;)if((r=n[a]+o)in t)return r;return e}(t))}function r(n,e,r){e=t(e),n.style[e]=r}return function(n,e){var t,a,o=arguments;if(2==o.length)for(t in e)void 0!==(a=e[t])&&e.hasOwnProperty(t)&&r(n,t,a);else r(n,o[1],o[2])}}();function l(n,e){return("string"==typeof n?n:u(n)).indexOf(" "+e+" ")>=0}function c(n,e){var t=u(n),r=t+e;l(t,e)||(n.className=r.substring(1))}function p(n,e){var t,r=u(n);l(n,e)&&(t=r.replace(" "+e+" "," "),n.className=t.substring(1,t.length-1))}function u(n){return(" "+(n.className||"")+" ").replace(/\s+/gi," ")}function d(n){n&&n.parentNode&&n.parentNode.removeChild(n)}return t})?r.call(e,t,e,n):r)||(n.exports=a)},function(n,e,t){var r=t(2),a=t(0),o=t(38),i=t(7),s=t(33),l=t(65),c=/MSIE .\./.test(s),p=a.Function,u=function(n){return function(e,t){var r=arguments.length>2,a=r?l(arguments,2):void 0;return n(r?function(){o(i(e)?e:p(e),this,a)}:e,t)}};r({global:!0,bind:!0,forced:c},{setTimeout:u(a.setTimeout),setInterval:u(a.setInterval)})},function(n,e,t){"use strict";var r=t(1),a=t(74).PROPER,o=t(15),i=t(9),s=t(34),l=t(13),c=t(4),p=t(125),u=RegExp.prototype,d=u.toString,m=r(p),f=c((function(){return"/a/b"!=d.call({source:"a",flags:"b"})})),g=a&&"toString"!=d.name;(f||g)&&o(RegExp.prototype,"toString",(function(){var n=i(this),e=l(n.source),t=n.flags;return"/"+e+"/"+l(void 0===t&&s(u,n)&&!("flags"in u)?m(n):t)}),{unsafe:!0})},function(n,e,t){var r=t(75),a=t(46),o=t(63),i=t(6)("iterator");n.exports=function(n){if(null!=n)return a(n,i)||a(n,"@@iterator")||o[r(n)]}},function(n,e,t){"use strict";t(19);var r=t(1),a=t(15),o=t(93),i=t(4),s=t(6),l=t(23),c=s("species"),p=RegExp.prototype;n.exports=function(n,e,t,u){var d=s(n),m=!i((function(){var e={};return e[d]=function(){return 7},7!=""[n](e)})),f=m&&!i((function(){var e=!1,t=/a/;return"split"===n&&((t={}).constructor={},t.constructor[c]=function(){return t},t.flags="",t[d]=/./[d]),t.exec=function(){return e=!0,null},t[d](""),!e}));if(!m||!f||t){var g=r(/./[d]),h=e(d,""[n],(function(n,e,t,a,i){var s=r(n),l=e.exec;return l===o||l===p.exec?m&&!i?{done:!0,value:g(e,t,a)}:{done:!0,value:s(t,e,a)}:{done:!1}}));a(String.prototype,n,h[0]),a(p,d,h[1])}u&&l(p[d],"sham",!0)}},function(n,e,t){var r=t(0),a=t(14),o=t(9),i=t(7),s=t(22),l=t(93),c=r.TypeError;n.exports=function(n,e){var t=n.exec;if(i(t)){var r=a(t,n,e);return null!==r&&o(r),r}if("RegExp"===s(n))return a(l,n,e);throw c("RegExp#exec called on incompatible receiver")}},function(n,e,t){"use strict";var r=t(2),a=t(1),o=t(61),i=t(21),s=t(45),l=a([].join),c=o!=Object,p=s("join",",");r({target:"Array",proto:!0,forced:c||!p},{join:function(n){return l(i(this),void 0===n?",":n)}})},function(n,e,t){var r=t(0),a=t(110),o=r["__core-js_shared__"]||a("__core-js_shared__",{});n.exports=o},function(n,e,t){var r=t(0),a=Object.defineProperty;n.exports=function(n,e){try{a(r,n,{value:e,configurable:!0,writable:!0})}catch(t){r[n]=e}return e}},function(n,e,t){var r=t(50),a=t(4);n.exports=!!Object.getOwnPropertySymbols&&!a((function(){var n=Symbol();return!String(n)||!(Object(n)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},function(n,e,t){var r=t(8),a=t(152),o=t(12),i=t(9),s=t(21),l=t(84);e.f=r&&!a?Object.defineProperties:function(n,e){i(n);for(var t,r=s(e),a=l(e),c=a.length,p=0;c>p;)o.f(n,t=a[p++],r[t]);return n}},function(n,e,t){var r=t(21),a=t(114),o=t(24),i=function(n){return function(e,t,i){var s,l=r(e),c=o(l),p=a(i,c);if(n&&t!=t){for(;c>p;)if((s=l[p++])!=s)return!0}else for(;c>p;p++)if((n||p in l)&&l[p]===t)return n||p||0;return!n&&-1}};n.exports={includes:i(!0),indexOf:i(!1)}},function(n,e,t){var r=t(55),a=Math.max,o=Math.min;n.exports=function(n,e){var t=r(n);return t<0?a(t+e,0):o(t,e)}},function(n,e){n.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(n,e,t){"use strict";var r={}.propertyIsEnumerable,a=Object.getOwnPropertyDescriptor,o=a&&!r.call({1:2},1);e.f=o?function(n){var e=a(this,n);return!!e&&e.enumerable}:r},function(n,e,t){var r=t(11),a=t(158),o=t(40),i=t(12);n.exports=function(n,e,t){for(var s=a(e),l=i.f,c=o.f,p=0;p<s.length;p++){var u=s[p];r(n,u)||t&&r(t,u)||l(n,u,c(e,u))}}},function(n,e){e.f=Object.getOwnPropertySymbols},function(n,e,t){var r=t(0),a=t(11),o=t(7),i=t(17),s=t(85),l=t(160),c=s("IE_PROTO"),p=r.Object,u=p.prototype;n.exports=l?p.getPrototypeOf:function(n){var e=i(n);if(a(e,c))return e[c];var t=e.constructor;return o(t)&&e instanceof t?t.prototype:e instanceof p?u:null}},function(n,e,t){var r={};r[t(6)("toStringTag")]="z",n.exports="[object z]"===String(r)},function(n,e,t){var r=t(9),a=t(166),o=t(6)("species");n.exports=function(n,e){var t,i=r(n).constructor;return void 0===i||null==(t=r(i)[o])?e:a(t)}},function(n,e,t){var r=t(10),a=t(22),o=t(6)("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[o])?!!e:"RegExp"==a(n))}},function(n,e,t){var r=t(0),a=t(114),o=t(24),i=t(66),s=r.Array,l=Math.max;n.exports=function(n,e,t){for(var r=o(n),c=a(e,r),p=a(void 0===t?r:t,r),u=s(l(p-c,0)),d=0;c<p;c++,d++)i(u,d,n[c]);return u.length=d,u}},function(n,e,t){t(182)("iterator")},function(n,e,t){"use strict";var r=t(9);n.exports=function(){var n=r(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.dotAll&&(e+="s"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},function(n,e,t){var r=t(4),a=t(0).RegExp;n.exports=r((function(){var n=a(".","s");return!(n.dotAll&&n.exec("\n")&&"s"===n.flags)}))},function(n,e,t){var r=t(7),a=t(10),o=t(64);n.exports=function(n,e,t){var i,s;return o&&r(i=e.constructor)&&i!==t&&a(s=i.prototype)&&s!==t.prototype&&o(n,s),n}},function(n,e,t){"use strict";var r=t(171).charAt;n.exports=function(n,e,t){return e+(t?r(n,e).length:1)}},function(n,e,t){var r=t(270),a=t(48),o=Object.prototype,i=o.hasOwnProperty,s=o.propertyIsEnumerable,l=r(function(){return arguments}())?r:function(n){return a(n)&&i.call(n,"callee")&&!s.call(n,"callee")};n.exports=l},function(n,e,t){var r=t(43)(t(35),"Map");n.exports=r},function(n,e){n.exports=function(n){var e=typeof n;return null!=n&&("object"==e||"function"==e)}},function(n,e,t){var r=t(290),a=t(297),o=t(299),i=t(300),s=t(301);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n){t[++e]=n})),t}},function(n,e){n.exports=function(n){return"number"==typeof n&&n>-1&&n%1==0&&n<=9007199254740991}},function(n,e,t){var r=t(32),a=t(136),o=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,i=/^\w*$/;n.exports=function(n,e){if(r(n))return!1;var t=typeof n;return!("number"!=t&&"symbol"!=t&&"boolean"!=t&&null!=n&&!a(n))||(i.test(n)||!o.test(n)||null!=e&&n in Object(e))}},function(n,e,t){var r=t(60),a=t(48);n.exports=function(n){return"symbol"==typeof n||a(n)&&"[object Symbol]"==r(n)}},function(n,e){n.exports=function(n){return n}},function(n,e,t){"use strict";t.d(e,"a",(function(){return a}));t(76);t(67),t(92),t(5),t(124),t(28),t(36);var r=t(101);t(42),t(31);function a(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,a,o=[],i=!0,s=!1;try{for(t=t.call(n);!(i=(r=t.next()).done)&&(o.push(r.value),!e||o.length!==e);i=!0);}catch(n){s=!0,a=n}finally{try{i||null==t.return||t.return()}finally{if(s)throw a}}return o}}(n,e)||Object(r.a)(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}},function(n,e,t){"use strict";var r=t(8),a=t(0),o=t(1),i=t(87),s=t(15),l=t(11),c=t(127),p=t(34),u=t(82),d=t(154),m=t(4),f=t(52).f,g=t(40).f,h=t(12).f,v=t(364),y=t(222).trim,b=a.Number,x=b.prototype,w=a.TypeError,k=o("".slice),S=o("".charCodeAt),E=function(n){var e=d(n,"number");return"bigint"==typeof e?e:_(e)},_=function(n){var e,t,r,a,o,i,s,l,c=d(n,"number");if(u(c))throw w("Cannot convert a Symbol value to a number");if("string"==typeof c&&c.length>2)if(c=y(c),43===(e=S(c,0))||45===e){if(88===(t=S(c,2))||120===t)return NaN}else if(48===e){switch(S(c,1)){case 66:case 98:r=2,a=49;break;case 79:case 111:r=8,a=55;break;default:return+c}for(i=(o=k(c,2)).length,s=0;s<i;s++)if((l=S(o,s))<48||l>a)return NaN;return parseInt(o,r)}return+c};if(i("Number",!b(" 0o1")||!b("0b1")||b("+0x1"))){for(var C,T=function(n){var e=arguments.length<1?0:b(E(n)),t=this;return p(x,t)&&m((function(){v(t)}))?c(Object(e),t,T):e},j=r?f(b):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","),A=0;j.length>A;A++)l(b,C=j[A])&&!l(T,C)&&h(T,C,g(b,C));T.prototype=x,x.constructor=T,s(a,"Number",T)}},function(n,e,t){"use strict";var r=t(2),a=t(57).some;r({target:"Array",proto:!0,forced:!t(45)("some")},{some:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){"use strict";var r=t(2),a=t(1),o=t(113).indexOf,i=t(45),s=a([].indexOf),l=!!s&&1/s([1],1,-0)<0,c=i("indexOf");r({target:"Array",proto:!0,forced:l||!c},{indexOf:function(n){var e=arguments.length>1?arguments[1]:void 0;return l?s(this,n,e)||0:o(this,n,e)}})},function(n,e,t){var r=t(6),a=t(37),o=t(12),i=r("unscopables"),s=Array.prototype;null==s[i]&&o.f(s,i,{configurable:!0,value:a(null)}),n.exports=function(n){s[i][n]=!0}},function(n,e,t){var r=function(n){"use strict";var e=Object.prototype,t=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},a=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",i=r.toStringTag||"@@toStringTag";function s(n,e,t){return Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}),n[e]}try{s({},"")}catch(n){s=function(n,e,t){return n[e]=t}}function l(n,e,t,r){var a=e&&e.prototype instanceof u?e:u,o=Object.create(a.prototype),i=new S(r||[]);return o._invoke=function(n,e,t){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return _()}for(t.method=a,t.arg=o;;){var i=t.delegate;if(i){var s=x(i,t);if(s){if(s===p)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=c(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===p)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}(n,t,i),o}function c(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}n.wrap=l;var p={};function u(){}function d(){}function m(){}var f={};s(f,a,(function(){return this}));var g=Object.getPrototypeOf,h=g&&g(g(E([])));h&&h!==e&&t.call(h,a)&&(f=h);var v=m.prototype=u.prototype=Object.create(f);function y(n){["next","throw","return"].forEach((function(e){s(n,e,(function(n){return this._invoke(e,n)}))}))}function b(n,e){var r;this._invoke=function(a,o){function i(){return new e((function(r,i){!function r(a,o,i,s){var l=c(n[a],n,o);if("throw"!==l.type){var p=l.arg,u=p.value;return u&&"object"==typeof u&&t.call(u,"__await")?e.resolve(u.__await).then((function(n){r("next",n,i,s)}),(function(n){r("throw",n,i,s)})):e.resolve(u).then((function(n){p.value=n,i(p)}),(function(n){return r("throw",n,i,s)}))}s(l.arg)}(a,o,r,i)}))}return r=r?r.then(i,i):i()}}function x(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,x(n,e),"throw"===e.method))return p;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var r=c(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,p;var a=r.arg;return a?a.done?(e[n.resultName]=a.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,p):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,p)}function w(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function k(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function S(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(w,this),this.reset(!0)}function E(n){if(n){var e=n[a];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var r=-1,o=function e(){for(;++r<n.length;)if(t.call(n,r))return e.value=n[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return o.next=o}}return{next:_}}function _(){return{value:void 0,done:!0}}return d.prototype=m,s(v,"constructor",m),s(m,"constructor",d),d.displayName=s(m,i,"GeneratorFunction"),n.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===d||"GeneratorFunction"===(e.displayName||e.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,m):(n.__proto__=m,s(n,i,"GeneratorFunction")),n.prototype=Object.create(v),n},n.awrap=function(n){return{__await:n}},y(b.prototype),s(b.prototype,o,(function(){return this})),n.AsyncIterator=b,n.async=function(e,t,r,a,o){void 0===o&&(o=Promise);var i=new b(l(e,t,r,a),o);return n.isGeneratorFunction(t)?i:i.next().then((function(n){return n.done?n.value:i.next()}))},y(v),s(v,i,"Generator"),s(v,a,(function(){return this})),s(v,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=E,S.prototype={constructor:S,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(k),!n)for(var e in this)"t"===e.charAt(0)&&t.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function r(t,r){return i.type="throw",i.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=t.call(o,"catchLoc"),l=t.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(n,e){for(var r=this.tryEntries.length-1;r>=0;--r){var a=this.tryEntries[r];if(a.tryLoc<=this.prev&&t.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=n,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),p},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),k(t),p}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var a=r.arg;k(t)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:E(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),p}},n}(n.exports);try{regeneratorRuntime=r}catch(n){"object"==typeof globalThis?globalThis.regeneratorRuntime=r:Function("r","regeneratorRuntime = r")(r)}},function(n,e,t){"use strict";var r=t(21),a=t(142),o=t(63),i=t(27),s=t(12).f,l=t(157),c=t(26),p=t(8),u=i.set,d=i.getterFor("Array Iterator");n.exports=l(Array,"Array",(function(n,e){u(this,{type:"Array Iterator",target:r(n),index:0,kind:e})}),(function(){var n=d(this),e=n.target,t=n.kind,r=n.index++;return!e||r>=e.length?(n.target=void 0,{value:void 0,done:!0}):"keys"==t?{value:r,done:!1}:"values"==t?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values");var m=o.Arguments=o.Array;if(a("keys"),a("values"),a("entries"),!c&&p&&"values"!==m.name)try{s(m,"name",{value:"values"})}catch(n){}},function(n,e,t){var r=t(0),a=t(14),o=t(39),i=t(9),s=t(83),l=t(105),c=r.TypeError;n.exports=function(n,e){var t=arguments.length<2?l(n):e;if(o(t))return i(a(t,n));throw c(s(n)+" is not iterable")}},function(n,e,t){var r=t(250);n.exports=function(n,e){return new(r(n))(0===e?0:e)}},function(n,e){n.exports=function(n){return n.webpackPolyfill||(n.deprecate=function(){},n.paths=[],n.children||(n.children=[]),Object.defineProperty(n,"loaded",{enumerable:!0,get:function(){return n.l}}),Object.defineProperty(n,"id",{enumerable:!0,get:function(){return n.i}}),n.webpackPolyfill=1),n}},function(n,e){var t=/^\s+|\s+$/g,r=/^[-+]0x[0-9a-f]+$/i,a=/^0b[01]+$/i,o=/^0o[0-7]+$/i,i=parseInt,s="object"==typeof global&&global&&global.Object===Object&&global,l="object"==typeof self&&self&&self.Object===Object&&self,c=s||l||Function("return this")(),p=Object.prototype.toString,u=Math.max,d=Math.min,m=function(){return c.Date.now()};function f(n){var e=typeof n;return!!n&&("object"==e||"function"==e)}function g(n){if("number"==typeof n)return n;if(function(n){return"symbol"==typeof n||function(n){return!!n&&"object"==typeof n}(n)&&"[object Symbol]"==p.call(n)}(n))return NaN;if(f(n)){var e="function"==typeof n.valueOf?n.valueOf():n;n=f(e)?e+"":e}if("string"!=typeof n)return 0===n?n:+n;n=n.replace(t,"");var s=a.test(n);return s||o.test(n)?i(n.slice(2),s?2:8):r.test(n)?NaN:+n}n.exports=function(n,e,t){var r,a,o,i,s,l,c=0,p=!1,h=!1,v=!0;if("function"!=typeof n)throw new TypeError("Expected a function");function y(e){var t=r,o=a;return r=a=void 0,c=e,i=n.apply(o,t)}function b(n){return c=n,s=setTimeout(w,e),p?y(n):i}function x(n){var t=n-l;return void 0===l||t>=e||t<0||h&&n-c>=o}function w(){var n=m();if(x(n))return k(n);s=setTimeout(w,function(n){var t=e-(n-l);return h?d(t,o-(n-c)):t}(n))}function k(n){return s=void 0,v&&r?y(n):(r=a=void 0,i)}function S(){var n=m(),t=x(n);if(r=arguments,a=this,l=n,t){if(void 0===s)return b(l);if(h)return s=setTimeout(w,e),y(l)}return void 0===s&&(s=setTimeout(w,e)),i}return e=g(e)||0,f(t)&&(p=!!t.leading,o=(h="maxWait"in t)?u(g(t.maxWait)||0,e):o,v="trailing"in t?!!t.trailing:v),S.cancel=function(){void 0!==s&&clearTimeout(s),c=0,r=l=a=s=void 0},S.flush=function(){return void 0===s?i:k(m())},S}},function(n,e,t){var r=t(1),a=t(15),o=Date.prototype,i=r(o.toString),s=r(o.getTime);"Invalid Date"!=String(new Date(NaN))&&a(o,"toString",(function(){var n=s(this);return n==n?i(this):"Invalid Date"}))},function(n,e,t){var r=t(0),a=t(8),o=t(94).MISSED_STICKY,i=t(22),s=t(12).f,l=t(27).get,c=RegExp.prototype,p=r.TypeError;a&&o&&s(c,"sticky",{configurable:!0,get:function(){if(this!==c){if("RegExp"===i(this))return!!l(this).sticky;throw p("Incompatible receiver, RegExp required")}}})},function(n,e,t){var r=t(111);n.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(n,e,t){var r=t(8),a=t(4);n.exports=r&&a((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},function(n,e,t){var r=t(8),a=t(4),o=t(80);n.exports=!r&&!a((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(n,e,t){var r=t(0),a=t(14),o=t(10),i=t(82),s=t(46),l=t(234),c=t(6),p=r.TypeError,u=c("toPrimitive");n.exports=function(n,e){if(!o(n)||i(n))return n;var t,r=s(n,u);if(r){if(void 0===e&&(e="default"),t=a(r,n,e),!o(t)||i(t))return t;throw p("Can't convert object to primitive value")}return void 0===e&&(e="number"),l(n,e)}},function(n,e,t){var r=t(1),a=t(11),o=t(21),i=t(113).indexOf,s=t(62),l=r([].push);n.exports=function(n,e){var t,r=o(n),c=0,p=[];for(t in r)!a(s,t)&&a(r,t)&&l(p,t);for(;e.length>c;)a(r,t=e[c++])&&(~i(p,t)||l(p,t));return p}},function(n,e,t){var r=t(18);n.exports=r("document","documentElement")},function(n,e,t){"use strict";var r=t(2),a=t(14),o=t(26),i=t(74),s=t(7),l=t(224),c=t(119),p=t(64),u=t(58),d=t(23),m=t(15),f=t(6),g=t(63),h=t(159),v=i.PROPER,y=i.CONFIGURABLE,b=h.IteratorPrototype,x=h.BUGGY_SAFARI_ITERATORS,w=f("iterator"),k=function(){return this};n.exports=function(n,e,t,i,f,h,S){l(t,e,i);var E,_,C,T=function(n){if(n===f&&O)return O;if(!x&&n in M)return M[n];switch(n){case"keys":case"values":case"entries":return function(){return new t(this,n)}}return function(){return new t(this)}},j=e+" Iterator",A=!1,M=n.prototype,I=M[w]||M["@@iterator"]||f&&M[f],O=!x&&I||T(f),P="Array"==e&&M.entries||I;if(P&&(E=c(P.call(new n)))!==Object.prototype&&E.next&&(o||c(E)===b||(p?p(E,b):s(E[w])||m(E,w,k)),u(E,j,!0,!0),o&&(g[j]=k)),v&&"values"==f&&I&&"values"!==I.name&&(!o&&y?d(M,"name","values"):(A=!0,O=function(){return a(I,this)})),f)if(_={values:T("values"),keys:h?O:T("keys"),entries:T("entries")},S)for(C in _)(x||A||!(C in M))&&m(M,C,_[C]);else r({target:e,proto:!0,forced:x||A},_);return o&&!S||M[w]===O||m(M,w,O,{name:f}),g[e]=O,_}},function(n,e,t){var r=t(18),a=t(1),o=t(52),i=t(118),s=t(9),l=a([].concat);n.exports=r("Reflect","ownKeys")||function(n){var e=o.f(s(n)),t=i.f;return t?l(e,t(n)):e}},function(n,e,t){"use strict";var r,a,o,i=t(4),s=t(7),l=t(37),c=t(119),p=t(15),u=t(6),d=t(26),m=u("iterator"),f=!1;[].keys&&("next"in(o=[].keys())?(a=c(c(o)))!==Object.prototype&&(r=a):f=!0),null==r||i((function(){var n={};return r[m].call(n)!==n}))?r={}:d&&(r=l(r)),s(r[m])||p(r,m,(function(){return this})),n.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:f}},function(n,e,t){var r=t(4);n.exports=!r((function(){function n(){}return n.prototype.constructor=null,Object.getPrototypeOf(new n)!==n.prototype}))},function(n,e,t){var r=t(0);n.exports=r.Promise},function(n,e,t){"use strict";var r=t(18),a=t(12),o=t(6),i=t(8),s=o("species");n.exports=function(n){var e=r(n),t=a.f;i&&e&&!e[s]&&t(e,s,{configurable:!0,get:function(){return this}})}},function(n,e,t){var r=t(6),a=t(63),o=r("iterator"),i=Array.prototype;n.exports=function(n){return void 0!==n&&(a.Array===n||i[o]===n)}},function(n,e,t){var r=t(14),a=t(9),o=t(46);n.exports=function(n,e,t){var i,s;a(n);try{if(!(i=o(n,"return"))){if("throw"===e)throw t;return t}i=r(i,n)}catch(n){s=!0,i=n}if("throw"===e)throw t;if(s)throw i;return a(i),t}},function(n,e,t){var r=t(6)("iterator"),a=!1;try{var o=0,i={next:function(){return{done:!!o++}},return:function(){a=!0}};i[r]=function(){return this},Array.from(i,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!a)return!1;var t=!1;try{var o={};o[r]=function(){return{next:function(){return{done:t=!0}}}},n(o)}catch(n){}return t}},function(n,e,t){var r=t(0),a=t(88),o=t(83),i=r.TypeError;n.exports=function(n){if(a(n))return n;throw i(o(n)+" is not a constructor")}},function(n,e,t){var r,a,o,i,s=t(0),l=t(38),c=t(56),p=t(7),u=t(11),d=t(4),m=t(156),f=t(65),g=t(80),h=t(168),v=t(89),y=s.setImmediate,b=s.clearImmediate,x=s.process,w=s.Dispatch,k=s.Function,S=s.MessageChannel,E=s.String,_=0,C={};try{r=s.location}catch(n){}var T=function(n){if(u(C,n)){var e=C[n];delete C[n],e()}},j=function(n){return function(){T(n)}},A=function(n){T(n.data)},M=function(n){s.postMessage(E(n),r.protocol+"//"+r.host)};y&&b||(y=function(n){var e=f(arguments,1);return C[++_]=function(){l(p(n)?n:k(n),void 0,e)},a(_),_},b=function(n){delete C[n]},v?a=function(n){x.nextTick(j(n))}:w&&w.now?a=function(n){w.now(j(n))}:S&&!h?(i=(o=new S).port2,o.port1.onmessage=A,a=c(i.postMessage,i)):s.addEventListener&&p(s.postMessage)&&!s.importScripts&&r&&"file:"!==r.protocol&&!d(M)?(a=M,s.addEventListener("message",A,!1)):a="onreadystatechange"in g("script")?function(n){m.appendChild(g("script")).onreadystatechange=function(){m.removeChild(this),T(n)}}:function(n){setTimeout(j(n),0)}),n.exports={set:y,clear:b}},function(n,e,t){var r=t(33);n.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},function(n,e,t){var r=t(9),a=t(10),o=t(170);n.exports=function(n,e){if(r(n),a(e)&&e.constructor===n)return e;var t=o.f(n);return(0,t.resolve)(e),t.promise}},function(n,e,t){"use strict";var r=t(39),a=function(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)};n.exports.f=function(n){return new a(n)}},function(n,e,t){var r=t(1),a=t(55),o=t(13),i=t(20),s=r("".charAt),l=r("".charCodeAt),c=r("".slice),p=function(n){return function(e,t){var r,p,u=o(i(e)),d=a(t),m=u.length;return d<0||d>=m?n?"":void 0:(r=l(u,d))<55296||r>56319||d+1===m||(p=l(u,d+1))<56320||p>57343?n?s(u,d):r:n?c(u,d,d+2):p-56320+(r-55296<<10)+65536}};n.exports={codeAt:p(!1),charAt:p(!0)}},function(n,e){n.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(n,e,t){var r=t(80)("span").classList,a=r&&r.constructor&&r.constructor.prototype;n.exports=a===Object.prototype?void 0:a},function(n,e,t){var r=t(2),a=t(8),o=t(158),i=t(21),s=t(40),l=t(66);r({target:"Object",stat:!0,sham:!a},{getOwnPropertyDescriptors:function(n){for(var e,t,r=i(n),a=s.f,c=o(r),p={},u=0;c.length>u;)void 0!==(t=a(r,e=c[u++]))&&l(p,e,t);return p}})},function(n,e,t){var r=t(2),a=t(4),o=t(17),i=t(119),s=t(160);r({target:"Object",stat:!0,forced:a((function(){i(1)})),sham:!s},{getPrototypeOf:function(n){return i(o(n))}})},function(n,e,t){var r=t(0),a=t(122),o=r.TypeError;n.exports=function(n){if(a(n))throw o("The method doesn't accept regular expressions");return n}},function(n,e,t){var r=t(6)("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,"/./"[n](e)}catch(n){}}return!1}},function(n,e,t){"use strict";var r=t(57).forEach,a=t(45)("forEach");n.exports=a?[].forEach:function(n){return r(this,n,arguments.length>1?arguments[1]:void 0)}},function(n,e,t){var r=t(4);n.exports=!r((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(n,e,t){var r=t(22),a=t(21),o=t(52).f,i=t(123),s="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];n.exports.f=function(n){return s&&"Window"==r(n)?function(n){try{return o(n)}catch(n){return i(s)}}(n):o(a(n))}},function(n,e,t){var r=t(6);e.f=r},function(n,e,t){var r=t(258),a=t(11),o=t(181),i=t(12).f;n.exports=function(n){var e=r.Symbol||(r.Symbol={});a(e,n)||i(e,n,{value:o.f(n)})}},function(n,e,t){var r=t(2),a=t(259);r({target:"Array",stat:!0,forced:!t(165)((function(n){Array.from(n)}))},{from:a})},function(n,e,t){var r=t(4),a=t(0).RegExp;n.exports=r((function(){var n=a("(?<a>b)","g");return"b"!==n.exec("b").groups.a||"bc"!=="b".replace(n,"$<a>c")}))},function(n,e,t){var r=t(13);n.exports=function(n,e){return void 0===n?arguments.length<2?"":e:r(n)}},function(n,e,t){t(2)({target:"Object",stat:!0,sham:!t(8)},{create:t(37)})},function(n,e){n.exports=function(n,e){for(var t=-1,r=e.length,a=n.length;++t<r;)n[a+t]=e[t];return n}},function(n,e){var t="object"==typeof global&&global&&global.Object===Object&&global;n.exports=t},function(n,e,t){var r=t(95),a=t(281),o=t(282),i=t(283),s=t(284),l=t(285);function c(n){var e=this.__data__=new r(n);this.size=e.size}c.prototype.clear=a,c.prototype.delete=o,c.prototype.get=i,c.prototype.has=s,c.prototype.set=l,n.exports=c},function(n,e){n.exports=function(n,e){return n===e||n!=n&&e!=e}},function(n,e,t){var r=t(60),a=t(131);n.exports=function(n){if(!a(n))return!1;var e=r(n);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(n,e){var t=Function.prototype.toString;n.exports=function(n){if(null!=n){try{return t.call(n)}catch(n){}try{return n+""}catch(n){}}return""}},function(n,e,t){var r=t(302),a=t(48);n.exports=function n(e,t,o,i,s){return e===t||(null==e||null==t||!a(e)&&!a(t)?e!=e&&t!=t:r(e,t,o,i,n,s))}},function(n,e,t){var r=t(195),a=t(305),o=t(196);n.exports=function(n,e,t,i,s,l){var c=1&t,p=n.length,u=e.length;if(p!=u&&!(c&&u>p))return!1;var d=l.get(n),m=l.get(e);if(d&&m)return d==e&&m==n;var f=-1,g=!0,h=2&t?new r:void 0;for(l.set(n,e),l.set(e,n);++f<p;){var v=n[f],y=e[f];if(i)var b=c?i(y,v,f,e,n,l):i(v,y,f,n,e,l);if(void 0!==b){if(b)continue;g=!1;break}if(h){if(!a(e,(function(n,e){if(!o(h,e)&&(v===n||s(v,n,t,i,l)))return h.push(e)}))){g=!1;break}}else if(v!==y&&!s(v,y,t,i,l)){g=!1;break}}return l.delete(n),l.delete(e),g}},function(n,e,t){var r=t(132),a=t(303),o=t(304);function i(n){var e=-1,t=null==n?0:n.length;for(this.__data__=new r;++e<t;)this.add(n[e])}i.prototype.add=i.prototype.push=a,i.prototype.has=o,n.exports=i},function(n,e){n.exports=function(n,e){return n.has(e)}},function(n,e,t){var r=t(315),a=t(321),o=t(201);n.exports=function(n){return o(n)?r(n):a(n)}},function(n,e,t){(function(n){var r=t(35),a=t(317),o=e&&!e.nodeType&&e,i=o&&"object"==typeof n&&n&&!n.nodeType&&n,s=i&&i.exports===o?r.Buffer:void 0,l=(s?s.isBuffer:void 0)||a;n.exports=l}).call(this,t(147)(n))},function(n,e){var t=/^(?:0|[1-9]\d*)$/;n.exports=function(n,e){var r=typeof n;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&t.test(n))&&n>-1&&n%1==0&&n<e}},function(n,e,t){var r=t(318),a=t(319),o=t(320),i=o&&o.isTypedArray,s=i?a(i):r;n.exports=s},function(n,e,t){var r=t(191),a=t(134);n.exports=function(n){return null!=n&&a(n.length)&&!r(n)}},function(n,e,t){var r=t(43)(t(35),"Set");n.exports=r},function(n,e,t){var r=t(131);n.exports=function(n){return n==n&&!r(n)}},function(n,e){n.exports=function(n,e){return function(t){return null!=t&&(t[n]===e&&(void 0!==e||n in Object(t)))}}},function(n,e,t){var r=t(206),a=t(99);n.exports=function(n,e){for(var t=0,o=(e=r(e,n)).length;null!=n&&t<o;)n=n[a(e[t++])];return t&&t==o?n:void 0}},function(n,e,t){var r=t(32),a=t(135),o=t(332),i=t(335);n.exports=function(n,e){return r(n)?n:a(n,e)?[n]:o(i(n))}},function(n,e){},function(n,e,t){"use strict";var r=t(2),a=t(365).start;r({target:"String",proto:!0,forced:t(367)},{padStart:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}})},function(n,e,t){},function(n,e,t){},function(n,e,t){t(2)({target:"Object",stat:!0},{setPrototypeOf:t(64)})},function(n,e,t){var r=t(2),a=t(18),o=t(38),i=t(379),s=t(166),l=t(9),c=t(10),p=t(37),u=t(4),d=a("Reflect","construct"),m=Object.prototype,f=[].push,g=u((function(){function n(){}return!(d((function(){}),[],n)instanceof n)})),h=!u((function(){d((function(){}))})),v=g||h;r({target:"Reflect",stat:!0,forced:v,sham:v},{construct:function(n,e){s(n),l(e);var t=arguments.length<3?n:s(arguments[2]);if(h&&!g)return d(n,e,t);if(n==t){switch(e.length){case 0:return new n;case 1:return new n(e[0]);case 2:return new n(e[0],e[1]);case 3:return new n(e[0],e[1],e[2]);case 4:return new n(e[0],e[1],e[2],e[3])}var r=[null];return o(f,r,e),new(o(i,n,r))}var a=t.prototype,u=p(c(a)?a:m),v=o(n,u,e);return c(v)?v:u}})},function(n,e,t){var r=t(2),a=t(0),o=t(58);r({global:!0},{Reflect:{}}),o(a.Reflect,"Reflect",!0)},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(268),a=t(273),o=t(344),i=t(352),s=t(361),l=t(229),c=o((function(n){var e=l(n);return s(e)&&(e=void 0),i(r(n,1,s,!0),a(e,2))}));n.exports=c},function(n,e,t){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var r=/["'&<>]/;n.exports=function(n){var e,t=""+n,a=r.exec(t);if(!a)return t;var o="",i=0,s=0;for(i=a.index;i<t.length;i++){switch(t.charCodeAt(i)){case 34:e="&quot;";break;case 38:e="&amp;";break;case 39:e="&#39;";break;case 60:e="&lt;";break;case 62:e="&gt;";break;default:continue}s!==i&&(o+=t.substring(s,i)),s=i+1,o+=e}return s!==i?o+t.substring(s,i):o}},function(n,e,t){"use strict";t.r(e);var r={name:"CodeBlock",props:{title:{type:String,required:!0},active:{type:Boolean,default:!1}}},a=(t(368),t(16)),o=Object(a.a)(r,(function(){var n=this.$createElement;return(this._self._c||n)("div",{staticClass:"theme-code-block",class:{"theme-code-block__active":this.active}},[this._t("default")],2)}),[],!1,null,"2ce25d0d",null);e.default=o.exports},function(n,e,t){"use strict";t.r(e);t(29),t(5),t(30),t(41),t(25);var r={name:"CodeGroup",data:function(){return{codeTabs:[],activeCodeTabIndex:-1}},watch:{activeCodeTabIndex:function(n){this.codeTabs.forEach((function(n){n.elm.classList.remove("theme-code-block__active")})),this.codeTabs[n].elm.classList.add("theme-code-block__active")}},mounted:function(){var n=this;this.codeTabs=(this.$slots.default||[]).filter((function(n){return Boolean(n.componentOptions)})).map((function(e,t){return""===e.componentOptions.propsData.active&&(n.activeCodeTabIndex=t),{title:e.componentOptions.propsData.title,elm:e.elm}})),-1===this.activeCodeTabIndex&&this.codeTabs.length>0&&(this.activeCodeTabIndex=0)},methods:{changeCodeTab:function(n){this.activeCodeTabIndex=n}}},a=(t(369),t(16)),o=Object(a.a)(r,(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"theme-code-group"},[t("div",{staticClass:"theme-code-group__nav"},[t("ul",{staticClass:"theme-code-group__ul"},n._l(n.codeTabs,(function(e,r){return t("li",{key:e.title,staticClass:"theme-code-group__li"},[t("button",{staticClass:"theme-code-group__nav-tab",class:{"theme-code-group__nav-tab-active":r===n.activeCodeTabIndex},on:{click:function(e){return n.changeCodeTab(r)}}},[n._v("\n            "+n._s(e.title)+"\n          ")])])})),0)]),n._v(" "),n._t("default"),n._v(" "),n.codeTabs.length<1?t("pre",{staticClass:"pre-blank"},[n._v("// Make sure to add code blocks to your code group")]):n._e()],2)}),[],!1,null,"f3d70150",null);e.default=o.exports},function(n,e,t){"use strict";var r=t(38),a=t(14),o=t(1),i=t(106),s=t(122),l=t(9),c=t(20),p=t(121),u=t(128),d=t(51),m=t(13),f=t(46),g=t(123),h=t(107),v=t(93),y=t(94),b=t(4),x=y.UNSUPPORTED_Y,w=Math.min,k=[].push,S=o(/./.exec),E=o(k),_=o("".slice);i("split",(function(n,e,t){var o;return o="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(n,t){var o=m(c(this)),i=void 0===t?4294967295:t>>>0;if(0===i)return[];if(void 0===n)return[o];if(!s(n))return a(e,o,n,i);for(var l,p,u,d=[],f=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),h=0,y=new RegExp(n.source,f+"g");(l=a(v,y,o))&&!((p=y.lastIndex)>h&&(E(d,_(o,h,l.index)),l.length>1&&l.index<o.length&&r(k,d,g(l,1)),u=l[0].length,h=p,d.length>=i));)y.lastIndex===l.index&&y.lastIndex++;return h===o.length?!u&&S(y,"")||E(d,""):E(d,_(o,h)),d.length>i?g(d,0,i):d}:"0".split(void 0,0).length?function(n,t){return void 0===n&&0===t?[]:a(e,this,n,t)}:e,[function(e,t){var r=c(this),i=null==e?void 0:f(e,n);return i?a(i,e,r,t):a(o,m(r),e,t)},function(n,r){var a=l(this),i=m(n),s=t(o,a,i,r,o!==e);if(s.done)return s.value;var c=p(a,RegExp),f=a.unicode,g=(a.ignoreCase?"i":"")+(a.multiline?"m":"")+(a.unicode?"u":"")+(x?"g":"y"),v=new c(x?"^(?:"+a.source+")":a,g),y=void 0===r?4294967295:r>>>0;if(0===y)return[];if(0===i.length)return null===h(v,i)?[i]:[];for(var b=0,k=0,S=[];k<i.length;){v.lastIndex=x?0:k;var C,T=h(v,x?_(i,k):i);if(null===T||(C=w(d(v.lastIndex+(x?k:0)),i.length))===b)k=u(i,k,f);else{if(E(S,_(i,b,k)),S.length===y)return S;for(var j=1;j<=T.length-1;j++)if(E(S,T[j]),S.length===y)return S;k=b=C}}return E(S,_(i,b)),S}]}),!!b((function(){var n=/(?:)/,e=n.exec;n.exec=function(){return e.apply(this,arguments)};var t="ab".split(n);return 2!==t.length||"a"!==t[0]||"b"!==t[1]})),x)},function(n,e,t){"use strict";var r=t(14),a=t(106),o=t(9),i=t(51),s=t(13),l=t(20),c=t(46),p=t(128),u=t(107);a("match",(function(n,e,t){return[function(e){var t=l(this),a=null==e?void 0:c(e,n);return a?r(a,e,t):new RegExp(e)[n](s(t))},function(n){var r=o(this),a=s(n),l=t(e,r,a);if(l.done)return l.value;if(!r.global)return u(r,a);var c=r.unicode;r.lastIndex=0;for(var d,m=[],f=0;null!==(d=u(r,a));){var g=s(d[0]);m[f]=g,""===g&&(r.lastIndex=p(a,i(r.lastIndex),c)),f++}return 0===f?null:m}]}))},function(n,e,t){var r=t(1),a=t(20),o=t(13),i=t(223),s=r("".replace),l="["+i+"]",c=RegExp("^"+l+l+"*"),p=RegExp(l+l+"*$"),u=function(n){return function(e){var t=o(a(e));return 1&n&&(t=s(t,c,"")),2&n&&(t=s(t,p,"")),t}};n.exports={start:u(1),end:u(2),trim:u(3)}},function(n,e){n.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(n,e,t){"use strict";var r=t(159).IteratorPrototype,a=t(37),o=t(47),i=t(58),s=t(63),l=function(){return this};n.exports=function(n,e,t,c){var p=e+" Iterator";return n.prototype=a(r,{next:o(+!c,t)}),i(n,p,!1,!0),s[p]=l,n}},function(n,e,t){var r=t(15);n.exports=function(n,e,t){for(var a in e)r(n,a,e[a],t);return n}},function(n,e,t){var r=t(0),a=t(34),o=r.TypeError;n.exports=function(n,e){if(a(e,n))return n;throw o("Incorrect invocation")}},function(n,e,t){"use strict";var r=t(2),a=t(113).includes,o=t(142);r({target:"Array",proto:!0},{includes:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(n,e,t){"use strict";var r=t(2),a=t(1),o=t(176),i=t(20),s=t(13),l=t(177),c=a("".indexOf);r({target:"String",proto:!0,forced:!l("includes")},{includes:function(n){return!!~c(s(i(this)),s(o(n)),arguments.length>1?arguments[1]:void 0)}})},function(n,e){n.exports=function(n){var e=null==n?0:n.length;return e?n[e-1]:void 0}},function(n,e,t){var r=t(123),a=Math.floor,o=function(n,e){var t=n.length,l=a(t/2);return t<8?i(n,e):s(n,o(r(n,0,l),e),o(r(n,l),e),e)},i=function(n,e){for(var t,r,a=n.length,o=1;o<a;){for(r=o,t=n[o];r&&e(n[r-1],t)>0;)n[r]=n[--r];r!==o++&&(n[r]=t)}return n},s=function(n,e,t,r){for(var a=e.length,o=t.length,i=0,s=0;i<a||s<o;)n[i+s]=i<a&&s<o?r(e[i],t[s])<=0?e[i++]:t[s++]:i<a?e[i++]:t[s++];return n};n.exports=o},function(n,e,t){var r=t(8),a=t(0),o=t(1),i=t(87),s=t(127),l=t(23),c=t(12).f,p=t(52).f,u=t(34),d=t(122),m=t(13),f=t(125),g=t(94),h=t(15),v=t(4),y=t(11),b=t(27).enforce,x=t(162),w=t(6),k=t(126),S=t(184),E=w("match"),_=a.RegExp,C=_.prototype,T=a.SyntaxError,j=o(f),A=o(C.exec),M=o("".charAt),I=o("".replace),O=o("".indexOf),P=o("".slice),R=/^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/,B=/a/g,q=/a/g,z=new _(B)!==B,L=g.MISSED_STICKY,D=g.UNSUPPORTED_Y,N=r&&(!z||L||k||S||v((function(){return q[E]=!1,_(B)!=B||_(q)==q||"/a/i"!=_(B,"i")})));if(i("RegExp",N)){for(var F=function(n,e){var t,r,a,o,i,c,p=u(C,this),f=d(n),g=void 0===e,h=[],v=n;if(!p&&f&&g&&n.constructor===F)return n;if((f||u(C,n))&&(n=n.source,g&&(e="flags"in v?v.flags:j(v))),n=void 0===n?"":m(n),e=void 0===e?"":m(e),v=n,k&&"dotAll"in B&&(r=!!e&&O(e,"s")>-1)&&(e=I(e,/s/g,"")),t=e,L&&"sticky"in B&&(a=!!e&&O(e,"y")>-1)&&D&&(e=I(e,/y/g,"")),S&&(n=(o=function(n){for(var e,t=n.length,r=0,a="",o=[],i={},s=!1,l=!1,c=0,p="";r<=t;r++){if("\\"===(e=M(n,r)))e+=M(n,++r);else if("]"===e)s=!1;else if(!s)switch(!0){case"["===e:s=!0;break;case"("===e:A(R,P(n,r+1))&&(r+=2,l=!0),a+=e,c++;continue;case">"===e&&l:if(""===p||y(i,p))throw new T("Invalid capture group name");i[p]=!0,o[o.length]=[p,c],l=!1,p="";continue}l?p+=e:a+=e}return[a,o]}(n))[0],h=o[1]),i=s(_(n,e),p?this:C,F),(r||a||h.length)&&(c=b(i),r&&(c.dotAll=!0,c.raw=F(function(n){for(var e,t=n.length,r=0,a="",o=!1;r<=t;r++)"\\"!==(e=M(n,r))?o||"."!==e?("["===e?o=!0:"]"===e&&(o=!1),a+=e):a+="[\\s\\S]":a+=e+M(n,++r);return a}(n),t)),a&&(c.sticky=!0),h.length&&(c.groups=h)),n!==v)try{l(i,"source",""===v?"(?:)":v)}catch(n){}return i},V=function(n){n in F||c(F,n,{configurable:!0,get:function(){return _[n]},set:function(e){_[n]=e}})},$=p(_),U=0;$.length>U;)V($[U++]);C.constructor=F,F.prototype=C,h(a,"RegExp",F)}x("RegExp")},function(n,e,t){var r=t(0),a=t(8),o=t(126),i=t(22),s=t(12).f,l=t(27).get,c=RegExp.prototype,p=r.TypeError;a&&o&&s(c,"dotAll",{configurable:!0,get:function(){if(this!==c){if("RegExp"===i(this))return!!l(this).dotAll;throw p("Incompatible receiver, RegExp required")}}})},function(n,e,t){n.exports=t(382)},function(n,e,t){var r=t(0),a=t(14),o=t(7),i=t(10),s=r.TypeError;n.exports=function(n,e){var t,r;if("string"===e&&o(t=n.toString)&&!i(r=a(t,n)))return r;if(o(t=n.valueOf)&&!i(r=a(t,n)))return r;if("string"!==e&&o(t=n.toString)&&!i(r=a(t,n)))return r;throw s("Can't convert object to primitive value")}},function(n,e,t){var r=t(0),a=t(7),o=t(86),i=r.WeakMap;n.exports=a(i)&&/native code/.test(o(i))},function(n,e,t){var r=t(0),a=t(7),o=r.String,i=r.TypeError;n.exports=function(n){if("object"==typeof n||a(n))return n;throw i("Can't set "+o(n)+" as a prototype")}},function(n,e,t){"use strict";var r,a,o,i,s=t(2),l=t(26),c=t(0),p=t(18),u=t(14),d=t(161),m=t(15),f=t(225),g=t(64),h=t(58),v=t(162),y=t(39),b=t(7),x=t(10),w=t(226),k=t(86),S=t(238),E=t(165),_=t(121),C=t(167).set,T=t(239),j=t(169),A=t(242),M=t(170),I=t(243),O=t(244),P=t(27),R=t(87),B=t(6),q=t(245),z=t(89),L=t(50),D=B("species"),N="Promise",F=P.getterFor(N),V=P.set,$=P.getterFor(N),U=d&&d.prototype,H=d,J=U,W=c.TypeError,G=c.document,Q=c.process,K=M.f,Y=K,Z=!!(G&&G.createEvent&&c.dispatchEvent),X=b(c.PromiseRejectionEvent),nn=!1,en=R(N,(function(){var n=k(H),e=n!==String(H);if(!e&&66===L)return!0;if(l&&!J.finally)return!0;if(L>=51&&/native code/.test(n))return!1;var t=new H((function(n){n(1)})),r=function(n){n((function(){}),(function(){}))};return(t.constructor={})[D]=r,!(nn=t.then((function(){}))instanceof r)||!e&&q&&!X})),tn=en||!E((function(n){H.all(n).catch((function(){}))})),rn=function(n){var e;return!(!x(n)||!b(e=n.then))&&e},an=function(n,e){var t,r,a,o=e.value,i=1==e.state,s=i?n.ok:n.fail,l=n.resolve,c=n.reject,p=n.domain;try{s?(i||(2===e.rejection&&pn(e),e.rejection=1),!0===s?t=o:(p&&p.enter(),t=s(o),p&&(p.exit(),a=!0)),t===n.promise?c(W("Promise-chain cycle")):(r=rn(t))?u(r,t,l,c):l(t)):c(o)}catch(n){p&&!a&&p.exit(),c(n)}},on=function(n,e){n.notified||(n.notified=!0,T((function(){for(var t,r=n.reactions;t=r.get();)an(t,n);n.notified=!1,e&&!n.rejection&&ln(n)})))},sn=function(n,e,t){var r,a;Z?((r=G.createEvent("Event")).promise=e,r.reason=t,r.initEvent(n,!1,!0),c.dispatchEvent(r)):r={promise:e,reason:t},!X&&(a=c["on"+n])?a(r):"unhandledrejection"===n&&A("Unhandled promise rejection",t)},ln=function(n){u(C,c,(function(){var e,t=n.facade,r=n.value;if(cn(n)&&(e=I((function(){z?Q.emit("unhandledRejection",r,t):sn("unhandledrejection",t,r)})),n.rejection=z||cn(n)?2:1,e.error))throw e.value}))},cn=function(n){return 1!==n.rejection&&!n.parent},pn=function(n){u(C,c,(function(){var e=n.facade;z?Q.emit("rejectionHandled",e):sn("rejectionhandled",e,n.value)}))},un=function(n,e,t){return function(r){n(e,r,t)}},dn=function(n,e,t){n.done||(n.done=!0,t&&(n=t),n.value=e,n.state=2,on(n,!0))},mn=function(n,e,t){if(!n.done){n.done=!0,t&&(n=t);try{if(n.facade===e)throw W("Promise can't be resolved itself");var r=rn(e);r?T((function(){var t={done:!1};try{u(r,e,un(mn,t,n),un(dn,t,n))}catch(e){dn(t,e,n)}})):(n.value=e,n.state=1,on(n,!1))}catch(e){dn({done:!1},e,n)}}};if(en&&(J=(H=function(n){w(this,J),y(n),u(r,this);var e=F(this);try{n(un(mn,e),un(dn,e))}catch(n){dn(e,n)}}).prototype,(r=function(n){V(this,{type:N,done:!1,notified:!1,parent:!1,reactions:new O,rejection:!1,state:0,value:void 0})}).prototype=f(J,{then:function(n,e){var t=$(this),r=K(_(this,H));return t.parent=!0,r.ok=!b(n)||n,r.fail=b(e)&&e,r.domain=z?Q.domain:void 0,0==t.state?t.reactions.add(r):T((function(){an(r,t)})),r.promise},catch:function(n){return this.then(void 0,n)}}),a=function(){var n=new r,e=F(n);this.promise=n,this.resolve=un(mn,e),this.reject=un(dn,e)},M.f=K=function(n){return n===H||n===o?new a(n):Y(n)},!l&&b(d)&&U!==Object.prototype)){i=U.then,nn||(m(U,"then",(function(n,e){var t=this;return new H((function(n,e){u(i,t,n,e)})).then(n,e)}),{unsafe:!0}),m(U,"catch",J.catch,{unsafe:!0}));try{delete U.constructor}catch(n){}g&&g(U,J)}s({global:!0,wrap:!0,forced:en},{Promise:H}),h(H,N,!1,!0),v(N),o=p(N),s({target:N,stat:!0,forced:en},{reject:function(n){var e=K(this);return u(e.reject,void 0,n),e.promise}}),s({target:N,stat:!0,forced:l||en},{resolve:function(n){return j(l&&this===o?H:this,n)}}),s({target:N,stat:!0,forced:tn},{all:function(n){var e=this,t=K(e),r=t.resolve,a=t.reject,o=I((function(){var t=y(e.resolve),o=[],i=0,s=1;S(n,(function(n){var l=i++,c=!1;s++,u(t,e,n).then((function(n){c||(c=!0,o[l]=n,--s||r(o))}),a)})),--s||r(o)}));return o.error&&a(o.value),t.promise},race:function(n){var e=this,t=K(e),r=t.reject,a=I((function(){var a=y(e.resolve);S(n,(function(n){u(a,e,n).then(t.resolve,r)}))}));return a.error&&r(a.value),t.promise}})},function(n,e,t){var r=t(0),a=t(56),o=t(14),i=t(9),s=t(83),l=t(163),c=t(24),p=t(34),u=t(145),d=t(105),m=t(164),f=r.TypeError,g=function(n,e){this.stopped=n,this.result=e},h=g.prototype;n.exports=function(n,e,t){var r,v,y,b,x,w,k,S=t&&t.that,E=!(!t||!t.AS_ENTRIES),_=!(!t||!t.IS_ITERATOR),C=!(!t||!t.INTERRUPTED),T=a(e,S),j=function(n){return r&&m(r,"normal",n),new g(!0,n)},A=function(n){return E?(i(n),C?T(n[0],n[1],j):T(n[0],n[1])):C?T(n,j):T(n)};if(_)r=n;else{if(!(v=d(n)))throw f(s(n)+" is not iterable");if(l(v)){for(y=0,b=c(n);b>y;y++)if((x=A(n[y]))&&p(h,x))return x;return new g(!1)}r=u(n,v)}for(w=r.next;!(k=o(w,r)).done;){try{x=A(k.value)}catch(n){m(r,"throw",n)}if("object"==typeof x&&x&&p(h,x))return x}return new g(!1)}},function(n,e,t){var r,a,o,i,s,l,c,p,u=t(0),d=t(56),m=t(40).f,f=t(167).set,g=t(168),h=t(240),v=t(241),y=t(89),b=u.MutationObserver||u.WebKitMutationObserver,x=u.document,w=u.process,k=u.Promise,S=m(u,"queueMicrotask"),E=S&&S.value;E||(r=function(){var n,e;for(y&&(n=w.domain)&&n.exit();a;){e=a.fn,a=a.next;try{e()}catch(n){throw a?i():o=void 0,n}}o=void 0,n&&n.enter()},g||y||v||!b||!x?!h&&k&&k.resolve?((c=k.resolve(void 0)).constructor=k,p=d(c.then,c),i=function(){p(r)}):y?i=function(){w.nextTick(r)}:(f=d(f,u),i=function(){f(r)}):(s=!0,l=x.createTextNode(""),new b(r).observe(l,{characterData:!0}),i=function(){l.data=s=!s})),n.exports=E||function(n){var e={fn:n,next:void 0};o&&(o.next=e),a||(a=e,i()),o=e}},function(n,e,t){var r=t(33),a=t(0);n.exports=/ipad|iphone|ipod/i.test(r)&&void 0!==a.Pebble},function(n,e,t){var r=t(33);n.exports=/web0s(?!.*chrome)/i.test(r)},function(n,e,t){var r=t(0);n.exports=function(n,e){var t=r.console;t&&t.error&&(1==arguments.length?t.error(n):t.error(n,e))}},function(n,e){n.exports=function(n){try{return{error:!1,value:n()}}catch(n){return{error:!0,value:n}}}},function(n,e){var t=function(){this.head=null,this.tail=null};t.prototype={add:function(n){var e={item:n,next:null};this.head?this.tail.next=e:this.head=e,this.tail=e},get:function(){var n=this.head;if(n)return this.head=n.next,this.tail===n&&(this.tail=null),n.item}},n.exports=t},function(n,e){n.exports="object"==typeof window},function(n,e,t){var r=t(2),a=t(247);r({target:"Object",stat:!0,forced:Object.assign!==a},{assign:a})},function(n,e,t){"use strict";var r=t(8),a=t(1),o=t(14),i=t(4),s=t(84),l=t(118),c=t(116),p=t(17),u=t(61),d=Object.assign,m=Object.defineProperty,f=a([].concat);n.exports=!d||i((function(){if(r&&1!==d({b:1},d(m({},"a",{enumerable:!0,get:function(){m(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var n={},e={},t=Symbol();return n[t]=7,"abcdefghijklmnopqrst".split("").forEach((function(n){e[n]=n})),7!=d({},n)[t]||"abcdefghijklmnopqrst"!=s(d({},e)).join("")}))?function(n,e){for(var t=p(n),a=arguments.length,i=1,d=l.f,m=c.f;a>i;)for(var g,h=u(arguments[i++]),v=d?f(s(h),d(h)):s(h),y=v.length,b=0;y>b;)g=v[b++],r&&!o(m,h,g)||(t[g]=h[g]);return t}:d},function(n,e,t){"use strict";var r=t(2),a=t(26),o=t(161),i=t(4),s=t(18),l=t(7),c=t(121),p=t(169),u=t(15);if(r({target:"Promise",proto:!0,real:!0,forced:!!o&&i((function(){o.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(n){var e=c(this,s("Promise")),t=l(n);return this.then(t?function(t){return p(e,n()).then((function(){return t}))}:n,t?function(t){return p(e,n()).then((function(){throw t}))}:n)}}),!a&&l(o)){var d=s("Promise").prototype.finally;o.prototype.finally!==d&&u(o.prototype,"finally",d,{unsafe:!0})}},function(n,e,t){"use strict";var r=t(120),a=t(75);n.exports=r?{}.toString:function(){return"[object "+a(this)+"]"}},function(n,e,t){var r=t(0),a=t(59),o=t(88),i=t(10),s=t(6)("species"),l=r.Array;n.exports=function(n){var e;return a(n)&&(e=n.constructor,(o(e)&&(e===l||a(e.prototype))||i(e)&&null===(e=e[s]))&&(e=void 0)),void 0===e?l:e}},function(n,e,t){"use strict";var r=t(2),a=t(252).left,o=t(45),i=t(50),s=t(89);r({target:"Array",proto:!0,forced:!o("reduce")||!s&&i>79&&i<83},{reduce:function(n){var e=arguments.length;return a(this,n,e,e>1?arguments[1]:void 0)}})},function(n,e,t){var r=t(0),a=t(39),o=t(17),i=t(61),s=t(24),l=r.TypeError,c=function(n){return function(e,t,r,c){a(t);var p=o(e),u=i(p),d=s(p),m=n?d-1:0,f=n?-1:1;if(r<2)for(;;){if(m in u){c=u[m],m+=f;break}if(m+=f,n?m<0:d<=m)throw l("Reduce of empty array with no initial value")}for(;n?m>=0:d>m;m+=f)m in u&&(c=t(c,u[m],m,p));return c}};n.exports={left:c(!1),right:c(!0)}},function(n,e,t){"use strict";var r,a=t(2),o=t(1),i=t(40).f,s=t(51),l=t(13),c=t(176),p=t(20),u=t(177),d=t(26),m=o("".startsWith),f=o("".slice),g=Math.min,h=u("startsWith");a({target:"String",proto:!0,forced:!!(d||h||(r=i(String.prototype,"startsWith"),!r||r.writable))&&!h},{startsWith:function(n){var e=l(p(this));c(n);var t=s(g(arguments.length>1?arguments[1]:void 0,e.length)),r=l(n);return m?m(e,r,t):f(e,t,t+r.length)===r}})},function(n,e,t){var r=t(2),a=t(179),o=t(4),i=t(10),s=t(255).onFreeze,l=Object.freeze;r({target:"Object",stat:!0,forced:o((function(){l(1)})),sham:!a},{freeze:function(n){return l&&i(n)?l(s(n)):n}})},function(n,e,t){var r=t(2),a=t(1),o=t(62),i=t(10),s=t(11),l=t(12).f,c=t(52),p=t(180),u=t(256),d=t(79),m=t(179),f=!1,g=d("meta"),h=0,v=function(n){l(n,g,{value:{objectID:"O"+h++,weakData:{}}})},y=n.exports={enable:function(){y.enable=function(){},f=!0;var n=c.f,e=a([].splice),t={};t[g]=1,n(t).length&&(c.f=function(t){for(var r=n(t),a=0,o=r.length;a<o;a++)if(r[a]===g){e(r,a,1);break}return r},r({target:"Object",stat:!0,forced:!0},{getOwnPropertyNames:p.f}))},fastKey:function(n,e){if(!i(n))return"symbol"==typeof n?n:("string"==typeof n?"S":"P")+n;if(!s(n,g)){if(!u(n))return"F";if(!e)return"E";v(n)}return n[g].objectID},getWeakData:function(n,e){if(!s(n,g)){if(!u(n))return!0;if(!e)return!1;v(n)}return n[g].weakData},onFreeze:function(n){return m&&f&&u(n)&&!s(n,g)&&v(n),n}};o[g]=!0},function(n,e,t){var r=t(4),a=t(10),o=t(22),i=t(257),s=Object.isExtensible,l=r((function(){s(1)}));n.exports=l||i?function(n){return!!a(n)&&((!i||"ArrayBuffer"!=o(n))&&(!s||s(n)))}:s},function(n,e,t){var r=t(4);n.exports=r((function(){if("function"==typeof ArrayBuffer){var n=new ArrayBuffer(8);Object.isExtensible(n)&&Object.defineProperty(n,"a",{value:8})}}))},function(n,e,t){var r=t(0);n.exports=r},function(n,e,t){"use strict";var r=t(0),a=t(56),o=t(14),i=t(17),s=t(260),l=t(163),c=t(88),p=t(24),u=t(66),d=t(145),m=t(105),f=r.Array;n.exports=function(n){var e=i(n),t=c(this),r=arguments.length,g=r>1?arguments[1]:void 0,h=void 0!==g;h&&(g=a(g,r>2?arguments[2]:void 0));var v,y,b,x,w,k,S=m(e),E=0;if(!S||this==f&&l(S))for(v=p(e),y=t?new this(v):f(v);v>E;E++)k=h?g(e[E],E):e[E],u(y,E,k);else for(w=(x=d(e,S)).next,y=t?new this:[];!(b=o(w,x)).done;E++)k=h?s(x,g,[b.value,E],!0):b.value,u(y,E,k);return y.length=E,y}},function(n,e,t){var r=t(9),a=t(164);n.exports=function(n,e,t,o){try{return o?e(r(t)[0],t[1]):e(t)}catch(e){a(n,"throw",e)}}},function(n,e,t){"use strict";var r=t(18),a=t(11),o=t(23),i=t(34),s=t(64),l=t(117),c=t(127),p=t(185),u=t(262),d=t(263),m=t(264),f=t(26);n.exports=function(n,e,t,g){var h=g?2:1,v=n.split("."),y=v[v.length-1],b=r.apply(null,v);if(b){var x=b.prototype;if(!f&&a(x,"cause")&&delete x.cause,!t)return b;var w=r("Error"),k=e((function(n,e){var t=p(g?e:n,void 0),r=g?new b(n):new b;return void 0!==t&&o(r,"message",t),m&&o(r,"stack",d(r.stack,2)),this&&i(x,this)&&c(r,this,k),arguments.length>h&&u(r,arguments[h]),r}));if(k.prototype=x,"Error"!==y&&(s?s(k,w):l(k,w,{name:!0})),l(k,b),!f)try{x.name!==y&&o(x,"name",y),x.constructor=k}catch(n){}return k}}},function(n,e,t){var r=t(10),a=t(23);n.exports=function(n,e){r(e)&&"cause"in e&&a(n,"cause",e.cause)}},function(n,e,t){var r=t(1)("".replace),a=String(Error("zxcasd").stack),o=/\n\s*at [^:]*:[^\n]*/,i=o.test(a);n.exports=function(n,e){if(i&&"string"==typeof n)for(;e--;)n=r(n,o,"");return n}},function(n,e,t){var r=t(4),a=t(47);n.exports=!r((function(){var n=Error("a");return!("stack"in n)||(Object.defineProperty(n,"stack",a(1,7)),7!==n.stack)}))},function(n,e,t){"use strict";var r=t(8),a=t(4),o=t(9),i=t(37),s=t(185),l=Error.prototype.toString,c=a((function(){if(r){var n=i(Object.defineProperty({},"name",{get:function(){return this===n}}));if("true"!==l.call(n))return!0}return"2: 1"!==l.call({message:1,name:2})||"Error"!==l.call({})}));n.exports=c?function(){var n=o(this),e=s(n.name,"Error"),t=s(n.message);return e?t?e+": "+t:e:t}:l},function(n,e,t){var r=t(1),a=t(17),o=Math.floor,i=r("".charAt),s=r("".replace),l=r("".slice),c=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,p=/\$([$&'`]|\d{1,2})/g;n.exports=function(n,e,t,r,u,d){var m=t+n.length,f=r.length,g=p;return void 0!==u&&(u=a(u),g=c),s(d,g,(function(a,s){var c;switch(i(s,0)){case"$":return"$";case"&":return n;case"`":return l(e,0,t);case"'":return l(e,m);case"<":c=u[l(s,1,-1)];break;default:var p=+s;if(0===p)return a;if(p>f){var d=o(p/10);return 0===d?a:d<=f?void 0===r[d-1]?i(s,1):r[d-1]+i(s,1):a}c=r[p-1]}return void 0===c?"":c}))}},function(n,e,t){var r=t(2),a=t(0),o=t(18),i=t(38),s=t(1),l=t(4),c=a.Array,p=o("JSON","stringify"),u=s(/./.exec),d=s("".charAt),m=s("".charCodeAt),f=s("".replace),g=s(1..toString),h=/[\uD800-\uDFFF]/g,v=/^[\uD800-\uDBFF]$/,y=/^[\uDC00-\uDFFF]$/,b=function(n,e,t){var r=d(t,e-1),a=d(t,e+1);return u(v,n)&&!u(y,a)||u(y,n)&&!u(v,r)?"\\u"+g(m(n,0),16):n},x=l((function(){return'"\\udf06\\ud834"'!==p("\udf06\ud834")||'"\\udead"'!==p("\udead")}));p&&r({target:"JSON",stat:!0,forced:x},{stringify:function(n,e,t){for(var r=0,a=arguments.length,o=c(a);r<a;r++)o[r]=arguments[r];var s=i(p,null,o);return"string"==typeof s?f(s,h,b):s}})},function(n,e,t){var r=t(187),a=t(269);n.exports=function n(e,t,o,i,s){var l=-1,c=e.length;for(o||(o=a),s||(s=[]);++l<c;){var p=e[l];t>0&&o(p)?t>1?n(p,t-1,o,i,s):r(s,p):i||(s[s.length]=p)}return s}},function(n,e,t){var r=t(68),a=t(129),o=t(32),i=r?r.isConcatSpreadable:void 0;n.exports=function(n){return o(n)||a(n)||!!(i&&n&&n[i])}},function(n,e,t){var r=t(60),a=t(48);n.exports=function(n){return a(n)&&"[object Arguments]"==r(n)}},function(n,e,t){var r=t(68),a=Object.prototype,o=a.hasOwnProperty,i=a.toString,s=r?r.toStringTag:void 0;n.exports=function(n){var e=o.call(n,s),t=n[s];try{n[s]=void 0;var r=!0}catch(n){}var a=i.call(n);return r&&(e?n[s]=t:delete n[s]),a}},function(n,e){var t=Object.prototype.toString;n.exports=function(n){return t.call(n)}},function(n,e,t){var r=t(274),a=t(330),o=t(137),i=t(32),s=t(341);n.exports=function(n){return"function"==typeof n?n:null==n?o:"object"==typeof n?i(n)?a(n[0],n[1]):r(n):s(n)}},function(n,e,t){var r=t(275),a=t(329),o=t(204);n.exports=function(n){var e=a(n);return 1==e.length&&e[0][2]?o(e[0][0],e[0][1]):function(t){return t===n||r(t,n,e)}}},function(n,e,t){var r=t(189),a=t(193);n.exports=function(n,e,t,o){var i=t.length,s=i,l=!o;if(null==n)return!s;for(n=Object(n);i--;){var c=t[i];if(l&&c[2]?c[1]!==n[c[0]]:!(c[0]in n))return!1}for(;++i<s;){var p=(c=t[i])[0],u=n[p],d=c[1];if(l&&c[2]){if(void 0===u&&!(p in n))return!1}else{var m=new r;if(o)var f=o(u,d,p,n,e,m);if(!(void 0===f?a(d,u,3,o,m):f))return!1}}return!0}},function(n,e){n.exports=function(){this.__data__=[],this.size=0}},function(n,e,t){var r=t(96),a=Array.prototype.splice;n.exports=function(n){var e=this.__data__,t=r(e,n);return!(t<0)&&(t==e.length-1?e.pop():a.call(e,t,1),--this.size,!0)}},function(n,e,t){var r=t(96);n.exports=function(n){var e=this.__data__,t=r(e,n);return t<0?void 0:e[t][1]}},function(n,e,t){var r=t(96);n.exports=function(n){return r(this.__data__,n)>-1}},function(n,e,t){var r=t(96);n.exports=function(n,e){var t=this.__data__,a=r(t,n);return a<0?(++this.size,t.push([n,e])):t[a][1]=e,this}},function(n,e,t){var r=t(95);n.exports=function(){this.__data__=new r,this.size=0}},function(n,e){n.exports=function(n){var e=this.__data__,t=e.delete(n);return this.size=e.size,t}},function(n,e){n.exports=function(n){return this.__data__.get(n)}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e,t){var r=t(95),a=t(130),o=t(132);n.exports=function(n,e){var t=this.__data__;if(t instanceof r){var i=t.__data__;if(!a||i.length<199)return i.push([n,e]),this.size=++t.size,this;t=this.__data__=new o(i)}return t.set(n,e),this.size=t.size,this}},function(n,e,t){var r=t(191),a=t(287),o=t(131),i=t(192),s=/^\[object .+?Constructor\]$/,l=Function.prototype,c=Object.prototype,p=l.toString,u=c.hasOwnProperty,d=RegExp("^"+p.call(u).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");n.exports=function(n){return!(!o(n)||a(n))&&(r(n)?d:s).test(i(n))}},function(n,e,t){var r,a=t(288),o=(r=/[^.]+$/.exec(a&&a.keys&&a.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";n.exports=function(n){return!!o&&o in n}},function(n,e,t){var r=t(35)["__core-js_shared__"];n.exports=r},function(n,e){n.exports=function(n,e){return null==n?void 0:n[e]}},function(n,e,t){var r=t(291),a=t(95),o=t(130);n.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||a),string:new r}}},function(n,e,t){var r=t(292),a=t(293),o=t(294),i=t(295),s=t(296);function l(n){var e=-1,t=null==n?0:n.length;for(this.clear();++e<t;){var r=n[e];this.set(r[0],r[1])}}l.prototype.clear=r,l.prototype.delete=a,l.prototype.get=o,l.prototype.has=i,l.prototype.set=s,n.exports=l},function(n,e,t){var r=t(97);n.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(n,e){n.exports=function(n){var e=this.has(n)&&delete this.__data__[n];return this.size-=e?1:0,e}},function(n,e,t){var r=t(97),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;if(r){var t=e[n];return"__lodash_hash_undefined__"===t?void 0:t}return a.call(e,n)?e[n]:void 0}},function(n,e,t){var r=t(97),a=Object.prototype.hasOwnProperty;n.exports=function(n){var e=this.__data__;return r?void 0!==e[n]:a.call(e,n)}},function(n,e,t){var r=t(97);n.exports=function(n,e){var t=this.__data__;return this.size+=this.has(n)?0:1,t[n]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(n,e,t){var r=t(98);n.exports=function(n){var e=r(this,n).delete(n);return this.size-=e?1:0,e}},function(n,e){n.exports=function(n){var e=typeof n;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==n:null===n}},function(n,e,t){var r=t(98);n.exports=function(n){return r(this,n).get(n)}},function(n,e,t){var r=t(98);n.exports=function(n){return r(this,n).has(n)}},function(n,e,t){var r=t(98);n.exports=function(n,e){var t=r(this,n),a=t.size;return t.set(n,e),this.size+=t.size==a?0:1,this}},function(n,e,t){var r=t(189),a=t(194),o=t(306),i=t(309),s=t(325),l=t(32),c=t(198),p=t(200),u="[object Object]",d=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,m,f,g){var h=l(n),v=l(e),y=h?"[object Array]":s(n),b=v?"[object Array]":s(e),x=(y="[object Arguments]"==y?u:y)==u,w=(b="[object Arguments]"==b?u:b)==u,k=y==b;if(k&&c(n)){if(!c(e))return!1;h=!0,x=!1}if(k&&!x)return g||(g=new r),h||p(n)?a(n,e,t,m,f,g):o(n,e,y,t,m,f,g);if(!(1&t)){var S=x&&d.call(n,"__wrapped__"),E=w&&d.call(e,"__wrapped__");if(S||E){var _=S?n.value():n,C=E?e.value():e;return g||(g=new r),f(_,C,t,m,g)}}return!!k&&(g||(g=new r),i(n,e,t,m,f,g))}},function(n,e){n.exports=function(n){return this.__data__.set(n,"__lodash_hash_undefined__"),this}},function(n,e){n.exports=function(n){return this.__data__.has(n)}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length;++t<r;)if(e(n[t],t,n))return!0;return!1}},function(n,e,t){var r=t(68),a=t(307),o=t(190),i=t(194),s=t(308),l=t(133),c=r?r.prototype:void 0,p=c?c.valueOf:void 0;n.exports=function(n,e,t,r,c,u,d){switch(t){case"[object DataView]":if(n.byteLength!=e.byteLength||n.byteOffset!=e.byteOffset)return!1;n=n.buffer,e=e.buffer;case"[object ArrayBuffer]":return!(n.byteLength!=e.byteLength||!u(new a(n),new a(e)));case"[object Boolean]":case"[object Date]":case"[object Number]":return o(+n,+e);case"[object Error]":return n.name==e.name&&n.message==e.message;case"[object RegExp]":case"[object String]":return n==e+"";case"[object Map]":var m=s;case"[object Set]":var f=1&r;if(m||(m=l),n.size!=e.size&&!f)return!1;var g=d.get(n);if(g)return g==e;r|=2,d.set(n,e);var h=i(m(n),m(e),r,c,u,d);return d.delete(n),h;case"[object Symbol]":if(p)return p.call(n)==p.call(e)}return!1}},function(n,e,t){var r=t(35).Uint8Array;n.exports=r},function(n,e){n.exports=function(n){var e=-1,t=Array(n.size);return n.forEach((function(n,r){t[++e]=[r,n]})),t}},function(n,e,t){var r=t(310),a=Object.prototype.hasOwnProperty;n.exports=function(n,e,t,o,i,s){var l=1&t,c=r(n),p=c.length;if(p!=r(e).length&&!l)return!1;for(var u=p;u--;){var d=c[u];if(!(l?d in e:a.call(e,d)))return!1}var m=s.get(n),f=s.get(e);if(m&&f)return m==e&&f==n;var g=!0;s.set(n,e),s.set(e,n);for(var h=l;++u<p;){var v=n[d=c[u]],y=e[d];if(o)var b=l?o(y,v,d,e,n,s):o(v,y,d,n,e,s);if(!(void 0===b?v===y||i(v,y,t,o,s):b)){g=!1;break}h||(h="constructor"==d)}if(g&&!h){var x=n.constructor,w=e.constructor;x==w||!("constructor"in n)||!("constructor"in e)||"function"==typeof x&&x instanceof x&&"function"==typeof w&&w instanceof w||(g=!1)}return s.delete(n),s.delete(e),g}},function(n,e,t){var r=t(311),a=t(312),o=t(197);n.exports=function(n){return r(n,o,a)}},function(n,e,t){var r=t(187),a=t(32);n.exports=function(n,e,t){var o=e(n);return a(n)?o:r(o,t(n))}},function(n,e,t){var r=t(313),a=t(314),o=Object.prototype.propertyIsEnumerable,i=Object.getOwnPropertySymbols,s=i?function(n){return null==n?[]:(n=Object(n),r(i(n),(function(e){return o.call(n,e)})))}:a;n.exports=s},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=0,o=[];++t<r;){var i=n[t];e(i,t,n)&&(o[a++]=i)}return o}},function(n,e){n.exports=function(){return[]}},function(n,e,t){var r=t(316),a=t(129),o=t(32),i=t(198),s=t(199),l=t(200),c=Object.prototype.hasOwnProperty;n.exports=function(n,e){var t=o(n),p=!t&&a(n),u=!t&&!p&&i(n),d=!t&&!p&&!u&&l(n),m=t||p||u||d,f=m?r(n.length,String):[],g=f.length;for(var h in n)!e&&!c.call(n,h)||m&&("length"==h||u&&("offset"==h||"parent"==h)||d&&("buffer"==h||"byteLength"==h||"byteOffset"==h)||s(h,g))||f.push(h);return f}},function(n,e){n.exports=function(n,e){for(var t=-1,r=Array(n);++t<n;)r[t]=e(t);return r}},function(n,e){n.exports=function(){return!1}},function(n,e,t){var r=t(60),a=t(134),o=t(48),i={};i["[object Float32Array]"]=i["[object Float64Array]"]=i["[object Int8Array]"]=i["[object Int16Array]"]=i["[object Int32Array]"]=i["[object Uint8Array]"]=i["[object Uint8ClampedArray]"]=i["[object Uint16Array]"]=i["[object Uint32Array]"]=!0,i["[object Arguments]"]=i["[object Array]"]=i["[object ArrayBuffer]"]=i["[object Boolean]"]=i["[object DataView]"]=i["[object Date]"]=i["[object Error]"]=i["[object Function]"]=i["[object Map]"]=i["[object Number]"]=i["[object Object]"]=i["[object RegExp]"]=i["[object Set]"]=i["[object String]"]=i["[object WeakMap]"]=!1,n.exports=function(n){return o(n)&&a(n.length)&&!!i[r(n)]}},function(n,e){n.exports=function(n){return function(e){return n(e)}}},function(n,e,t){(function(n){var r=t(188),a=e&&!e.nodeType&&e,o=a&&"object"==typeof n&&n&&!n.nodeType&&n,i=o&&o.exports===a&&r.process,s=function(){try{var n=o&&o.require&&o.require("util").types;return n||i&&i.binding&&i.binding("util")}catch(n){}}();n.exports=s}).call(this,t(147)(n))},function(n,e,t){var r=t(322),a=t(323),o=Object.prototype.hasOwnProperty;n.exports=function(n){if(!r(n))return a(n);var e=[];for(var t in Object(n))o.call(n,t)&&"constructor"!=t&&e.push(t);return e}},function(n,e){var t=Object.prototype;n.exports=function(n){var e=n&&n.constructor;return n===("function"==typeof e&&e.prototype||t)}},function(n,e,t){var r=t(324)(Object.keys,Object);n.exports=r},function(n,e){n.exports=function(n,e){return function(t){return n(e(t))}}},function(n,e,t){var r=t(326),a=t(130),o=t(327),i=t(202),s=t(328),l=t(60),c=t(192),p=c(r),u=c(a),d=c(o),m=c(i),f=c(s),g=l;(r&&"[object DataView]"!=g(new r(new ArrayBuffer(1)))||a&&"[object Map]"!=g(new a)||o&&"[object Promise]"!=g(o.resolve())||i&&"[object Set]"!=g(new i)||s&&"[object WeakMap]"!=g(new s))&&(g=function(n){var e=l(n),t="[object Object]"==e?n.constructor:void 0,r=t?c(t):"";if(r)switch(r){case p:return"[object DataView]";case u:return"[object Map]";case d:return"[object Promise]";case m:return"[object Set]";case f:return"[object WeakMap]"}return e}),n.exports=g},function(n,e,t){var r=t(43)(t(35),"DataView");n.exports=r},function(n,e,t){var r=t(43)(t(35),"Promise");n.exports=r},function(n,e,t){var r=t(43)(t(35),"WeakMap");n.exports=r},function(n,e,t){var r=t(203),a=t(197);n.exports=function(n){for(var e=a(n),t=e.length;t--;){var o=e[t],i=n[o];e[t]=[o,i,r(i)]}return e}},function(n,e,t){var r=t(193),a=t(331),o=t(338),i=t(135),s=t(203),l=t(204),c=t(99);n.exports=function(n,e){return i(n)&&s(e)?l(c(n),e):function(t){var i=a(t,n);return void 0===i&&i===e?o(t,n):r(e,i,3)}}},function(n,e,t){var r=t(205);n.exports=function(n,e,t){var a=null==n?void 0:r(n,e);return void 0===a?t:a}},function(n,e,t){var r=t(333),a=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,o=/\\(\\)?/g,i=r((function(n){var e=[];return 46===n.charCodeAt(0)&&e.push(""),n.replace(a,(function(n,t,r,a){e.push(r?a.replace(o,"$1"):t||n)})),e}));n.exports=i},function(n,e,t){var r=t(334);n.exports=function(n){var e=r(n,(function(n){return 500===t.size&&t.clear(),n})),t=e.cache;return e}},function(n,e,t){var r=t(132);function a(n,e){if("function"!=typeof n||null!=e&&"function"!=typeof e)throw new TypeError("Expected a function");var t=function(){var r=arguments,a=e?e.apply(this,r):r[0],o=t.cache;if(o.has(a))return o.get(a);var i=n.apply(this,r);return t.cache=o.set(a,i)||o,i};return t.cache=new(a.Cache||r),t}a.Cache=r,n.exports=a},function(n,e,t){var r=t(336);n.exports=function(n){return null==n?"":r(n)}},function(n,e,t){var r=t(68),a=t(337),o=t(32),i=t(136),s=r?r.prototype:void 0,l=s?s.toString:void 0;n.exports=function n(e){if("string"==typeof e)return e;if(o(e))return a(e,n)+"";if(i(e))return l?l.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}},function(n,e){n.exports=function(n,e){for(var t=-1,r=null==n?0:n.length,a=Array(r);++t<r;)a[t]=e(n[t],t,n);return a}},function(n,e,t){var r=t(339),a=t(340);n.exports=function(n,e){return null!=n&&a(n,e,r)}},function(n,e){n.exports=function(n,e){return null!=n&&e in Object(n)}},function(n,e,t){var r=t(206),a=t(129),o=t(32),i=t(199),s=t(134),l=t(99);n.exports=function(n,e,t){for(var c=-1,p=(e=r(e,n)).length,u=!1;++c<p;){var d=l(e[c]);if(!(u=null!=n&&t(n,d)))break;n=n[d]}return u||++c!=p?u:!!(p=null==n?0:n.length)&&s(p)&&i(d,p)&&(o(n)||a(n))}},function(n,e,t){var r=t(342),a=t(343),o=t(135),i=t(99);n.exports=function(n){return o(n)?r(i(n)):a(n)}},function(n,e){n.exports=function(n){return function(e){return null==e?void 0:e[n]}}},function(n,e,t){var r=t(205);n.exports=function(n){return function(e){return r(e,n)}}},function(n,e,t){var r=t(137),a=t(345),o=t(347);n.exports=function(n,e){return o(a(n,e,r),n+"")}},function(n,e,t){var r=t(346),a=Math.max;n.exports=function(n,e,t){return e=a(void 0===e?n.length-1:e,0),function(){for(var o=arguments,i=-1,s=a(o.length-e,0),l=Array(s);++i<s;)l[i]=o[e+i];i=-1;for(var c=Array(e+1);++i<e;)c[i]=o[i];return c[e]=t(l),r(n,this,c)}}},function(n,e){n.exports=function(n,e,t){switch(t.length){case 0:return n.call(e);case 1:return n.call(e,t[0]);case 2:return n.call(e,t[0],t[1]);case 3:return n.call(e,t[0],t[1],t[2])}return n.apply(e,t)}},function(n,e,t){var r=t(348),a=t(351)(r);n.exports=a},function(n,e,t){var r=t(349),a=t(350),o=t(137),i=a?function(n,e){return a(n,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:o;n.exports=i},function(n,e){n.exports=function(n){return function(){return n}}},function(n,e,t){var r=t(43),a=function(){try{var n=r(Object,"defineProperty");return n({},"",{}),n}catch(n){}}();n.exports=a},function(n,e){var t=Date.now;n.exports=function(n){var e=0,r=0;return function(){var a=t(),o=16-(a-r);if(r=a,o>0){if(++e>=800)return arguments[0]}else e=0;return n.apply(void 0,arguments)}}},function(n,e,t){var r=t(195),a=t(353),o=t(358),i=t(196),s=t(359),l=t(133);n.exports=function(n,e,t){var c=-1,p=a,u=n.length,d=!0,m=[],f=m;if(t)d=!1,p=o;else if(u>=200){var g=e?null:s(n);if(g)return l(g);d=!1,p=i,f=new r}else f=e?[]:m;n:for(;++c<u;){var h=n[c],v=e?e(h):h;if(h=t||0!==h?h:0,d&&v==v){for(var y=f.length;y--;)if(f[y]===v)continue n;e&&f.push(v),m.push(h)}else p(f,v,t)||(f!==m&&f.push(v),m.push(h))}return m}},function(n,e,t){var r=t(354);n.exports=function(n,e){return!!(null==n?0:n.length)&&r(n,e,0)>-1}},function(n,e,t){var r=t(355),a=t(356),o=t(357);n.exports=function(n,e,t){return e==e?o(n,e,t):r(n,a,t)}},function(n,e){n.exports=function(n,e,t,r){for(var a=n.length,o=t+(r?1:-1);r?o--:++o<a;)if(e(n[o],o,n))return o;return-1}},function(n,e){n.exports=function(n){return n!=n}},function(n,e){n.exports=function(n,e,t){for(var r=t-1,a=n.length;++r<a;)if(n[r]===e)return r;return-1}},function(n,e){n.exports=function(n,e,t){for(var r=-1,a=null==n?0:n.length;++r<a;)if(t(e,n[r]))return!0;return!1}},function(n,e,t){var r=t(202),a=t(360),o=t(133),i=r&&1/o(new r([,-0]))[1]==1/0?function(n){return new r(n)}:a;n.exports=i},function(n,e){n.exports=function(){}},function(n,e,t){var r=t(201),a=t(48);n.exports=function(n){return a(n)&&r(n)}},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(1);n.exports=r(1..valueOf)},function(n,e,t){var r=t(1),a=t(51),o=t(13),i=t(366),s=t(20),l=r(i),c=r("".slice),p=Math.ceil,u=function(n){return function(e,t,r){var i,u,d=o(s(e)),m=a(t),f=d.length,g=void 0===r?" ":o(r);return m<=f||""==g?d:((u=l(g,p((i=m-f)/g.length))).length>i&&(u=c(u,0,i)),n?d+u:u+d)}};n.exports={start:u(!1),end:u(!0)}},function(n,e,t){"use strict";var r=t(0),a=t(55),o=t(13),i=t(20),s=r.RangeError;n.exports=function(n){var e=o(i(this)),t="",r=a(n);if(r<0||r==1/0)throw s("Wrong number of repetitions");for(;r>0;(r>>>=1)&&(e+=e))1&r&&(t+=e);return t}},function(n,e,t){var r=t(33);n.exports=/Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(r)},function(n,e,t){"use strict";t(209)},function(n,e,t){"use strict";t(210)},function(n,e,t){"use strict";var r=t(2),a=t(1),o=t(39),i=t(17),s=t(24),l=t(13),c=t(4),p=t(230),u=t(45),d=t(371),m=t(372),f=t(50),g=t(373),h=[],v=a(h.sort),y=a(h.push),b=c((function(){h.sort(void 0)})),x=c((function(){h.sort(null)})),w=u("sort"),k=!c((function(){if(f)return f<70;if(!(d&&d>3)){if(m)return!0;if(g)return g<603;var n,e,t,r,a="";for(n=65;n<76;n++){switch(e=String.fromCharCode(n),n){case 66:case 69:case 70:case 72:t=3;break;case 68:case 71:t=4;break;default:t=2}for(r=0;r<47;r++)h.push({k:e+r,v:t})}for(h.sort((function(n,e){return e.v-n.v})),r=0;r<h.length;r++)e=h[r].k.charAt(0),a.charAt(a.length-1)!==e&&(a+=e);return"DGBEFHACIJK"!==a}}));r({target:"Array",proto:!0,forced:b||!x||!w||!k},{sort:function(n){void 0!==n&&o(n);var e=i(this);if(k)return void 0===n?v(e):v(e,n);var t,r,a=[],c=s(e);for(r=0;r<c;r++)r in e&&y(a,e[r]);for(p(a,function(n){return function(e,t){return void 0===t?-1:void 0===e?1:void 0!==n?+n(e,t)||0:l(e)>l(t)?1:-1}}(n)),t=a.length,r=0;r<t;)e[r]=a[r++];for(;r<c;)delete e[r++];return e}})},function(n,e,t){var r=t(33).match(/firefox\/(\d+)/i);n.exports=!!r&&+r[1]},function(n,e,t){var r=t(33);n.exports=/MSIE|Trident/.test(r)},function(n,e,t){var r=t(33).match(/AppleWebKit\/(\d+)\./);n.exports=!!r&&+r[1]},function(n,e,t){},function(n,e,t){},function(n,e,t){var r=t(2),a=t(4),o=t(21),i=t(40).f,s=t(8),l=a((function(){i(1)}));r({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(n,e){return i(o(n),e)}})},function(n,e,t){var r=t(2),a=t(8),o=t(112).f;r({target:"Object",stat:!0,forced:Object.defineProperties!==o,sham:!a},{defineProperties:o})},function(n,e,t){n.exports=function(n){var e={};function t(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return n[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:r})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(t.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)t.d(r,a,function(e){return n[e]}.bind(null,a));return r},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="fb15")}({"01f9":function(n,e,t){"use strict";var r=t("2d00"),a=t("5ca1"),o=t("2aba"),i=t("32e9"),s=t("84f2"),l=t("41a0"),c=t("7f20"),p=t("38fd"),u=t("2b4c")("iterator"),d=!([].keys&&"next"in[].keys()),m=function(){return this};n.exports=function(n,e,t,f,g,h,v){l(t,e,f);var y,b,x,w=function(n){if(!d&&n in _)return _[n];switch(n){case"keys":case"values":return function(){return new t(this,n)}}return function(){return new t(this,n)}},k=e+" Iterator",S="values"==g,E=!1,_=n.prototype,C=_[u]||_["@@iterator"]||g&&_[g],T=C||w(g),j=g?S?w("entries"):T:void 0,A="Array"==e&&_.entries||C;if(A&&(x=p(A.call(new n)))!==Object.prototype&&x.next&&(c(x,k,!0),r||"function"==typeof x[u]||i(x,u,m)),S&&C&&"values"!==C.name&&(E=!0,T=function(){return C.call(this)}),r&&!v||!d&&!E&&_[u]||i(_,u,T),s[e]=T,s[k]=m,g)if(y={values:S?T:w("values"),keys:h?T:w("keys"),entries:j},v)for(b in y)b in _||o(_,b,y[b]);else a(a.P+a.F*(d||E),e,y);return y}},"0a49":function(n,e,t){var r=t("9b43"),a=t("626a"),o=t("4bf8"),i=t("9def"),s=t("cd1c");n.exports=function(n,e){var t=1==n,l=2==n,c=3==n,p=4==n,u=6==n,d=5==n||u,m=e||s;return function(e,s,f){for(var g,h,v=o(e),y=a(v),b=r(s,f,3),x=i(y.length),w=0,k=t?m(e,x):l?m(e,0):void 0;x>w;w++)if((d||w in y)&&(h=b(g=y[w],w,v),n))if(t)k[w]=h;else if(h)switch(n){case 3:return!0;case 5:return g;case 6:return w;case 2:k.push(g)}else if(p)return!1;return u?-1:c||p?p:k}}},"0bfb":function(n,e,t){"use strict";var r=t("cb7c");n.exports=function(){var n=r(this),e="";return n.global&&(e+="g"),n.ignoreCase&&(e+="i"),n.multiline&&(e+="m"),n.unicode&&(e+="u"),n.sticky&&(e+="y"),e}},"0d58":function(n,e,t){var r=t("ce10"),a=t("e11e");n.exports=Object.keys||function(n){return r(n,a)}},1169:function(n,e,t){var r=t("2d95");n.exports=Array.isArray||function(n){return"Array"==r(n)}},"11e9":function(n,e,t){var r=t("52a7"),a=t("4630"),o=t("6821"),i=t("6a99"),s=t("69a8"),l=t("c69a"),c=Object.getOwnPropertyDescriptor;e.f=t("9e1e")?c:function(n,e){if(n=o(n),e=i(e,!0),l)try{return c(n,e)}catch(n){}if(s(n,e))return a(!r.f.call(n,e),n[e])}},1495:function(n,e,t){var r=t("86cc"),a=t("cb7c"),o=t("0d58");n.exports=t("9e1e")?Object.defineProperties:function(n,e){a(n);for(var t,i=o(e),s=i.length,l=0;s>l;)r.f(n,t=i[l++],e[t]);return n}},1991:function(n,e,t){var r,a,o,i=t("9b43"),s=t("31f4"),l=t("fab2"),c=t("230e"),p=t("7726"),u=p.process,d=p.setImmediate,m=p.clearImmediate,f=p.MessageChannel,g=p.Dispatch,h=0,v={},y=function(){var n=+this;if(v.hasOwnProperty(n)){var e=v[n];delete v[n],e()}},b=function(n){y.call(n.data)};d&&m||(d=function(n){for(var e=[],t=1;arguments.length>t;)e.push(arguments[t++]);return v[++h]=function(){s("function"==typeof n?n:Function(n),e)},r(h),h},m=function(n){delete v[n]},"process"==t("2d95")(u)?r=function(n){u.nextTick(i(y,n,1))}:g&&g.now?r=function(n){g.now(i(y,n,1))}:f?(o=(a=new f).port2,a.port1.onmessage=b,r=i(o.postMessage,o,1)):p.addEventListener&&"function"==typeof postMessage&&!p.importScripts?(r=function(n){p.postMessage(n+"","*")},p.addEventListener("message",b,!1)):r="onreadystatechange"in c("script")?function(n){l.appendChild(c("script")).onreadystatechange=function(){l.removeChild(this),y.call(n)}}:function(n){setTimeout(i(y,n,1),0)}),n.exports={set:d,clear:m}},"1fa8":function(n,e,t){var r=t("cb7c");n.exports=function(n,e,t,a){try{return a?e(r(t)[0],t[1]):e(t)}catch(e){var o=n.return;throw void 0!==o&&r(o.call(n)),e}}},"20d6":function(n,e,t){"use strict";var r=t("5ca1"),a=t("0a49")(6),o="findIndex",i=!0;o in[]&&Array(1)[o]((function(){i=!1})),r(r.P+r.F*i,"Array",{findIndex:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}}),t("9c6c")(o)},"214f":function(n,e,t){"use strict";var r=t("32e9"),a=t("2aba"),o=t("79e5"),i=t("be13"),s=t("2b4c");n.exports=function(n,e,t){var l=s(n),c=t(i,l,""[n]),p=c[0],u=c[1];o((function(){var e={};return e[l]=function(){return 7},7!=""[n](e)}))&&(a(String.prototype,n,p),r(RegExp.prototype,l,2==e?function(n,e){return u.call(n,this,e)}:function(n){return u.call(n,this)}))}},"230e":function(n,e,t){var r=t("d3f4"),a=t("7726").document,o=r(a)&&r(a.createElement);n.exports=function(n){return o?a.createElement(n):{}}},2350:function(n,e){n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=function(n,e){var t=n[1]||"",r=n[3];if(!r)return t;if(e&&"function"==typeof btoa){var a=(i=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */"),o=r.sources.map((function(n){return"/*# sourceURL="+r.sourceRoot+n+" */"}));return[t].concat(o).concat([a]).join("\n")}var i;return[t].join("\n")}(e,n);return e[2]?"@media "+e[2]+"{"+t+"}":t})).join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var r={},a=0;a<this.length;a++){var o=this[a][0];"number"==typeof o&&(r[o]=!0)}for(a=0;a<n.length;a++){var i=n[a];"number"==typeof i[0]&&r[i[0]]||(t&&!i[2]?i[2]=t:t&&(i[2]="("+i[2]+") and ("+t+")"),e.push(i))}},e}},"23c6":function(n,e,t){var r=t("2d95"),a=t("2b4c")("toStringTag"),o="Arguments"==r(function(){return arguments}());n.exports=function(n){var e,t,i;return void 0===n?"Undefined":null===n?"Null":"string"==typeof(t=function(n,e){try{return n[e]}catch(n){}}(e=Object(n),a))?t:o?r(e):"Object"==(i=r(e))&&"function"==typeof e.callee?"Arguments":i}},2621:function(n,e){e.f=Object.getOwnPropertySymbols},"27ee":function(n,e,t){var r=t("23c6"),a=t("2b4c")("iterator"),o=t("84f2");n.exports=t("8378").getIteratorMethod=function(n){if(null!=n)return n[a]||n["@@iterator"]||o[r(n)]}},"28a5":function(n,e,t){t("214f")("split",2,(function(n,e,r){"use strict";var a=t("aae3"),o=r,i=[].push,s="length";if("c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[s]||2!="ab".split(/(?:ab)*/)[s]||4!=".".split(/(.?)(.?)/)[s]||".".split(/()()/)[s]>1||"".split(/.?/)[s]){var l=void 0===/()??/.exec("")[1];r=function(n,e){var t=String(this);if(void 0===n&&0===e)return[];if(!a(n))return o.call(t,n,e);var r,c,p,u,d,m=[],f=(n.ignoreCase?"i":"")+(n.multiline?"m":"")+(n.unicode?"u":"")+(n.sticky?"y":""),g=0,h=void 0===e?4294967295:e>>>0,v=new RegExp(n.source,f+"g");for(l||(r=new RegExp("^"+v.source+"$(?!\\s)",f));(c=v.exec(t))&&!((p=c.index+c[0][s])>g&&(m.push(t.slice(g,c.index)),!l&&c[s]>1&&c[0].replace(r,(function(){for(d=1;d<arguments[s]-2;d++)void 0===arguments[d]&&(c[d]=void 0)})),c[s]>1&&c.index<t[s]&&i.apply(m,c.slice(1)),u=c[0][s],g=p,m[s]>=h));)v.lastIndex===c.index&&v.lastIndex++;return g===t[s]?!u&&v.test("")||m.push(""):m.push(t.slice(g)),m[s]>h?m.slice(0,h):m}}else"0".split(void 0,0)[s]&&(r=function(n,e){return void 0===n&&0===e?[]:o.call(this,n,e)});return[function(t,a){var o=n(this),i=null==t?void 0:t[e];return void 0!==i?i.call(t,o,a):r.call(String(o),t,a)},r]}))},"2aba":function(n,e,t){var r=t("7726"),a=t("32e9"),o=t("69a8"),i=t("ca5a")("src"),s=Function.toString,l=(""+s).split("toString");t("8378").inspectSource=function(n){return s.call(n)},(n.exports=function(n,e,t,s){var c="function"==typeof t;c&&(o(t,"name")||a(t,"name",e)),n[e]!==t&&(c&&(o(t,i)||a(t,i,n[e]?""+n[e]:l.join(String(e)))),n===r?n[e]=t:s?n[e]?n[e]=t:a(n,e,t):(delete n[e],a(n,e,t)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[i]||s.call(this)}))},"2aeb":function(n,e,t){var r=t("cb7c"),a=t("1495"),o=t("e11e"),i=t("613b")("IE_PROTO"),s=function(){},l=function(){var n,e=t("230e")("iframe"),r=o.length;for(e.style.display="none",t("fab2").appendChild(e),e.src="javascript:",(n=e.contentWindow.document).open(),n.write("<script>document.F=Object<\/script>"),n.close(),l=n.F;r--;)delete l.prototype[o[r]];return l()};n.exports=Object.create||function(n,e){var t;return null!==n?(s.prototype=r(n),t=new s,s.prototype=null,t[i]=n):t=l(),void 0===e?t:a(t,e)}},"2b4c":function(n,e,t){var r=t("5537")("wks"),a=t("ca5a"),o=t("7726").Symbol,i="function"==typeof o;(n.exports=function(n){return r[n]||(r[n]=i&&o[n]||(i?o:a)("Symbol."+n))}).store=r},"2d00":function(n,e){n.exports=!1},"2d95":function(n,e){var t={}.toString;n.exports=function(n){return t.call(n).slice(8,-1)}},"2e08":function(n,e,t){var r=t("9def"),a=t("9744"),o=t("be13");n.exports=function(n,e,t,i){var s=String(o(n)),l=s.length,c=void 0===t?" ":String(t),p=r(e);if(p<=l||""==c)return s;var u=p-l,d=a.call(c,Math.ceil(u/c.length));return d.length>u&&(d=d.slice(0,u)),i?d+s:s+d}},"2f21":function(n,e,t){"use strict";var r=t("79e5");n.exports=function(n,e){return!!n&&r((function(){e?n.call(null,(function(){}),1):n.call(null)}))}},"2fdb":function(n,e,t){"use strict";var r=t("5ca1"),a=t("d2c8");r(r.P+r.F*t("5147")("includes"),"String",{includes:function(n){return!!~a(this,n,"includes").indexOf(n,arguments.length>1?arguments[1]:void 0)}})},"31f4":function(n,e){n.exports=function(n,e,t){var r=void 0===t;switch(e.length){case 0:return r?n():n.call(t);case 1:return r?n(e[0]):n.call(t,e[0]);case 2:return r?n(e[0],e[1]):n.call(t,e[0],e[1]);case 3:return r?n(e[0],e[1],e[2]):n.call(t,e[0],e[1],e[2]);case 4:return r?n(e[0],e[1],e[2],e[3]):n.call(t,e[0],e[1],e[2],e[3])}return n.apply(t,e)}},"32e9":function(n,e,t){var r=t("86cc"),a=t("4630");n.exports=t("9e1e")?function(n,e,t){return r.f(n,e,a(1,t))}:function(n,e,t){return n[e]=t,n}},"33a4":function(n,e,t){var r=t("84f2"),a=t("2b4c")("iterator"),o=Array.prototype;n.exports=function(n){return void 0!==n&&(r.Array===n||o[a]===n)}},"37e7":function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 32 32"}},[t("path",{attrs:{d:"M25.468 6.947a1.004 1.004 0 0 0-1.03.057L18 11.384V7.831a1.001 1.001 0 0 0-1.562-.827l-12 8.164a1 1 0 0 0 0 1.654l12 8.168A.999.999 0 0 0 18 24.164v-3.556l6.438 4.382A.999.999 0 0 0 26 24.164V7.831c0-.371-.205-.71-.532-.884z"}})])}}},3846:function(n,e,t){t("9e1e")&&"g"!=/./g.flags&&t("86cc").f(RegExp.prototype,"flags",{configurable:!0,get:t("0bfb")})},"386b":function(n,e,t){var r=t("5ca1"),a=t("79e5"),o=t("be13"),i=/"/g,s=function(n,e,t,r){var a=String(o(n)),s="<"+e;return""!==t&&(s+=" "+t+'="'+String(r).replace(i,"&quot;")+'"'),s+">"+a+"</"+e+">"};n.exports=function(n,e){var t={};t[n]=e(s),r(r.P+r.F*a((function(){var e=""[n]('"');return e!==e.toLowerCase()||e.split('"').length>3})),"String",t)}},"38fd":function(n,e,t){var r=t("69a8"),a=t("4bf8"),o=t("613b")("IE_PROTO"),i=Object.prototype;n.exports=Object.getPrototypeOf||function(n){return n=a(n),r(n,o)?n[o]:"function"==typeof n.constructor&&n instanceof n.constructor?n.constructor.prototype:n instanceof Object?i:null}},"41a0":function(n,e,t){"use strict";var r=t("2aeb"),a=t("4630"),o=t("7f20"),i={};t("32e9")(i,t("2b4c")("iterator"),(function(){return this})),n.exports=function(n,e,t){n.prototype=r(i,{next:a(1,t)}),o(n,e+" Iterator")}},"456d":function(n,e,t){var r=t("4bf8"),a=t("0d58");t("5eda")("keys",(function(){return function(n){return a(r(n))}}))},4588:function(n,e){var t=Math.ceil,r=Math.floor;n.exports=function(n){return isNaN(n=+n)?0:(n>0?r:t)(n)}},4630:function(n,e){n.exports=function(n,e){return{enumerable:!(1&n),configurable:!(2&n),writable:!(4&n),value:e}}},4713:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 32 32"}},[t("path",{attrs:{d:"M26.667 5.333H5.334h-.001a2.667 2.667 0 0 0-2.666 2.666V24.001a2.667 2.667 0 0 0 2.666 2.666h21.335a2.667 2.667 0 0 0 2.666-2.666V8v-.001a2.667 2.667 0 0 0-2.666-2.666h-.001zM5.333 16h5.333v2.667H5.333V16zm13.334 8H5.334v-2.667h13.333V24zm8 0h-5.333v-2.667h5.333V24zm0-5.333H13.334V16h13.333v2.667z"}})])}}},"475a":function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 32 32"}},[t("path",{attrs:{d:"M.622 18.334h19.54v7.55l11.052-9.412-11.052-9.413v7.549H.622v3.725z"}})])}}},"48d3":function(n,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(n){for(var t in n)e.hasOwnProperty(t)||(e[t]=n[t])}(t("b349"));var r=t("66a1");e.modifiers=r.modifiers},4917:function(n,e,t){t("214f")("match",1,(function(n,e,t){return[function(t){"use strict";var r=n(this),a=null==t?void 0:t[e];return void 0!==a?a.call(t,r):new RegExp(t)[e](String(r))},t]}))},"499e":function(n,e,t){"use strict";function r(n,e){for(var t=[],r={},a=0;a<e.length;a++){var o=e[a],i=o[0],s={id:n+":"+a,css:o[1],media:o[2],sourceMap:o[3]};r[i]?r[i].parts.push(s):t.push(r[i]={id:i,parts:[s]})}return t}t.r(e),t.d(e,"default",(function(){return m}));var a="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!a)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var o={},i=a&&(document.head||document.getElementsByTagName("head")[0]),s=null,l=0,c=!1,p=function(){},u=null,d="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function m(n,e,t,a){c=t,u=a||{};var i=r(n,e);return f(i),function(e){for(var t=[],a=0;a<i.length;a++){var s=i[a];(l=o[s.id]).refs--,t.push(l)}e?f(i=r(n,e)):i=[];for(a=0;a<t.length;a++){var l;if(0===(l=t[a]).refs){for(var c=0;c<l.parts.length;c++)l.parts[c]();delete o[l.id]}}}}function f(n){for(var e=0;e<n.length;e++){var t=n[e],r=o[t.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](t.parts[a]);for(;a<t.parts.length;a++)r.parts.push(h(t.parts[a]));r.parts.length>t.parts.length&&(r.parts.length=t.parts.length)}else{var i=[];for(a=0;a<t.parts.length;a++)i.push(h(t.parts[a]));o[t.id]={id:t.id,refs:1,parts:i}}}}function g(){var n=document.createElement("style");return n.type="text/css",i.appendChild(n),n}function h(n){var e,t,r=document.querySelector('style[data-vue-ssr-id~="'+n.id+'"]');if(r){if(c)return p;r.parentNode.removeChild(r)}if(d){var a=l++;r=s||(s=g()),e=b.bind(null,r,a,!1),t=b.bind(null,r,a,!0)}else r=g(),e=x.bind(null,r),t=function(){r.parentNode.removeChild(r)};return e(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;e(n=r)}else t()}}var v,y=(v=[],function(n,e){return v[n]=e,v.filter(Boolean).join("\n")});function b(n,e,t,r){var a=t?"":r.css;if(n.styleSheet)n.styleSheet.cssText=y(e,a);else{var o=document.createTextNode(a),i=n.childNodes;i[e]&&n.removeChild(i[e]),i.length?n.insertBefore(o,i[e]):n.appendChild(o)}}function x(n,e){var t=e.css,r=e.media,a=e.sourceMap;if(r&&n.setAttribute("media",r),u.ssrId&&n.setAttribute("data-vue-ssr-id",e.id),a&&(t+="\n/*# sourceURL="+a.sources[0]+" */",t+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}},"4a59":function(n,e,t){var r=t("9b43"),a=t("1fa8"),o=t("33a4"),i=t("cb7c"),s=t("9def"),l=t("27ee"),c={},p={};(e=n.exports=function(n,e,t,u,d){var m,f,g,h,v=d?function(){return n}:l(n),y=r(t,u,e?2:1),b=0;if("function"!=typeof v)throw TypeError(n+" is not iterable!");if(o(v)){for(m=s(n.length);m>b;b++)if((h=e?y(i(f=n[b])[0],f[1]):y(n[b]))===c||h===p)return h}else for(g=v.call(n);!(f=g.next()).done;)if((h=a(g,y,f.value,e))===c||h===p)return h}).BREAK=c,e.RETURN=p},"4b41":function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 28 32"}},[t("path",{attrs:{d:"M13.728 6.272v19.456q0 .448-.352.8t-.8.32-.8-.32l-5.952-5.952H1.152q-.48 0-.8-.352t-.352-.8v-6.848q0-.48.352-.8t.8-.352h4.672l5.952-5.952q.32-.32.8-.32t.8.32.352.8zM20.576 16q0 1.344-.768 2.528t-2.016 1.664q-.16.096-.448.096-.448 0-.8-.32t-.32-.832q0-.384.192-.64t.544-.448.608-.384.512-.64.192-1.024-.192-1.024-.512-.64-.608-.384-.544-.448-.192-.64q0-.48.32-.832t.8-.32q.288 0 .448.096 1.248.48 2.016 1.664T20.576 16zm4.576 0q0 2.72-1.536 5.056t-4 3.36q-.256.096-.448.096-.48 0-.832-.352t-.32-.8q0-.704.672-1.056 1.024-.512 1.376-.8 1.312-.96 2.048-2.4T22.848 16t-.736-3.104-2.048-2.4q-.352-.288-1.376-.8-.672-.352-.672-1.056 0-.448.32-.8t.8-.352q.224 0 .48.096 2.496 1.056 4 3.36T25.152 16zm4.576 0q0 4.096-2.272 7.552t-6.048 5.056q-.224.096-.448.096-.48 0-.832-.352t-.32-.8q0-.64.704-1.056l.384-.192q.256-.128.416-.192.8-.448 1.44-.896 2.208-1.632 3.456-4.064T27.424 16t-1.216-5.152-3.456-4.064q-.64-.448-1.44-.896-.128-.096-.416-.192t-.384-.192q-.704-.416-.704-1.056 0-.448.32-.8t.832-.352q.224 0 .448.096 3.776 1.632 6.048 5.056T29.728 16z"}})])}}},"4bf8":function(n,e,t){var r=t("be13");n.exports=function(n){return Object(r(n))}},"4d26":function(n,e,t){var r;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var t={}.hasOwnProperty;function a(){for(var n=[],e=0;e<arguments.length;e++){var r=arguments[e];if(r){var o=typeof r;if("string"===o||"number"===o)n.push(r);else if(Array.isArray(r)&&r.length){var i=a.apply(null,r);i&&n.push(i)}else if("object"===o)for(var s in r)t.call(r,s)&&r[s]&&n.push(s)}}return n.join(" ")}n.exports?(a.default=a,n.exports=a):void 0===(r=function(){return a}.apply(e,[]))||(n.exports=r)}()},5147:function(n,e,t){var r=t("2b4c")("match");n.exports=function(n){var e=/./;try{"/./"[n](e)}catch(t){try{return e[r]=!1,!"/./"[n](e)}catch(n){}}return!0}},"52a7":function(n,e){e.f={}.propertyIsEnumerable},"52f0":function(n,e,t){var r={"./loading.svg":"885d","./loop-all.svg":"f866","./loop-none.svg":"c3ab","./loop-one.svg":"5527","./lrc.svg":"4713","./menu.svg":"906b","./order-list.svg":"475a","./order-random.svg":"7a1a","./pause.svg":"daf8","./play.svg":"84d8","./right.svg":"bf5c","./skip.svg":"37e7","./volume-down.svg":"bdba","./volume-off.svg":"adec","./volume-up.svg":"4b41"};function a(n){var e=o(n);return t(e)}function o(n){var e=r[n];if(!(e+1)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return e}a.keys=function(){return Object.keys(r)},a.resolve=o,n.exports=a,a.id="52f0"},"551c":function(n,e,t){"use strict";var r,a,o,i,s=t("2d00"),l=t("7726"),c=t("9b43"),p=t("23c6"),u=t("5ca1"),d=t("d3f4"),m=t("d8e8"),f=t("f605"),g=t("4a59"),h=t("ebd6"),v=t("1991").set,y=t("8079")(),b=t("a5b8"),x=t("9c80"),w=t("a25f"),k=t("bcaa"),S=l.TypeError,E=l.process,_=E&&E.versions,C=_&&_.v8||"",T=l.Promise,j="process"==p(E),A=function(){},M=a=b.f,I=!!function(){try{var n=T.resolve(1),e=(n.constructor={})[t("2b4c")("species")]=function(n){n(A,A)};return(j||"function"==typeof PromiseRejectionEvent)&&n.then(A)instanceof e&&0!==C.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(n){}}(),O=function(n){var e;return!(!d(n)||"function"!=typeof(e=n.then))&&e},P=function(n,e){if(!n._n){n._n=!0;var t=n._c;y((function(){for(var r=n._v,a=1==n._s,o=0,i=function(e){var t,o,i,s=a?e.ok:e.fail,l=e.resolve,c=e.reject,p=e.domain;try{s?(a||(2==n._h&&q(n),n._h=1),!0===s?t=r:(p&&p.enter(),t=s(r),p&&(p.exit(),i=!0)),t===e.promise?c(S("Promise-chain cycle")):(o=O(t))?o.call(t,l,c):l(t)):c(r)}catch(n){p&&!i&&p.exit(),c(n)}};t.length>o;)i(t[o++]);n._c=[],n._n=!1,e&&!n._h&&R(n)}))}},R=function(n){v.call(l,(function(){var e,t,r,a=n._v,o=B(n);if(o&&(e=x((function(){j?E.emit("unhandledRejection",a,n):(t=l.onunhandledrejection)?t({promise:n,reason:a}):(r=l.console)&&r.error&&r.error("Unhandled promise rejection",a)})),n._h=j||B(n)?2:1),n._a=void 0,o&&e.e)throw e.v}))},B=function(n){return 1!==n._h&&0===(n._a||n._c).length},q=function(n){v.call(l,(function(){var e;j?E.emit("rejectionHandled",n):(e=l.onrejectionhandled)&&e({promise:n,reason:n._v})}))},z=function(n){var e=this;e._d||(e._d=!0,(e=e._w||e)._v=n,e._s=2,e._a||(e._a=e._c.slice()),P(e,!0))},L=function(n){var e,t=this;if(!t._d){t._d=!0,t=t._w||t;try{if(t===n)throw S("Promise can't be resolved itself");(e=O(n))?y((function(){var r={_w:t,_d:!1};try{e.call(n,c(L,r,1),c(z,r,1))}catch(n){z.call(r,n)}})):(t._v=n,t._s=1,P(t,!1))}catch(n){z.call({_w:t,_d:!1},n)}}};I||(T=function(n){f(this,T,"Promise","_h"),m(n),r.call(this);try{n(c(L,this,1),c(z,this,1))}catch(n){z.call(this,n)}},(r=function(n){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=t("dcbc")(T.prototype,{then:function(n,e){var t=M(h(this,T));return t.ok="function"!=typeof n||n,t.fail="function"==typeof e&&e,t.domain=j?E.domain:void 0,this._c.push(t),this._a&&this._a.push(t),this._s&&P(this,!1),t.promise},catch:function(n){return this.then(void 0,n)}}),o=function(){var n=new r;this.promise=n,this.resolve=c(L,n,1),this.reject=c(z,n,1)},b.f=M=function(n){return n===T||n===i?new o(n):a(n)}),u(u.G+u.W+u.F*!I,{Promise:T}),t("7f20")(T,"Promise"),t("7a56")("Promise"),i=t("8378").Promise,u(u.S+u.F*!I,"Promise",{reject:function(n){var e=M(this);return(0,e.reject)(n),e.promise}}),u(u.S+u.F*(s||!I),"Promise",{resolve:function(n){return k(s&&this===i?T:this,n)}}),u(u.S+u.F*!(I&&t("5cc5")((function(n){T.all(n).catch(A)}))),"Promise",{all:function(n){var e=this,t=M(e),r=t.resolve,a=t.reject,o=x((function(){var t=[],o=0,i=1;g(n,!1,(function(n){var s=o++,l=!1;t.push(void 0),i++,e.resolve(n).then((function(n){l||(l=!0,t[s]=n,--i||r(t))}),a)})),--i||r(t)}));return o.e&&a(o.v),t.promise},race:function(n){var e=this,t=M(e),r=t.reject,a=x((function(){g(n,!1,(function(n){e.resolve(n).then(t.resolve,r)}))}));return a.e&&r(a.v),t.promise}})},5527:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 33 32"}},[t("path",{attrs:{d:"M9.333 9.333h13.333v4L27.999 8l-5.333-5.333v4h-16v8h2.667V9.334zm13.334 13.334H9.334v-4L4.001 24l5.333 5.333v-4h16v-8h-2.667v5.333zM17.333 20v-8H16l-2.667 1.333v1.333h2v5.333h2z"}})])}}},5537:function(n,e,t){var r=t("8378"),a=t("7726"),o=a["__core-js_shared__"]||(a["__core-js_shared__"]={});(n.exports=function(n,e){return o[n]||(o[n]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:t("2d00")?"pure":"global",copyright:"© 2018 Denis Pushkarev (zloirock.ru)"})},"55dd":function(n,e,t){"use strict";var r=t("5ca1"),a=t("d8e8"),o=t("4bf8"),i=t("79e5"),s=[].sort,l=[1,2,3];r(r.P+r.F*(i((function(){l.sort(void 0)}))||!i((function(){l.sort(null)}))||!t("2f21")(s)),"Array",{sort:function(n){return void 0===n?s.call(o(this)):s.call(o(this),a(n))}})},"5ca1":function(n,e,t){var r=t("7726"),a=t("8378"),o=t("32e9"),i=t("2aba"),s=t("9b43"),l=function(n,e,t){var c,p,u,d,m=n&l.F,f=n&l.G,g=n&l.S,h=n&l.P,v=n&l.B,y=f?r:g?r[e]||(r[e]={}):(r[e]||{}).prototype,b=f?a:a[e]||(a[e]={}),x=b.prototype||(b.prototype={});for(c in f&&(t=e),t)u=((p=!m&&y&&void 0!==y[c])?y:t)[c],d=v&&p?s(u,r):h&&"function"==typeof u?s(Function.call,u):u,y&&i(y,c,u,n&l.U),b[c]!=u&&o(b,c,d),h&&x[c]!=u&&(x[c]=u)};r.core=a,l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,n.exports=l},"5cc5":function(n,e,t){var r=t("2b4c")("iterator"),a=!1;try{var o=[7][r]();o.return=function(){a=!0},Array.from(o,(function(){throw 2}))}catch(n){}n.exports=function(n,e){if(!e&&!a)return!1;var t=!1;try{var o=[7],i=o[r]();i.next=function(){return{done:t=!0}},o[r]=function(){return i},n(o)}catch(n){}return t}},"5dbc":function(n,e,t){var r=t("d3f4"),a=t("8b97").set;n.exports=function(n,e,t){var o,i=e.constructor;return i!==t&&"function"==typeof i&&(o=i.prototype)!==t.prototype&&r(o)&&a&&a(n,o),n}},"5eda":function(n,e,t){var r=t("5ca1"),a=t("8378"),o=t("79e5");n.exports=function(n,e){var t=(a.Object||{})[n]||Object[n],i={};i[n]=e(t),r(r.S+r.F*o((function(){t(1)})),"Object",i)}},"610a":function(n,e,t){var r=t("ab57");"string"==typeof r&&(r=[[n.i,r,""]]),r.locals&&(n.exports=r.locals);(0,t("499e").default)("4573c8b0",r,!0,{sourceMap:!1,shadowMode:!1})},"613b":function(n,e,t){var r=t("5537")("keys"),a=t("ca5a");n.exports=function(n){return r[n]||(r[n]=a(n))}},"626a":function(n,e,t){var r=t("2d95");n.exports=Object("z").propertyIsEnumerable(0)?Object:function(n){return"String"==r(n)?n.split(""):Object(n)}},"65d9":function(n,e,t){"use strict";
/**
        * vue-class-component v6.3.2
        * (c) 2015-present Evan You
        * @license MIT
        */Object.defineProperty(e,"__esModule",{value:!0});var r,a=(r=t("8bbf"))&&"object"==typeof r&&"default"in r?r.default:r,o="undefined"!=typeof Reflect&&Reflect.defineMetadata;function i(n,e,t){(t?Reflect.getOwnMetadataKeys(e,t):Reflect.getOwnMetadataKeys(e)).forEach((function(r){var a=t?Reflect.getOwnMetadata(r,e,t):Reflect.getOwnMetadata(r,e);t?Reflect.defineMetadata(r,a,n,t):Reflect.defineMetadata(r,a,n)}))}var s={__proto__:[]}instanceof Array;var l=["data","beforeCreate","created","beforeMount","mounted","beforeDestroy","destroyed","beforeUpdate","updated","activated","deactivated","render","errorCaptured"];function c(n,e){void 0===e&&(e={}),e.name=e.name||n._componentTag||n.name;var t=n.prototype;Object.getOwnPropertyNames(t).forEach((function(n){if("constructor"!==n)if(l.indexOf(n)>-1)e[n]=t[n];else{var r=Object.getOwnPropertyDescriptor(t,n);void 0!==r.value?"function"==typeof r.value?(e.methods||(e.methods={}))[n]=r.value:(e.mixins||(e.mixins=[])).push({data:function(){var e;return(e={})[n]=r.value,e}}):(r.get||r.set)&&((e.computed||(e.computed={}))[n]={get:r.get,set:r.set})}})),(e.mixins||(e.mixins=[])).push({data:function(){return function(n,e){var t=e.prototype._init;e.prototype._init=function(){var e=this,t=Object.getOwnPropertyNames(n);if(n.$options.props)for(var r in n.$options.props)n.hasOwnProperty(r)||t.push(r);t.forEach((function(t){"_"!==t.charAt(0)&&Object.defineProperty(e,t,{get:function(){return n[t]},set:function(e){n[t]=e},configurable:!0})}))};var r=new e;e.prototype._init=t;var a={};return Object.keys(r).forEach((function(n){void 0!==r[n]&&(a[n]=r[n])})),a}(this,n)}});var r=n.__decorators__;r&&(r.forEach((function(n){return n(e)})),delete n.__decorators__);var c,p,u=Object.getPrototypeOf(n.prototype),d=u instanceof a?u.constructor:a,m=d.extend(e);return function(n,e,t){Object.getOwnPropertyNames(e).forEach((function(r){if("prototype"!==r){var a=Object.getOwnPropertyDescriptor(n,r);if(!a||a.configurable){var o,i,l=Object.getOwnPropertyDescriptor(e,r);if(!s){if("cid"===r)return;var c=Object.getOwnPropertyDescriptor(t,r);if(o=l.value,i=typeof o,null!=o&&("object"===i||"function"===i)&&c&&c.value===l.value)return}0,Object.defineProperty(n,r,l)}}}))}(m,n,d),o&&(i(c=m,p=n),Object.getOwnPropertyNames(p.prototype).forEach((function(n){i(c.prototype,p.prototype,n)})),Object.getOwnPropertyNames(p).forEach((function(n){i(c,p,n)}))),m}function p(n){return"function"==typeof n?c(n):function(e){return c(e,n)}}p.registerHooks=function(n){l.push.apply(l,n)},e.default=p,e.createDecorator=function(n){return function(e,t,r){var a="function"==typeof e?e:e.constructor;a.__decorators__||(a.__decorators__=[]),"number"!=typeof r&&(r=void 0),a.__decorators__.push((function(e){return n(e,t,r)}))}},e.mixins=function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];return a.extend({mixins:n})}},"66a1":function(n,e,t){"use strict";var r=this&&this.__assign||Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t])Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n};function a(n,e,t){for(var r=0,a=e;r<a.length;r++){if(!(0,a[r])(n))return}t&&t(n)}Object.defineProperty(e,"__esModule",{value:!0});var o={esc:27,tab:9,enter:13,space:32,up:38,down:40,del:[8,46],left:37,right:39};function i(n){for(var e=[],t=0,r=n;t<r.length;t++){var a=r[t];if("number"==typeof a)e.push(a);else{var i=o[a];"number"==typeof i?e.push(i):e.push.apply(e,i)}}switch(e.length){case 0:return function(n){return!1};case 1:var s=e[0];return function(n){return n.keyCode===s};default:return function(n){return e.indexOf(n.keyCode)>=0}}}function s(n,e,t,r,a){Object.defineProperty(n,t,{get:function(){var o=l(e.concat([r]),a);return Object.defineProperty(n,t,{value:o,enumerable:!0}),o},enumerable:!0,configurable:!0})}function l(n,e){function t(e){return e instanceof Function?function(t){return a(t,n,e)}:void a(e,n)}if(e.keyboard||e.mouse){var l=r({},e,{keyboard:!1,mouse:!1});e.keyboard&&(function(n,e,t){var r=function(r){var a=r;if("left"===a||"right"===a)return"continue";var i=o[a];if("number"==typeof i)s(n,e,a,(function(n){return n.keyCode===i}),t);else{var l=i[0],c=i[1];s(n,e,a,(function(n){return n.keyCode===l||n.keyCode===c}),t)}};for(var a in o)r(a)}(t,n,l),function(n,e,t){Object.defineProperty(n,"keys",{get:function(){var n=this,r=function(){for(var r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];var o="keys:"+r.toString(),l=n[o];if(void 0!==l)return l;var c=i(r);return s(n,e,o,c,t),n[o]};return Object.defineProperty(this,"keys",{value:r,enumerable:!0}),r},enumerable:!0,configurable:!0})}(t,n,l)),e.mouse&&s(t,n,"middle",(function(n){return 1===n.button}),l),s(t,n,"left",(function(n){return 37===n.keyCode||0===n.button}),l),s(t,n,"right",(function(n){return 39===n.keyCode||2===n.button}),l)}if(e.exact){l=r({},e,{exact:!1,modkey:!1});!function(n,e,t){Object.defineProperty(n,"exact",{get:function(){var n=this,r=function(){for(var r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];var o="exact:"+r.toString(),i=n[o];if(void 0!==i)return i;var l={ctrl:!1,shift:!1,alt:!1,meta:!1};r.forEach((function(n){return l[n]=!0}));var c=function(n){return!!n.ctrlKey===l.ctrl&&!!n.shiftKey===l.shift&&!!n.altKey===l.alt&&!!n.metaKey===l.meta};return s(n,e,o,c,t),n[o]};return Object.defineProperty(this,"exact",{value:r,enumerable:!0}),r},enumerable:!0,configurable:!0})}(t,n,l)}if(e.modkey){l=r({},e,{exact:!1});s(t,n,"ctrl",(function(n){return n.ctrlKey}),l),s(t,n,"shift",(function(n){return n.shiftKey}),l),s(t,n,"alt",(function(n){return n.altKey}),l),s(t,n,"meta",(function(n){return n.metaKey}),l),s(t,n,"noctrl",(function(n){return!n.ctrlKey}),l),s(t,n,"noshift",(function(n){return!n.shiftKey}),l),s(t,n,"noalt",(function(n){return!n.altKey}),l),s(t,n,"nometa",(function(n){return!n.metaKey}),l)}return s(t,n,"stop",(function(n){return n.stopPropagation()||!0}),e),s(t,n,"prevent",(function(n){return n.preventDefault()||!0}),e),s(t,n,"self",(function(n){return n.target===n.currentTarget}),e),t}e.modifiers=l([],{keyboard:!0,mouse:!0,modkey:!0,exact:!0})},6762:function(n,e,t){"use strict";var r=t("5ca1"),a=t("c366")(!0);r(r.P,"Array",{includes:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}}),t("9c6c")("includes")},6821:function(n,e,t){var r=t("626a"),a=t("be13");n.exports=function(n){return r(a(n))}},"69a8":function(n,e){var t={}.hasOwnProperty;n.exports=function(n,e){return t.call(n,e)}},"6a99":function(n,e,t){var r=t("d3f4");n.exports=function(n,e){if(!r(n))return n;var t,a;if(e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;if("function"==typeof(t=n.valueOf)&&!r(a=t.call(n)))return a;if(!e&&"function"==typeof(t=n.toString)&&!r(a=t.call(n)))return a;throw TypeError("Can't convert object to primitive value")}},"6b54":function(n,e,t){"use strict";t("3846");var r=t("cb7c"),a=t("0bfb"),o=t("9e1e"),i=/./.toString,s=function(n){t("2aba")(RegExp.prototype,"toString",n,!0)};t("79e5")((function(){return"/a/b"!=i.call({source:"a",flags:"b"})}))?s((function(){var n=r(this);return"/".concat(n.source,"/","flags"in n?n.flags:!o&&n instanceof RegExp?a.call(n):void 0)})):"toString"!=i.name&&s((function(){return i.call(this)}))},7333:function(n,e,t){"use strict";var r=t("0d58"),a=t("2621"),o=t("52a7"),i=t("4bf8"),s=t("626a"),l=Object.assign;n.exports=!l||t("79e5")((function(){var n={},e={},t=Symbol(),r="abcdefghijklmnopqrst";return n[t]=7,r.split("").forEach((function(n){e[n]=n})),7!=l({},n)[t]||Object.keys(l({},e)).join("")!=r}))?function(n,e){for(var t=i(n),l=arguments.length,c=1,p=a.f,u=o.f;l>c;)for(var d,m=s(arguments[c++]),f=p?r(m).concat(p(m)):r(m),g=f.length,h=0;g>h;)u.call(m,d=f[h++])&&(t[d]=m[d]);return t}:l},7514:function(n,e,t){"use strict";var r=t("5ca1"),a=t("0a49")(5),o=!0;"find"in[]&&Array(1).find((function(){o=!1})),r(r.P+r.F*o,"Array",{find:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0)}}),t("9c6c")("find")},7726:function(n,e){var t=n.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)},"77f1":function(n,e,t){var r=t("4588"),a=Math.max,o=Math.min;n.exports=function(n,e){return(n=r(n))<0?a(n+e,0):o(n,e)}},"79e5":function(n,e){n.exports=function(n){try{return!!n()}catch(n){return!0}}},"7a1a":function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 32 32"}},[t("path",{attrs:{d:"M22.667 4l7 6-7 6 7 6-7 6v-4h-3.653l-3.76-3.76 2.827-2.827L20.668 20h2v-8h-2l-12 12h-6v-4h4.347l12-12h3.653V4zm-20 4h6l3.76 3.76L9.6 14.587 7.013 12H2.666V8z"}})])}}},"7a56":function(n,e,t){"use strict";var r=t("7726"),a=t("86cc"),o=t("9e1e"),i=t("2b4c")("species");n.exports=function(n){var e=r[n];o&&e&&!e[i]&&a.f(e,i,{configurable:!0,get:function(){return this}})}},"7f20":function(n,e,t){var r=t("86cc").f,a=t("69a8"),o=t("2b4c")("toStringTag");n.exports=function(n,e,t){n&&!a(n=t?n:n.prototype,o)&&r(n,o,{configurable:!0,value:e})}},"7f7f":function(n,e,t){var r=t("86cc").f,a=Function.prototype,o=/^\s*function ([^ (]*)/;"name"in a||t("9e1e")&&r(a,"name",{configurable:!0,get:function(){try{return(""+this).match(o)[1]}catch(n){return""}}})},8079:function(n,e,t){var r=t("7726"),a=t("1991").set,o=r.MutationObserver||r.WebKitMutationObserver,i=r.process,s=r.Promise,l="process"==t("2d95")(i);n.exports=function(){var n,e,t,c=function(){var r,a;for(l&&(r=i.domain)&&r.exit();n;){a=n.fn,n=n.next;try{a()}catch(r){throw n?t():e=void 0,r}}e=void 0,r&&r.enter()};if(l)t=function(){i.nextTick(c)};else if(!o||r.navigator&&r.navigator.standalone)if(s&&s.resolve){var p=s.resolve(void 0);t=function(){p.then(c)}}else t=function(){a.call(r,c)};else{var u=!0,d=document.createTextNode("");new o(c).observe(d,{characterData:!0}),t=function(){d.data=u=!u}}return function(r){var a={fn:r,next:void 0};e&&(e.next=a),n||(n=a,t()),e=a}}},8378:function(n,e){var t=n.exports={version:"2.5.7"};"number"==typeof __e&&(__e=t)},"84d8":function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 16 31"}},[t("path",{attrs:{d:"M15.552 15.168q.448.32.448.832 0 .448-.448.768L1.856 25.28q-.768.512-1.312.192T0 24.192V7.744q0-.96.544-1.28t1.312.192z"}})])}}},"84f2":function(n,e){n.exports={}},"86cc":function(n,e,t){var r=t("cb7c"),a=t("c69a"),o=t("6a99"),i=Object.defineProperty;e.f=t("9e1e")?Object.defineProperty:function(n,e,t){if(r(n),e=o(e,!0),r(t),a)try{return i(n,e,t)}catch(n){}if("get"in t||"set"in t)throw TypeError("Accessors not supported!");return"value"in t&&(n[e]=t.value),n}},"885d":function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 32 32"}},[t("path",{attrs:{d:"M4 16C4 9.4 9.4 4 16 4s12 5.4 12 12c0 1.2-.8 2-2 2s-2-.8-2-2c0-4.4-3.6-8-8-8s-8 3.6-8 8 3.6 8 8 8c1.2 0 2 .8 2 2s-.8 2-2 2C9.4 28 4 22.6 4 16z"}})])}}},"8b97":function(n,e,t){var r=t("d3f4"),a=t("cb7c"),o=function(n,e){if(a(n),!r(e)&&null!==e)throw TypeError(e+": can't set as prototype!")};n.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(n,e,r){try{(r=t("9b43")(Function.call,t("11e9").f(Object.prototype,"__proto__").set,2))(n,[]),e=!(n instanceof Array)}catch(n){e=!0}return function(n,t){return o(n,t),e?n.__proto__=t:r(n,t),n}}({},!1):void 0),check:o}},"8bbf":function(n,e){n.exports=t(3)},"906b":function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 22 32"}},[t("path",{attrs:{d:"M20.8 14.4q.704 0 1.152.48T22.4 16t-.48 1.12-1.12.48H1.6q-.64 0-1.12-.48T0 16t.448-1.12T1.6 14.4h19.2zM1.6 11.2q-.64 0-1.12-.48T0 9.6t.448-1.12T1.6 8h19.2q.704 0 1.152.48T22.4 9.6t-.48 1.12-1.12.48H1.6zm19.2 9.6q.704 0 1.152.48t.448 1.12-.48 1.12-1.12.48H1.6q-.64 0-1.12-.48T0 22.4t.448-1.12T1.6 20.8h19.2z"}})])}}},9093:function(n,e,t){var r=t("ce10"),a=t("e11e").concat("length","prototype");e.f=Object.getOwnPropertyNames||function(n){return r(n,a)}},"96cf":function(n,e){!function(e){"use strict";var t=Object.prototype,r=t.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},o=a.iterator||"@@iterator",i=a.asyncIterator||"@@asyncIterator",s=a.toStringTag||"@@toStringTag",l="object"==typeof n,c=e.regeneratorRuntime;if(c)l&&(n.exports=c);else{(c=e.regeneratorRuntime=l?n.exports:{}).wrap=g;var p={},u={};u[o]=function(){return this};var d=Object.getPrototypeOf,m=d&&d(d(C([])));m&&m!==t&&r.call(m,o)&&(u=m);var f=b.prototype=v.prototype=Object.create(u);y.prototype=f.constructor=b,b.constructor=y,b[s]=y.displayName="GeneratorFunction",c.isGeneratorFunction=function(n){var e="function"==typeof n&&n.constructor;return!!e&&(e===y||"GeneratorFunction"===(e.displayName||e.name))},c.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,b):(n.__proto__=b,s in n||(n[s]="GeneratorFunction")),n.prototype=Object.create(f),n},c.awrap=function(n){return{__await:n}},x(w.prototype),w.prototype[i]=function(){return this},c.AsyncIterator=w,c.async=function(n,e,t,r){var a=new w(g(n,e,t,r));return c.isGeneratorFunction(e)?a:a.next().then((function(n){return n.done?n.value:a.next()}))},x(f),f[s]="Generator",f[o]=function(){return this},f.toString=function(){return"[object Generator]"},c.keys=function(n){var e=[];for(var t in n)e.push(t);return e.reverse(),function t(){for(;e.length;){var r=e.pop();if(r in n)return t.value=r,t.done=!1,t}return t.done=!0,t}},c.values=C,_.prototype={constructor:_,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!n)for(var e in this)"t"===e.charAt(0)&&r.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var e=this;function t(t,r){return i.type="throw",i.arg=n,e.next=t,r&&(e.method="next",e.arg=void 0),!!r}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],i=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var s=r.call(o,"catchLoc"),l=r.call(o,"finallyLoc");if(s&&l){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(n,e){for(var t=this.tryEntries.length-1;t>=0;--t){var a=this.tryEntries[t];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var o=a;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=n,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,p):this.complete(i)},complete:function(n,e){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&e&&(this.next=e),p},finish:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.finallyLoc===n)return this.complete(t.completion,t.afterLoc),E(t),p}},catch:function(n){for(var e=this.tryEntries.length-1;e>=0;--e){var t=this.tryEntries[e];if(t.tryLoc===n){var r=t.completion;if("throw"===r.type){var a=r.arg;E(t)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(n,e,t){return this.delegate={iterator:C(n),resultName:e,nextLoc:t},"next"===this.method&&(this.arg=void 0),p}}}function g(n,e,t,r){var a=e&&e.prototype instanceof v?e:v,o=Object.create(a.prototype),i=new _(r||[]);return o._invoke=function(n,e,t){var r="suspendedStart";return function(a,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===a)throw o;return T()}for(t.method=a,t.arg=o;;){var i=t.delegate;if(i){var s=k(i,t);if(s){if(s===p)continue;return s}}if("next"===t.method)t.sent=t._sent=t.arg;else if("throw"===t.method){if("suspendedStart"===r)throw r="completed",t.arg;t.dispatchException(t.arg)}else"return"===t.method&&t.abrupt("return",t.arg);r="executing";var l=h(n,e,t);if("normal"===l.type){if(r=t.done?"completed":"suspendedYield",l.arg===p)continue;return{value:l.arg,done:t.done}}"throw"===l.type&&(r="completed",t.method="throw",t.arg=l.arg)}}}(n,t,i),o}function h(n,e,t){try{return{type:"normal",arg:n.call(e,t)}}catch(n){return{type:"throw",arg:n}}}function v(){}function y(){}function b(){}function x(n){["next","throw","return"].forEach((function(e){n[e]=function(n){return this._invoke(e,n)}}))}function w(n){var e;this._invoke=function(t,a){function o(){return new Promise((function(e,o){!function e(t,a,o,i){var s=h(n[t],n,a);if("throw"!==s.type){var l=s.arg,c=l.value;return c&&"object"==typeof c&&r.call(c,"__await")?Promise.resolve(c.__await).then((function(n){e("next",n,o,i)}),(function(n){e("throw",n,o,i)})):Promise.resolve(c).then((function(n){l.value=n,o(l)}),i)}i(s.arg)}(t,a,e,o)}))}return e=e?e.then(o,o):o()}}function k(n,e){var t=n.iterator[e.method];if(void 0===t){if(e.delegate=null,"throw"===e.method){if(n.iterator.return&&(e.method="return",e.arg=void 0,k(n,e),"throw"===e.method))return p;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return p}var r=h(t,n.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,p;var a=r.arg;return a?a.done?(e[n.resultName]=a.value,e.next=n.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,p):a:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,p)}function S(n){var e={tryLoc:n[0]};1 in n&&(e.catchLoc=n[1]),2 in n&&(e.finallyLoc=n[2],e.afterLoc=n[3]),this.tryEntries.push(e)}function E(n){var e=n.completion||{};e.type="normal",delete e.arg,n.completion=e}function _(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(S,this),this.reset(!0)}function C(n){if(n){var e=n[o];if(e)return e.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var t=-1,a=function e(){for(;++t<n.length;)if(r.call(n,t))return e.value=n[t],e.done=!1,e;return e.value=void 0,e.done=!0,e};return a.next=a}}return{next:T}}function T(){return{value:void 0,done:!0}}}(function(){return this}()||Function("return this")())},9744:function(n,e,t){"use strict";var r=t("4588"),a=t("be13");n.exports=function(n){var e=String(a(this)),t="",o=r(n);if(o<0||o==1/0)throw RangeError("Count can't be negative");for(;o>0;(o>>>=1)&&(e+=e))1&o&&(t+=e);return t}},"9b43":function(n,e,t){var r=t("d8e8");n.exports=function(n,e,t){if(r(n),void 0===e)return n;switch(t){case 1:return function(t){return n.call(e,t)};case 2:return function(t,r){return n.call(e,t,r)};case 3:return function(t,r,a){return n.call(e,t,r,a)}}return function(){return n.apply(e,arguments)}}},"9c6c":function(n,e,t){var r=t("2b4c")("unscopables"),a=Array.prototype;null==a[r]&&t("32e9")(a,r,{}),n.exports=function(n){a[r][n]=!0}},"9c80":function(n,e){n.exports=function(n){try{return{e:!1,v:n()}}catch(n){return{e:!0,v:n}}}},"9def":function(n,e,t){var r=t("4588"),a=Math.min;n.exports=function(n){return n>0?a(r(n),9007199254740991):0}},"9e1e":function(n,e,t){n.exports=!t("79e5")((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},a25f:function(n,e,t){var r=t("7726").navigator;n.exports=r&&r.userAgent||""},a481:function(n,e,t){t("214f")("replace",2,(function(n,e,t){return[function(r,a){"use strict";var o=n(this),i=null==r?void 0:r[e];return void 0!==i?i.call(r,o,a):t.call(String(o),r,a)},t]}))},a5b8:function(n,e,t){"use strict";var r=t("d8e8");function a(n){var e,t;this.promise=new n((function(n,r){if(void 0!==e||void 0!==t)throw TypeError("Bad Promise constructor");e=n,t=r})),this.resolve=r(e),this.reject=r(t)}n.exports.f=function(n){return new a(n)}},aa77:function(n,e,t){var r=t("5ca1"),a=t("be13"),o=t("79e5"),i=t("fdef"),s="["+i+"]",l=RegExp("^"+s+s+"*"),c=RegExp(s+s+"*$"),p=function(n,e,t){var a={},s=o((function(){return!!i[n]()||"​"!="​"[n]()})),l=a[n]=s?e(u):i[n];t&&(a[t]=l),r(r.P+r.F*s,"String",a)},u=p.trim=function(n,e){return n=String(a(n)),1&e&&(n=n.replace(l,"")),2&e&&(n=n.replace(c,"")),n};n.exports=p},aae3:function(n,e,t){var r=t("d3f4"),a=t("2d95"),o=t("2b4c")("match");n.exports=function(n){var e;return r(n)&&(void 0!==(e=n[o])?!!e:"RegExp"==a(n))}},ab57:function(n,e,t){(n.exports=t("2350")(!1)).push([n.i,'.aplayer{background:#fff;font-family:Arial,Helvetica,sans-serif;margin:5px;-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,.07),0 1px 5px 0 rgba(0,0,0,.1);box-shadow:0 2px 2px 0 rgba(0,0,0,.07),0 1px 5px 0 rgba(0,0,0,.1);border-radius:2px;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;line-height:normal;position:relative}.aplayer *{-webkit-box-sizing:content-box;box-sizing:content-box}.aplayer svg{width:100%;height:100%}.aplayer svg circle,.aplayer svg path{fill:#fff}.aplayer.aplayer-withlist .aplayer-info{border-bottom:1px solid #e9e9e9}.aplayer.aplayer-withlist .aplayer-list{display:block;width:100%}.aplayer.aplayer-withlist .aplayer-icon-order,.aplayer.aplayer-withlist .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu{display:inline}.aplayer.aplayer-withlrc .aplayer-pic{height:90px;width:90px}.aplayer.aplayer-withlrc .aplayer-info{margin-left:90px;height:90px;padding:10px 7px 0 7px}.aplayer.aplayer-withlrc .aplayer-lrc{display:block}.aplayer.aplayer-narrow{width:66px}.aplayer.aplayer-narrow .aplayer-info,.aplayer.aplayer-narrow .aplayer-list{display:none}.aplayer.aplayer-narrow .aplayer-body,.aplayer.aplayer-narrow .aplayer-pic{height:33px;width:33px;border-radius:6px}.aplayer.aplayer-fixed{position:fixed;bottom:0;left:0;right:0;margin:0;z-index:99;overflow:visible;max-width:400px;-webkit-box-shadow:none;box-shadow:none}.aplayer.aplayer-fixed .aplayer-list{margin-bottom:65px;border:1px solid #eee;border-bottom:none;-webkit-box-sizing:border-box;box-sizing:border-box}.aplayer.aplayer-fixed .aplayer-body{position:fixed;bottom:0;left:0;right:0;margin:0;z-index:99;background:#fff0;padding-right:0px;-webkit-transition:width .3s ease;transition:width .3s ease;max-width:400px;width:calc(100% - 18px)}.aplayer.aplayer-fixed .aplayer-lrc{display:block;position:fixed;bottom:10px;left:0;right:0;margin:0;z-index:98;pointer-events:none;text-shadow:-1px -1px 0 #fff}.aplayer.aplayer-fixed .aplayer-lrc:after,.aplayer.aplayer-fixed .aplayer-lrc:before{display:none}.aplayer.aplayer-fixed .aplayer-info{-webkit-transform:scaleX(1);transform:scaleX(1);-webkit-transform-origin:0 0;transform-origin:0 0;-webkit-transition:all .3s ease;transition:all .3s ease;border-bottom:none;border-top:1px solid #e9e9e9}.aplayer.aplayer-fixed .aplayer-info .aplayer-music{width:calc(100% - 105px)}.aplayer.aplayer-fixed .aplayer-miniswitcher{display:block}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-info{display:block;-webkit-transform:scaleX(0);transform:scaleX(0)}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body{width:33px!important}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-miniswitcher .aplayer-icon{-webkit-transform:rotateY(0);transform:rotateY(0)}.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-lrc,.aplayer.aplayer-fixed .aplayer-icon-play{display:inline-block}.aplayer.aplayer-fixed .aplayer-icon-back,.aplayer.aplayer-fixed .aplayer-icon-forward,.aplayer.aplayer-fixed .aplayer-icon-menu,.aplayer.aplayer-fixed .aplayer-icon-play{position:absolute;bottom:27px;width:20px;height:20px}.aplayer.aplayer-fixed .aplayer-icon-back{right:75px}.aplayer.aplayer-fixed .aplayer-icon-play{right:50px}.aplayer.aplayer-fixed .aplayer-icon-forward{right:25px}.aplayer.aplayer-fixed .aplayer-icon-menu{right:0}.aplayer.aplayer-arrow .aplayer-icon-loop,.aplayer.aplayer-arrow .aplayer-icon-order,.aplayer.aplayer-mobile .aplayer-icon-volume-down,.aplayer.aplayer-mobile .aplayer-icon-volume-up{display:none}.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-loading-icon{display:block}.aplayer.aplayer-loading .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb{-webkit-transform:scale(1);transform:scale(1)}.aplayer .aplayer-body{position:relative}.aplayer .aplayer-icon{width:15px;height:15px;border:none;background-color:transparent;outline:none;cursor:pointer;opacity:.8;vertical-align:middle;padding:0;font-size:12px;margin:0;display:inline-block}.aplayer .aplayer-icon path{-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.aplayer .aplayer-icon-back,.aplayer .aplayer-icon-forward,.aplayer .aplayer-icon-lrc,.aplayer .aplayer-icon-order,.aplayer .aplayer-icon-play{display:none}.aplayer .aplayer-icon-lrc-inactivity svg{opacity:.4}.aplayer .aplayer-icon-forward{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.aplayer .aplayer-lrc-content{display:none}.aplayer .aplayer-pic{position:relative;float:left;height:66px;width:66px;background-size:cover;background-position:50%;-webkit-transition:all .3s ease;transition:all .3s ease;cursor:pointer}.aplayer .aplayer-pic:hover .aplayer-button{opacity:1}.aplayer .aplayer-pic .aplayer-button{position:absolute;border-radius:50%;opacity:.8;text-shadow:0 1px 1px rgba(0,0,0,.2);-webkit-box-shadow:0 1px 1px rgba(0,0,0,.2);box-shadow:0 1px 1px rgba(0,0,0,.2);background:rgba(0,0,0,.2);-webkit-transition:all .1s ease;transition:all .1s ease}.aplayer .aplayer-pic .aplayer-button path{fill:#fff}.aplayer .aplayer-pic .aplayer-hide{display:none}.aplayer .aplayer-pic .aplayer-play{width:26px;height:26px;border:2px solid #fff;bottom:50%;right:50%;margin:0 -15px -15px 0}.aplayer .aplayer-pic .aplayer-play svg{position:absolute;top:3px;left:4px;height:20px;width:20px}.aplayer .aplayer-pic .aplayer-pause{width:16px;height:16px;border:2px solid #fff;bottom:4px;right:4px}.aplayer .aplayer-pic .aplayer-pause svg{position:absolute;top:2px;left:2px;height:12px;width:12px}.aplayer .aplayer-info{margin-left:66px;padding:14px 7px 0 10px;height:66px;-webkit-box-sizing:border-box;box-sizing:border-box}.aplayer .aplayer-info .aplayer-music{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin:0 0 13px 5px;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:default;padding-bottom:2px;height:20px}.aplayer .aplayer-info .aplayer-music .aplayer-title{font-size:14px}.aplayer .aplayer-info .aplayer-music .aplayer-author{font-size:12px;color:#666}.aplayer .aplayer-info .aplayer-controller{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap{margin:0 0 0 5px;padding:4px 0;cursor:pointer!important;-webkit-box-flex:1;-ms-flex:1;flex:1}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap:hover .aplayer-bar .aplayer-played .aplayer-thumb{-webkit-transform:scale(1);transform:scale(1)}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar{position:relative;height:2px;width:100%;background:#cdcdcd}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-loaded{position:absolute;left:0;top:0;bottom:0;background:#aaa;height:2px;-webkit-transition:all .5s ease;transition:all .5s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played{position:absolute;left:0;top:0;bottom:0;height:2px;-webkit-transition:background-color .3s ease;transition:background-color .3s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-bar-wrap .aplayer-bar .aplayer-played .aplayer-thumb{position:absolute;top:0;right:5px;margin-top:-4px;margin-right:-10px;height:10px;width:10px;border-radius:50%;cursor:pointer;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;-webkit-transform:scale(0);transform:scale(0)}.aplayer .aplayer-info .aplayer-controller .aplayer-time{position:relative;right:0;bottom:4px;height:17px;color:#999;font-size:11px;padding-left:7px}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-time-inner{vertical-align:middle}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon{cursor:pointer;-webkit-transition:all .2s ease;transition:all .2s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon path{fill:#666}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-loop{margin-right:2px}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon:hover path{fill:#000}.aplayer .aplayer-info .aplayer-controller .aplayer-time .aplayer-icon.aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-menu,.aplayer .aplayer-info .aplayer-controller .aplayer-time.aplayer-time-narrow .aplayer-icon-mode{display:none}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap{position:relative;display:inline-block;margin-left:3px;cursor:pointer!important}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap:hover .aplayer-volume-bar-wrap{height:40px}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap{position:absolute;bottom:15px;right:-3px;width:25px;height:0;z-index:99;overflow:hidden;-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap.aplayer-volume-bar-wrap-active{height:40px}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume-bar{position:absolute;bottom:0;right:10px;width:5px;height:35px;background:#aaa;border-radius:2.5px;overflow:hidden}.aplayer .aplayer-info .aplayer-controller .aplayer-volume-wrap .aplayer-volume-bar-wrap .aplayer-volume-bar .aplayer-volume{position:absolute;bottom:0;right:0;width:5px;-webkit-transition:all .1s ease;transition:all .1s ease}.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon{display:none}.aplayer .aplayer-info .aplayer-controller .aplayer-loading-icon svg{position:absolute;-webkit-animation:rotate 1s linear infinite;animation:rotate 1s linear infinite}.aplayer .aplayer-lrc{display:none;position:relative;height:30px;text-align:center;overflow:hidden;margin:-10px 0 7px}.aplayer .aplayer-lrc:before{top:0;height:10%;background:-webkit-gradient(linear,left top,left bottom,from(#fff),to(hsla(0,0%,100%,0)));background:linear-gradient(180deg,#fff 0,hsla(0,0%,100%,0));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#ffffff",endColorstr="#00ffffff",GradientType=0)}.aplayer .aplayer-lrc:after,.aplayer .aplayer-lrc:before{position:absolute;z-index:1;display:block;overflow:hidden;width:100%;content:" "}.aplayer .aplayer-lrc:after{bottom:0;height:33%;background:-webkit-gradient(linear,left top,left bottom,from(hsla(0,0%,100%,0)),to(hsla(0,0%,100%,.8)));background:linear-gradient(180deg,hsla(0,0%,100%,0) 0,hsla(0,0%,100%,.8));filter:progid:DXImageTransform.Microsoft.gradient(startColorstr="#00ffffff",endColorstr="#ccffffff",GradientType=0)}.aplayer .aplayer-lrc p{font-size:12px;color:#666;line-height:16px!important;height:16px!important;padding:0!important;margin:0!important;-webkit-transition-property:font-size,color,opacity;transition-property:font-size,color,opacity;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;-webkit-transition-duration:.5s;transition-duration:.5s;opacity:.4;overflow:hidden}.aplayer .aplayer-lrc p.aplayer-lrc-current{opacity:1;overflow:visible;height:auto!important;min-height:16px}.aplayer .aplayer-lrc.aplayer-lrc-hide{display:none}.aplayer .aplayer-lrc .aplayer-lrc-contents{width:100%;-webkit-transition:all .5s ease-out;transition:all .5s ease-out;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;cursor:default}.aplayer .aplayer-list{overflow:auto;-webkit-transition:all .5s ease;transition:all .5s ease;will-change:height;display:none;overflow:hidden;list-style-type:none;margin:0;padding:0;overflow-y:auto}.aplayer .aplayer-list::-webkit-scrollbar{width:5px}.aplayer .aplayer-list::-webkit-scrollbar-thumb{border-radius:3px;background-color:#eee}.aplayer .aplayer-list::-webkit-scrollbar-thumb:hover{background-color:#ccc}.aplayer .aplayer-list li{position:relative;height:32px;line-height:32px;padding:0 15px;font-size:12px;border-top:1px solid #e9e9e9;cursor:pointer;-webkit-transition:all .2s ease;transition:all .2s ease;overflow:hidden;margin:0}.aplayer .aplayer-list li:first-child{border-top:none}.aplayer .aplayer-list li:hover{background:#efefef}.aplayer .aplayer-list li.aplayer-list-light{background:#e9e9e9}.aplayer .aplayer-list li.aplayer-list-light .aplayer-list-cur{display:inline-block}.aplayer .aplayer-list li .aplayer-list-cur{display:none;width:3px;height:22px;position:absolute;left:0;top:5px;-webkit-transition:background-color .3s ease;transition:background-color .3s ease;cursor:pointer}.aplayer .aplayer-list li .aplayer-list-index{color:#666;margin-right:12px;cursor:pointer}.aplayer .aplayer-list li .aplayer-list-author{color:#666;float:right;cursor:pointer}.aplayer .aplayer-notice{opacity:0;position:absolute;z-index:1;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:12px;border-radius:4px;padding:5px 10px;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;overflow:hidden;color:#fff;pointer-events:none;background-color:#f4f4f5;color:#909399}.aplayer .aplayer-miniswitcher{display:none;position:absolute;top:0;right:-18px;bottom:0;height:100%;background:#3eaf7c00;width:18px;border-radius:0 2px 2px 0}.aplayer .aplayer-miniswitcher .aplayer-icon{height:100%;width:100%;-webkit-transform:rotateY(180deg);transform:rotateY(180deg);-webkit-transition:all .3s ease;transition:all .3s ease}.aplayer .aplayer-miniswitcher .aplayer-icon path{fill:#3eaf7c}.aplayer .aplayer-miniswitcher .aplayer-icon:hover path{fill:#e2777a}@-webkit-keyframes aplayer-roll{0%{left:0}to{left:-100%}}@keyframes aplayer-roll{0%{left:0}to{left:-100%}}@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}@keyframes rotate{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}',""])},ac6a:function(n,e,t){for(var r=t("cadf"),a=t("0d58"),o=t("2aba"),i=t("7726"),s=t("32e9"),l=t("84f2"),c=t("2b4c"),p=c("iterator"),u=c("toStringTag"),d=l.Array,m={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},f=a(m),g=0;g<f.length;g++){var h,v=f[g],y=m[v],b=i[v],x=b&&b.prototype;if(x&&(x[p]||s(x,p,d),x[u]||s(x,u,v),l[v]=d,y))for(h in r)x[h]||o(x,h,r[h],!0)}},adec:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 28 32"}},[t("path",{attrs:{d:"M13.728 6.272v19.456q0 .448-.352.8t-.8.32-.8-.32l-5.952-5.952H1.152q-.48 0-.8-.352t-.352-.8v-6.848q0-.48.352-.8t.8-.352h4.672l5.952-5.952q.32-.32.8-.32t.8.32.352.8z"}})])}}},b349:function(n,e,t){"use strict";var r,a=this&&this.__extends||(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)e.hasOwnProperty(t)&&(n[t]=e[t])},function(n,e){function t(){this.constructor=n}r(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}),o=this&&this.__assign||Object.assign||function(n){for(var e,t=1,r=arguments.length;t<r;t++)for(var a in e=arguments[t])Object.prototype.hasOwnProperty.call(e,a)&&(n[a]=e[a]);return n},i=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});var s=i(t("8bbf")),l=function(n){function e(){var e=null!==n&&n.apply(this,arguments)||this;return e._tsxattrs=void 0,e.$scopedSlots=void 0,e}return a(e,n),e}(s.default);e.Component=l,e.createComponent=function(n){return s.default.extend(n)};var c={convert:function(n){return n},extendFrom:function(n){return n}};function p(n,e){return{create:function(t){var r=t.mixins?t.mixins.concat(e):e;return n.extend(o({},t,{mixins:r}))},mixin:function(t){return p(n,e.concat([t]))}}}e.ofType=function(){return c},e.withNativeOn=function(n){return n},e.withHtmlAttrs=function(n){return n},e.withUnknownProps=function(n){return n},e.componentFactory={create:function(n){return s.default.extend(n)},extendFrom:function(n){return p(n,[])},mixin:function(n){return p(s.default,[n])}},e.componentFactoryOf=function(){return e.componentFactory},e.component=e.componentFactory.create,e.extendFrom=e.componentFactory.extendFrom},bcaa:function(n,e,t){var r=t("cb7c"),a=t("d3f4"),o=t("a5b8");n.exports=function(n,e){if(r(n),a(e)&&e.constructor===n)return e;var t=o.f(n);return(0,t.resolve)(e),t.promise}},bdba:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 28 32"}},[t("path",{attrs:{d:"M13.728 6.272v19.456q0 .448-.352.8t-.8.32-.8-.32l-5.952-5.952H1.152q-.48 0-.8-.352t-.352-.8v-6.848q0-.48.352-.8t.8-.352h4.672l5.952-5.952q.32-.32.8-.32t.8.32.352.8zM20.576 16q0 1.344-.768 2.528t-2.016 1.664q-.16.096-.448.096-.448 0-.8-.32t-.32-.832q0-.384.192-.64t.544-.448.608-.384.512-.64.192-1.024-.192-1.024-.512-.64-.608-.384-.544-.448-.192-.64q0-.48.32-.832t.8-.32q.288 0 .448.096 1.248.48 2.016 1.664T20.576 16z"}})])}}},be13:function(n,e){n.exports=function(n){if(null==n)throw TypeError("Can't call method on  "+n);return n}},bf5c:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 32 32"}},[t("path",{attrs:{d:"M22 16L11.895 5.4 10 7.387 18.211 16 10 24.612l1.895 1.988 8.211-8.613z"}})])}}},c366:function(n,e,t){var r=t("6821"),a=t("9def"),o=t("77f1");n.exports=function(n){return function(e,t,i){var s,l=r(e),c=a(l.length),p=o(i,c);if(n&&t!=t){for(;c>p;)if((s=l[p++])!=s)return!0}else for(;c>p;p++)if((n||p in l)&&l[p]===t)return n||p||0;return!n&&-1}}},c3ab:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 29 32"}},[t("path",{attrs:{d:"M2.667 7.027l1.707-1.693 22.293 22.293-1.693 1.707-4-4H9.334v4l-5.333-5.333 5.333-5.333v4h8.973l-8.973-8.973v.973H6.667v-3.64l-4-4zm20 10.306h2.667v5.573l-2.667-2.667v-2.907zm0-10.666v-4L28 8l-5.333 5.333v-4H11.76L9.093 6.666h13.573z"}})])}}},c5f6:function(n,e,t){"use strict";var r=t("7726"),a=t("69a8"),o=t("2d95"),i=t("5dbc"),s=t("6a99"),l=t("79e5"),c=t("9093").f,p=t("11e9").f,u=t("86cc").f,d=t("aa77").trim,m=r.Number,f=m,g=m.prototype,h="Number"==o(t("2aeb")(g)),v="trim"in String.prototype,y=function(n){var e=s(n,!1);if("string"==typeof e&&e.length>2){var t,r,a,o=(e=v?e.trim():d(e,3)).charCodeAt(0);if(43===o||45===o){if(88===(t=e.charCodeAt(2))||120===t)return NaN}else if(48===o){switch(e.charCodeAt(1)){case 66:case 98:r=2,a=49;break;case 79:case 111:r=8,a=55;break;default:return+e}for(var i,l=e.slice(2),c=0,p=l.length;c<p;c++)if((i=l.charCodeAt(c))<48||i>a)return NaN;return parseInt(l,r)}}return+e};if(!m(" 0o1")||!m("0b1")||m("+0x1")){m=function(n){var e=arguments.length<1?0:n,t=this;return t instanceof m&&(h?l((function(){g.valueOf.call(t)})):"Number"!=o(t))?i(new f(y(e)),t,m):y(e)};for(var b,x=t("9e1e")?c(f):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;x.length>w;w++)a(f,b=x[w])&&!a(m,b)&&u(m,b,p(f,b));m.prototype=g,g.constructor=m,t("2aba")(r,"Number",m)}},c69a:function(n,e,t){n.exports=!t("9e1e")&&!t("79e5")((function(){return 7!=Object.defineProperty(t("230e")("div"),"a",{get:function(){return 7}}).a}))},ca5a:function(n,e){var t=0,r=Math.random();n.exports=function(n){return"Symbol(".concat(void 0===n?"":n,")_",(++t+r).toString(36))}},cadf:function(n,e,t){"use strict";var r=t("9c6c"),a=t("d53b"),o=t("84f2"),i=t("6821");n.exports=t("01f9")(Array,"Array",(function(n,e){this._t=i(n),this._i=0,this._k=e}),(function(){var n=this._t,e=this._k,t=this._i++;return!n||t>=n.length?(this._t=void 0,a(1)):a(0,"keys"==e?t:"values"==e?n[t]:[t,n[t]])}),"values"),o.Arguments=o.Array,r("keys"),r("values"),r("entries")},cb7c:function(n,e,t){var r=t("d3f4");n.exports=function(n){if(!r(n))throw TypeError(n+" is not an object!");return n}},cd1c:function(n,e,t){var r=t("e853");n.exports=function(n,e){return new(r(n))(e)}},ce10:function(n,e,t){var r=t("69a8"),a=t("6821"),o=t("c366")(!1),i=t("613b")("IE_PROTO");n.exports=function(n,e){var t,s=a(n),l=0,c=[];for(t in s)t!=i&&r(s,t)&&c.push(t);for(;e.length>l;)r(s,t=e[l++])&&(~o(c,t)||c.push(t));return c}},d263:function(n,e,t){"use strict";t("386b")("fixed",(function(n){return function(){return n(this,"tt","","")}}))},d2c8:function(n,e,t){var r=t("aae3"),a=t("be13");n.exports=function(n,e,t){if(r(e))throw TypeError("String#"+t+" doesn't accept regex!");return String(a(n))}},d3f4:function(n,e){n.exports=function(n){return"object"==typeof n?null!==n:"function"==typeof n}},d53b:function(n,e){n.exports=function(n,e){return{value:e,done:!!n}}},d8e8:function(n,e){n.exports=function(n){if("function"!=typeof n)throw TypeError(n+" is not a function!");return n}},daf8:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 17 32"}},[t("path",{attrs:{d:"M14.08 4.8q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112t-2.88-2.112V6.848q0-2.048 2.88-2.048zm-11.2 0q2.88 0 2.88 2.048v18.24q0 2.112-2.88 2.112T0 25.088V6.848Q0 4.8 2.88 4.8z"}})])}}},dcbc:function(n,e,t){var r=t("2aba");n.exports=function(n,e,t){for(var a in e)r(n,a,e[a],t);return n}},e11e:function(n,e){n.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},e853:function(n,e,t){var r=t("d3f4"),a=t("1169"),o=t("2b4c")("species");n.exports=function(n){var e;return a(n)&&("function"!=typeof(e=n.constructor)||e!==Array&&!a(e.prototype)||(e=void 0),r(e)&&null===(e=e[o])&&(e=void 0)),void 0===e?Array:e}},ebd6:function(n,e,t){var r=t("cb7c"),a=t("d8e8"),o=t("2b4c")("species");n.exports=function(n,e){var t,i=r(n).constructor;return void 0===i||null==(t=r(i)[o])?e:a(t)}},f559:function(n,e,t){"use strict";var r=t("5ca1"),a=t("9def"),o=t("d2c8"),i="".startsWith;r(r.P+r.F*t("5147")("startsWith"),"String",{startsWith:function(n){var e=o(this,n,"startsWith"),t=a(Math.min(arguments.length>1?arguments[1]:void 0,e.length)),r=String(n);return i?i.call(e,r,t):e.slice(t,t+r.length)===r}})},f576:function(n,e,t){"use strict";var r=t("5ca1"),a=t("2e08"),o=t("a25f");r(r.P+r.F*/Version\/10\.\d+(\.\d+)? Safari\//.test(o),"String",{padStart:function(n){return a(this,n,arguments.length>1?arguments[1]:void 0,!0)}})},f605:function(n,e){n.exports=function(n,e,t,r){if(!(n instanceof e)||void 0!==r&&r in n)throw TypeError(t+": incorrect invocation!");return n}},f751:function(n,e,t){var r=t("5ca1");r(r.S+r.F,"Object",{assign:t("7333")})},f866:function(n,e,t){"use strict";t.r(e),e.default={functional:!0,render:function(n,e){var t=e._c;return t("svg",{class:[e.data.class,e.data.staticClass],style:[e.data.style,e.data.staticStyle],attrs:{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 29 32"}},[t("path",{attrs:{d:"M9.333 9.333h13.333v4L27.999 8l-5.333-5.333v4h-16v8h2.667V9.334zm13.334 13.334H9.334v-4L4.001 24l5.333 5.333v-4h16v-8h-2.667v5.333z"}})])}}},fab2:function(n,e,t){var r=t("7726").document;n.exports=r&&r.documentElement},fb15:function(n,e,t){"use strict";var r;(t.r(e),"undefined"!=typeof window)&&((r=window.document.currentScript)&&(r=r.src.match(/(.+\/)[^/]+\.js(\?.*)?$/))&&(t.p=r[1]));t("f751");function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),r.forEach((function(e){a(n,e,t[e])}))}return n}t("c5f6");function i(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},o=Object.keys(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(r=0;r<o.length;r++)t=o[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}function s(n){return function(n){if(Array.isArray(n)){for(var e=0,t=new Array(n.length);e<n.length;e++)t[e]=n[e];return t}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}t("ac6a"),t("551c"),t("6762"),t("2fdb"),t("7f7f"),t("7514"),t("6b54");function l(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=[],r=!0,a=!1,o=void 0;try{for(var i,s=n[Symbol.iterator]();!(r=(i=s.next()).done)&&(t.push(i.value),!e||t.length!==e);r=!0);}catch(n){a=!0,o=n}finally{try{r||null==s.return||s.return()}finally{if(a)throw o}}return t}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}t("20d6"),t("96cf");function c(n,e,t,r,a,o,i){try{var s=n[o](i),l=s.value}catch(n){return void t(n)}s.done?e(l):Promise.resolve(l).then(r,a)}function p(n){return function(){var e=this,t=arguments;return new Promise((function(r,a){var o=n.apply(e,t);function i(n){c(o,r,a,i,s,"next",n)}function s(n){c(o,r,a,i,s,"throw",n)}i(void 0)}))}}t("d263");function u(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}function d(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function m(n,e,t){return e&&d(n.prototype,e),t&&d(n,t),n}function f(n){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function g(n){return(g="function"==typeof Symbol&&"symbol"===f(Symbol.iterator)?function(n){return f(n)}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":f(n)})(n)}function h(n,e){return!e||"object"!==g(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function v(n){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function y(n,e){return(y=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}function b(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&y(n,e)}var x=t("48d3"),w=t("65d9"),k=t.n(w),S=t("8bbf"),E=t.n(S);function _(n){return Object(w.createDecorator)((function(e,t){void 0===e.inject&&(e.inject={}),Array.isArray(e.inject)||(e.inject[t]=n||t)}))}function C(n){return Object(w.createDecorator)((function(e,t){var r=e.provide;if("function"!=typeof r||!r.managed){var a=e.provide;(r=e.provide=function(){var n=Object.create(("function"==typeof a?a.call(this):a)||null);for(var e in r.managed)n[r.managed[e]]=this[e];return n}).managed={}}r.managed[t]=n||t}))}function T(n){return void 0===n&&(n={}),Object(w.createDecorator)((function(e,t){(e.props||(e.props={}))[t]=n}))}function j(n,e){void 0===e&&(e={});var t=e.deep,r=void 0!==t&&t,a=e.immediate,o=void 0!==a&&a;return Object(w.createDecorator)((function(e,t){"object"!=typeof e.watch&&(e.watch=Object.create(null)),e.watch[n]={handler:t,deep:r,immediate:o}}))}var A=t("4d26"),M=t.n(A);t("cadf"),t("456d");function I(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3e3;return new Promise((function(t,r){var a=(new Date).getTime(),o=setInterval((function(){n()?(t(),clearInterval(o)):e>0&&(new Date).getTime()-a>e&&(r(),clearInterval(o))}),100)}))}var O,P=["abort","canplay","canplaythrough","durationchange","emptied","ended","error","loadeddata","loadedmetadata","loadstart","pause","play","playing","progress","ratechange","readystatechange","seeked","seeking","stalled","suspend","timeupdate","volumechange","waiting"],R=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},B=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)};!function(n){n[n.HAVE_NOTHING=0]="HAVE_NOTHING",n[n.HAVE_METADATA=1]="HAVE_METADATA",n[n.HAVE_CURRENT_DATA=2]="HAVE_CURRENT_DATA",n[n.HAVE_FUTURE_DATA=3]="HAVE_FUTURE_DATA",n[n.HAVE_ENOUGH_DATA=4]="HAVE_ENOUGH_DATA"}(O||(O={}));var q=function(n){function e(){var n;return u(this,e),(n=h(this,v(e).call(this))).audio=new Audio,n.audioTracks=n.audio.audioTracks,n.autoplay=n.audio.autoplay,n.buffered=n.audio.buffered,n.controls=n.audio.controls,n.crossOrigin=n.audio.crossOrigin,n.currentSrc=n.audio.currentSrc,n.currentTime=n.audio.currentTime,n.defaultMuted=n.audio.defaultMuted,n.defaultPlaybackRate=n.audio.defaultPlaybackRate,n.duration=n.audio.duration,n.ended=n.audio.ended,n.error=n.audio.error,n.loop=n.audio.loop,n.mediaKeys=n.audio.mediaKeys,n.muted=n.audio.muted,n.networkState=n.audio.networkState,n.paused=n.audio.paused,n.playbackRate=n.audio.playbackRate,n.played=n.audio.played,n.preload=n.audio.preload,n.readyState=n.audio.readyState,n.seekable=n.audio.seekable,n.seeking=n.audio.seeking,n.src=n.audio.src,n.textTracks=n.audio.textTracks,n.volume=n.audio.volume,P.forEach((function(e){n.audio.addEventListener(e,(function(e){n.sync()}))})),n}return b(e,n),m(e,[{key:"sync",value:function(){var n=this;Object.keys(this.$data).forEach((function(e){"audio"!==e&&(n[e]=n.audio[e])}))}},{key:"loaded",value:function(){var n=this;return I((function(){return n.readyState>=O.HAVE_FUTURE_DATA}),0)}},{key:"srcLoaded",value:function(){var n=this;return I((function(){return n.src}),0)}},{key:"render",value:function(){return null}}]),e}(E.a),z=q=R([k.a,B("design:paramtypes",[])],q),L=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},D=function(n){function e(){var n;return u(this,e),(n=h(this,v(e).apply(this,arguments))).key="aplayer-setting",n.store=n.get(n.key),n}return b(e,n),m(e,[{key:"get",value:function(n){return JSON.parse(localStorage.getItem(n)||"[]")}},{key:"set",value:function(n){this.store=n,localStorage.setItem(this.key,JSON.stringify(n))}},{key:"render",value:function(){return null}}]),e}(E.a),N=D=L([k.a],D),F=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},V=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"isMobile",get:function(){var n=this.$ssrContext?this.$ssrContext.userAgent:window.navigator.userAgent;return/mobile/i.test(n)}}]),e}(E.a),$=V=F([k.a],V),U=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},H=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},J=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"handleClick",value:function(n){this.$emit("click",n)}},{key:"render",value:function(){var n=arguments[0];return n("div",{class:"aplayer-pic",style:this.style,on:{click:this.handleClick}},[this.$slots.default])}},{key:"style",get:function(){var n=this.aplayer,e=n.options,t=n.currentTheme,r=n.currentMusic.cover||e.defaultCover;return{backgroundImage:r&&'url("'.concat(r,'")'),backgroundColor:t}}}]),e}(x.Component);U([_(),H("design:type",Object)],J.prototype,"aplayer",void 0);var W=J=U([k.a],J),G=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},Q=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},K=function(n){return t("52f0")("./".concat(n,".svg")).default},Y=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"render",value:function(){var n=arguments[0],e=K(this.type);return n(e)}}]),e}(x.Component);G([T({type:String,required:!0}),Q("design:type",String)],Y.prototype,"type",void 0);var Z=Y=G([k.a],Y);t("55dd"),t("28a5"),t("a481"),t("4917");var X=function(){function n(){u(this,n),this.xhr=new XMLHttpRequest}return m(n,[{key:"download",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new Promise((function(r,a){e.xhr.open("get",n),e.xhr.responseType=t,e.xhr.onload=function(){var n=e.xhr.status;(n>=200&&n<300||304===n)&&r(e.xhr.response)},e.xhr.onabort=a,e.xhr.onerror=a,e.xhr.ontimeout=a,e.xhr.send()}))}}]),n}(),nn=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},en=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},tn=function(n){function e(){var n;return u(this,e),(n=h(this,v(e).apply(this,arguments))).lrc="",n.xhr=new X,n.isLoading=!1,n}var t;return b(e,n),m(e,[{key:"getLyricFromCurrentMusic",value:function(){var n=this;return new Promise((function(e,t){var r=n.aplayer,a=r.lrcType,o=r.currentMusic;switch(a){case 0:e("");break;case 1:e(o.lrc);break;case 3:e(o.lrc?n.xhr.download(o.lrc):"");break;default:t(new Error("Illegal lrcType: ".concat(a)))}}))}},{key:"parseLRC",value:function(n){var e=/\[(\d+):(\d+)[.|:](\d+)\](.+)/,t=/\[(\d+):(\d+)[.|:](\d+)\]/g,r=/\[(\d+):(\d+)]()(.+)/,a=/\[(\d+):(\d+)]/g,o=this.lrc.match(/\[offset:\s*(-?\d+)\]/),i=o?Number(o[1]):0,s=[];return n.replace(/\\n/g,"\n").split("\n").forEach((function(n){return function n(o){var l=o.match(e)||o.match(r);if(l&&5===l.length){var c=60*(Number(l[1])||0)*1e3+1e3*(Number(l[2])||0)+(Number(l[3])||0)+i,p=l[4].replace(t,"").replace(a,"");p&&(s.push({time:c,text:p}),n(l[4]))}}(n)})),s.length>0&&s.sort((function(n,e){return n.time-e.time})),s}},{key:"handleChange",value:(t=p(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,this.isLoading=!0,this.lrc="",n.next=5,this.getLyricFromCurrentMusic();case 5:this.lrc=n.sent;case 6:return n.prev=6,this.isLoading=!1,n.finish(6);case 9:case"end":return n.stop()}}),n,this,[[0,,6,9]])}))),function(){return t.apply(this,arguments)})},{key:"render",value:function(){var n=arguments[0],e=this.visible,t=this.style,r=this.parsed,a=this.current,o=this.noLyric;return n("div",{class:M()({"aplayer-lrc":!0,"aplayer-lrc-hide":!e})},[n("div",{class:"aplayer-lrc-contents",style:t},[r.length>0?r.map((function(e,t){return n("p",{key:e.time,class:M()({"aplayer-lrc-current":a.time===e.time})},[e.text])})):n("p",{class:"aplayer-lrc-current"},[o])])])}},{key:"noLyric",get:function(){return this.aplayer.currentMusic.id?this.isLoading?"(*ゝω・) 少女祈祷中..":this.lrc?"(・∀・*) 抱歉，该歌词格式不支持":"(,,•́ . •̀,,) 抱歉，当前歌曲暂无歌词":"(ಗ ‸ ಗ ) 未加载音频"}},{key:"parsed",get:function(){return this.parseLRC(this.lrc)}},{key:"current",get:function(){var n=this.aplayer,e=n.media,t=n.currentPlayed,r=this.parsed.filter((function(n){return n.time<t*e.duration*1e3}));return r&&r.length>0?r[r.length-1]:this.parsed[0]}},{key:"transitionDuration",get:function(){return this.parsed.length>1?500:0}},{key:"translateY",get:function(){var n=this.current,e=this.parsed;if(e.length<=0)return 0;var t=e.indexOf(n);return-1*(t===e.length-1?16*(t-1):16*t)}},{key:"style",get:function(){return{transitionDuration:"".concat(this.transitionDuration,"ms"),transform:"translate3d(0, ".concat(this.translateY,"px, 0)")}}}]),e}(x.Component);nn([T({type:Boolean,required:!1,default:!0}),en("design:type",Boolean)],tn.prototype,"visible",void 0),nn([_(),en("design:type",Object)],tn.prototype,"aplayer",void 0),nn([j("aplayer.lrcType",{immediate:!0}),j("aplayer.currentMusic.lrc",{immediate:!0}),en("design:type",Function),en("design:paramtypes",[]),en("design:returntype",Promise)],tn.prototype,"handleChange",null);var rn=tn=nn([k.a],tn),an=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},on=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},sn=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"render",value:function(){var n=arguments[0],e=this.music,t=this.aplayer.fixed;return n("div",{class:"aplayer-info"},[n("div",{class:"aplayer-music"},[n("span",{class:"aplayer-title"},[e.name]),n("span",{class:"aplayer-author"},[e.artist])]),t?null:n(rn),this.$slots.default])}},{key:"music",get:function(){var n=this.aplayer.currentMusic;return{name:n.name,artist:n.artist?" - ".concat(n.artist):""}}}]),e}(x.Component);an([_(),on("design:type",Object)],sn.prototype,"aplayer",void 0);var ln=sn=an([k.a],sn),cn=(t("f559"),t("f576"),function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i}),pn=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},un=function(n){function e(){var n;return u(this,e),(n=h(this,v(e).apply(this,arguments))).isDragMove=!1,n}return b(e,n),m(e,[{key:"thumbMove",value:function(n){this.isDragMove=!0,this.$emit("panMove",n)}},{key:"thumbUp",value:function(n){document.removeEventListener(this.dragMove,this.thumbMove),document.removeEventListener(this.dragEnd,this.thumbUp),this.isDragMove=!1,this.$emit("panEnd",n)}},{key:"mounted",value:function(){var n=this;this.$el.addEventListener(this.dragStart,(function(e){n.$emit("panStart",e),document.addEventListener(n.dragMove,n.thumbMove),document.addEventListener(n.dragEnd,n.thumbUp)}))}},{key:"render",value:function(){var n=arguments[0];return n("div",{class:this.classNames,style:{touchAction:"none",userSelect:"none",webkitUserDrag:"none",webkitTapHighlightColor:"rgba(0, 0, 0, 0)"}},[this.$slots.default])}},{key:"classNames",get:function(){return a({},this.panMoveClass,this.isDragMove)}},{key:"dragStart",get:function(){return this.isMobile?"touchstart":"mousedown"}},{key:"dragMove",get:function(){return this.isMobile?"touchmove":"mousemove"}},{key:"dragEnd",get:function(){return this.isMobile?"touchend":"mouseup"}}]),e}(x.Component);cn([T({type:String,required:!1}),pn("design:type",String)],un.prototype,"panMoveClass",void 0);var dn=un=cn([k()({mixins:[$]})],un),mn=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},fn=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},gn=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"handleClick",value:function(){this.$emit("click")}},{key:"render",value:function(){var n=arguments[0];return n("button",{attrs:{type:"button"},class:"aplayer-icon aplayer-icon-".concat(this.type),on:{click:this.handleClick}},[n(Z,{attrs:{type:this.icon}})])}}]),e}(x.Component);mn([T({type:String,required:!0}),fn("design:type",String)],gn.prototype,"type",void 0),mn([T({type:String,required:!0}),fn("design:type",String)],gn.prototype,"icon",void 0);var hn=gn=mn([k.a],gn),vn=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},yn=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},bn=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"handleChange",value:function(n){var e=this.$refs.progressBar,t=e.getBoundingClientRect().left,r=((n.type.startsWith("touch")?n.changedTouches[0].clientX:n.clientX)-t)/e.offsetWidth;r=Math.min(r,1),r=Math.max(r,0),this.handleChangeProgress(n,r)}},{key:"render",value:function(){var n=arguments[0],e=this.aplayer,t=e.currentTheme,r=e.currentLoaded,a=e.currentPlayed;return n(dn,{class:"aplayer-bar-wrap",on:{panMove:this.handleChange,panEnd:this.handleChange}},[n("div",{ref:"progressBar",class:"aplayer-bar"},[n("div",{class:"aplayer-loaded",style:{width:"".concat(100*r,"%")}}),n("div",{class:"aplayer-played",style:{width:"".concat(100*a,"%"),backgroundColor:t}},[n("span",{class:"aplayer-thumb",style:{backgroundColor:t}},[n("span",{class:"aplayer-loading-icon"},[n(Z,{attrs:{type:"loading"}})])])])])])}}]),e}(x.Component);vn([_(),yn("design:type",Object)],bn.prototype,"aplayer",void 0),vn([_(),yn("design:type",Function)],bn.prototype,"handleChangeProgress",void 0);var xn=bn=vn([k.a],bn),wn=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},kn=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},Sn=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"timeSecondsFormat",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=Math.floor(n/60)||0,t=Math.floor(n%60)||0;return"".concat(e.toString().padStart(2,"0"),":").concat(t.toString().padStart(2,"0"))}},{key:"handleToggleVolume",value:function(){var n=this.aplayer,e=n.currentVolume,t=n.currentSettings;this.handleChangeVolume(e>0?0:t.volume)}},{key:"handleClickVolumeBar",value:function(n){this.handlePanMove(n)}},{key:"handlePanMove",value:function(n){var e=this.$refs.volumeBar,t=e.getBoundingClientRect().bottom;if(!(t<=0)){var r=n.type.startsWith("touch")?n.changedTouches[0].clientY:n.clientY,a=Math.round(t-r)/e.offsetHeight;a=Math.min(a,1),a=Math.max(a,0),this.handleChangeVolume(a)}}},{key:"render",value:function(){var n=arguments[0],e=this.ptime,t=this.dtime,r=this.volumeIcon,a=this.aplayer,o=a.lrcType,i=a.currentTheme,s=a.currentVolume,l=a.currentOrder,c=a.currentLoop;return n("div",{class:"aplayer-controller"},[n(xn),n("div",{class:"aplayer-time"},[n("span",{class:"aplayer-time-inner"},[n("span",{class:"aplayer-ptime"},[e])," /"," ",n("span",{class:"aplayer-dtime"},[t])," "]),n("span",{class:"aplayer-icon aplayer-icon-back",on:{click:this.handleSkipBack}},[n(Z,{attrs:{type:"skip"}})]),n("span",{class:"aplayer-icon aplayer-icon-play",on:{click:this.handleTogglePlay}},[n(Z,{attrs:{type:this.playIcon}})]),n("span",{class:"aplayer-icon aplayer-icon-forward",on:{click:this.handleSkipForward}},[n(Z,{attrs:{type:"skip"}})]),n("div",{class:"aplayer-volume-wrap"},[n(hn,{attrs:{type:"volume-".concat(r),icon:"volume-".concat(r)},on:{click:this.handleToggleVolume}}),n(dn,{class:"aplayer-volume-bar-wrap",attrs:{panMoveClass:"aplayer-volume-bar-wrap-active"},on:{panMove:this.handlePanMove}},[n("div",{ref:"volumeBar",class:"aplayer-volume-bar",on:{click:this.handleClickVolumeBar}},[n("div",{class:"aplayer-volume",style:{height:"".concat(100*s,"%"),backgroundColor:i}})])])])," ",n(hn,{attrs:{type:"order",icon:"order-".concat(l)},on:{click:this.handleToggleOrderMode}})," ",n(hn,{attrs:{type:"loop",icon:"loop-".concat(c)},on:{click:this.handleToggleLoopMode}})," ",n(hn,{attrs:{type:"menu",icon:"menu"},on:{click:this.handleTogglePlaylist}}),0!==o?n(hn,{attrs:{type:"lrc",icon:"lrc"},on:{click:this.handleToggleLyric}}):null])])}},{key:"playIcon",get:function(){return this.aplayer.media.paused?"play":"pause"}},{key:"volumeIcon",get:function(){var n=this.aplayer.currentVolume;return n<=0?"off":n>=.95?"up":"down"}},{key:"ptime",get:function(){var n=this.aplayer,e=n.media,t=n.currentPlayed;return this.timeSecondsFormat(t*e.duration)}},{key:"dtime",get:function(){return this.timeSecondsFormat(this.aplayer.media.duration)}}]),e}(x.Component);wn([_(),kn("design:type",Object)],Sn.prototype,"aplayer",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleSkipBack",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleSkipForward",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleTogglePlay",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleToggleOrderMode",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleToggleLoopMode",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleTogglePlaylist",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleToggleLyric",void 0),wn([_(),kn("design:type",Function)],Sn.prototype,"handleChangeVolume",void 0);var En=Sn=wn([k.a],Sn),_n=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},Cn=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},Tn=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}return b(e,n),m(e,[{key:"handleTogglePlay",value:function(){this.$emit("togglePlay")}},{key:"handleSkipBack",value:function(){this.$emit("skipBack")}},{key:"handleSkipForward",value:function(){this.$emit("skipForward")}},{key:"handleToggleOrderMode",value:function(){this.$emit("toggleOrderMode")}},{key:"handleToggleLoopMode",value:function(){this.$emit("toggleLoopMode")}},{key:"handleTogglePlaylist",value:function(){this.$emit("togglePlaylist")}},{key:"handleToggleLyric",value:function(){this.$emit("toggleLyric")}},{key:"handleChangeVolume",value:function(n){this.$emit("changeVolume",n)}},{key:"handleChangeProgress",value:function(n,e){this.$emit("changeProgress",n,e)}},{key:"handleMiniSwitcher",value:function(){this.$emit("miniSwitcher")}},{key:"render",value:function(){var n=arguments[0],e=this.playIcon,t=this.notice;return n("div",{class:"aplayer-body"},[n(W,{on:{click:this.handleTogglePlay}},[n("div",{class:"aplayer-button aplayer-".concat(e)},[n(Z,{attrs:{type:e}})])]),n(ln,[n(En,{on:{skipBack:this.handleSkipBack,skipForward:this.handleSkipForward,togglePlay:this.handleTogglePlay,toggleOrderMode:this.handleToggleOrderMode,toggleLoopMode:this.handleToggleLoopMode,togglePlaylist:this.handleTogglePlaylist,toggleLyric:this.handleToggleLyric,changeVolume:this.handleChangeVolume,changeProgress:this.handleChangeProgress}})]),n("div",{class:"aplayer-notice",style:{opacity:t.opacity}},[t.text]),n("div",{class:"aplayer-miniswitcher",on:{click:this.handleMiniSwitcher}},[n(hn,{attrs:{type:"miniswitcher",icon:"right"}})])])}},{key:"playIcon",get:function(){return this.aplayer.media.paused?"play":"pause"}}]),e}(x.Component);_n([T({type:Object,required:!0}),Cn("design:type",Object)],Tn.prototype,"notice",void 0),_n([_(),Cn("design:type",Object)],Tn.prototype,"aplayer",void 0),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[]),Cn("design:returntype",void 0)],Tn.prototype,"handleTogglePlay",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[]),Cn("design:returntype",void 0)],Tn.prototype,"handleSkipBack",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[]),Cn("design:returntype",void 0)],Tn.prototype,"handleSkipForward",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[]),Cn("design:returntype",void 0)],Tn.prototype,"handleToggleOrderMode",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[]),Cn("design:returntype",void 0)],Tn.prototype,"handleToggleLoopMode",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[]),Cn("design:returntype",void 0)],Tn.prototype,"handleTogglePlaylist",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[]),Cn("design:returntype",void 0)],Tn.prototype,"handleToggleLyric",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[Number]),Cn("design:returntype",void 0)],Tn.prototype,"handleChangeVolume",null),_n([C(),Cn("design:type",Function),Cn("design:paramtypes",[Object,Number]),Cn("design:returntype",void 0)],Tn.prototype,"handleChangeProgress",null);var jn,An,Mn=Tn=_n([k.a],Tn),In=function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i},On=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},Pn=function(n){function e(){return u(this,e),h(this,v(e).apply(this,arguments))}var t;return b(e,n),m(e,[{key:"handleChangeScrollTop",value:(t=p(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,this.$nextTick();case 2:this.visible&&(this.$refs.list.scrollTop=this.scrollTop);case 3:case"end":return n.stop()}}),n,this)}))),function(){return t.apply(this,arguments)})},{key:"render",value:function(){var n=this,e=arguments[0],t=this.listHeight,r=this.dataSource,a=this.currentMusic,o=this.aplayer.currentTheme;return e("ol",{ref:"list",class:"aplayer-list",style:{height:"".concat(t,"px")}},[r.map((function(t,r){return e("li",{key:t.id,class:M()({"aplayer-list-light":t.id===a.id}),on:{click:function(){return n.$emit("change",t,r)}}},[e("span",{class:"aplayer-list-cur",style:{backgroundColor:o}}),e("span",{class:"aplayer-list-index"},[r+1])," ",e("span",{class:"aplayer-list-title"},[t.name]),e("span",{class:"aplayer-list-author"},[t.artist])])}))])}},{key:"listHeight",get:function(){var n=this.visible,e=this.dataSource;return n?Math.min(33*e.length,Number(this.aplayer.listMaxHeight)):0}}]),e}(x.Component);In([T({type:Boolean,required:!1,default:!0}),On("design:type",Boolean)],Pn.prototype,"visible",void 0),In([T({type:Object,required:!0}),On("design:type","function"==typeof(jn="undefined"!=typeof APlayer&&APlayer.Audio)?jn:Object)],Pn.prototype,"currentMusic",void 0),In([T({type:Array,required:!0}),On("design:type","function"==typeof(An="undefined"!=typeof Array&&Array)?An:Object)],Pn.prototype,"dataSource",void 0),In([T({type:Number,required:!0}),On("design:type",Number)],Pn.prototype,"scrollTop",void 0),In([_(),On("design:type",Object)],Pn.prototype,"aplayer",void 0),In([j("scrollTop",{immediate:!0}),j("dataSource",{immediate:!0,deep:!0}),j("visible"),On("design:type",Function),On("design:paramtypes",[]),On("design:returntype",Promise)],Pn.prototype,"handleChangeScrollTop",null);var Rn,Bn,qn,zn,Ln,Dn,Nn=Pn=In([k.a],Pn),Fn=(t("610a"),function(n,e,t,r){var a,o=arguments.length,i=o<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,t,r);else for(var s=n.length-1;s>=0;s--)(a=n[s])&&(i=(o<3?a(i):o>3?a(e,t,i):a(e,t))||i);return o>3&&i&&Object.defineProperty(e,t,i),i}),Vn=function(n,e){if("object"===("undefined"==typeof Reflect?"undefined":g(Reflect))&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)},$n=[],Un=new N,Hn=null;"undefined"!=typeof BroadcastChannel&&(Hn=new BroadcastChannel("aplayer"));var Jn=function(n){function e(){var n;return u(this,e),(n=h(this,v(e).apply(this,arguments))).isDraggingProgressBar=!1,n.isAwaitChangeProgressBar=!1,n.isMini=null!==n.mini?n.mini:n.fixed,n.isArrow=!1,n.canPlay=!n.isMobile&&n.autoplay,n.listVisible=!n.listFolded,n.lyricVisible=!0,n.img=new Image,n.xhr=new X,n.media=new z,n.player=n.media.audio,n.store=Un,n.currentMusic={id:NaN,name:"未加载音频",artist:"(ಗ ‸ ಗ )",url:""},n.currentPlayed=0,n.currentVolume=n.volume,n.currentLoop=n.loop,n.currentOrder=n.order,n.currentTheme=n.currentMusic.theme||n.theme,n.notice={text:"",time:2e3,opacity:0},n}var t,r,a,c,d;return b(e,n),m(e,[{key:"handleChangePlayList",value:(d=p(regeneratorRuntime.mark((function n(e,t){var r,a,o,i,s,c,p,u;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(t&&(r=e.length,a=t.length,r!==a&&(r<=0?this.$emit("listClear"):r>a?this.$emit("listAdd"):(this.currentOrderIndex<0&&(o=this.currentMusic,i=o.id,s=o.url,c=t.findIndex((function(n){return n.id===i||n.url===s})),Object.assign(this.currentMusic,t[c-1])),this.canPlay=!this.player.paused,this.$emit("listRemove")))),!(this.orderList.length>0)){n.next=6;break}return this.currentMusic.id?(this.canPlay=!this.player.paused,u=this.orderList[this.currentOrderIndex]||this.orderList[0],Object.assign(this.currentMusic,u)):(p=l(this.currentList,1),this.currentMusic=p[0]),n.next=5,this.$nextTick();case 5:this.canPlay=!0;case 6:case"end":return n.stop()}}),n,this)}))),function(n,e){return d.apply(this,arguments)})},{key:"handleChangeCurrentMusic",value:(c=p(regeneratorRuntime.mark((function n(e,t){var r,a,o=this;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(e.theme?this.currentTheme=e.theme:(r=e.cover||this.options.defaultCover)&&setTimeout(p(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,o.getThemeColorFromCover(r);case 3:o.currentTheme=n.sent,n.next=9;break;case 6:n.prev=6,n.t0=n.catch(0),o.currentTheme=e.theme||o.theme;case 9:case"end":return n.stop()}}),n,this,[[0,6]])})))),!e.url){n.next=15;break}if((void 0!==t&&t.url)===e.url&&this.player.src===e.url){n.next=14;break}return this.currentPlayed=0,t&&t.id&&(this.handleChangeSettings(),this.$emit("listSwitch",e)),n.next=7,this.getAudioUrl(e);case 7:(a=n.sent)&&(this.player.src=a),this.player.playbackRate=e.speed||1,this.player.preload=this.preload,this.player.volume=this.currentVolume,this.player.currentTime=0,this.player.onerror=function(n){o.showNotice(n.toString())};case 14:this.canPlay&&this.play();case 15:case"end":return n.stop()}}),n,this)}))),function(n,e){return c.apply(this,arguments)})},{key:"handleChangeVolume",value:function(n){this.currentVolume=n}},{key:"handleChangeCurrentVolume",value:function(){this.player.volume=this.currentVolume,this.$emit("update:volume",this.currentVolume)}},{key:"handleChangeCurrentTime",value:function(){this.isDraggingProgressBar||this.isAwaitChangeProgressBar||(this.currentPlayed=this.media.currentTime/this.media.duration||0)}},{key:"handleChangeSettings",value:function(){var n={currentTime:this.media.currentTime,duration:this.media.duration,paused:this.media.paused,mini:this.isMini,lrc:this.lyricVisible,list:this.listVisible,volume:this.currentVolume,loop:this.currentLoop,order:this.currentOrder,music:this.currentMusic};n.volume<=0&&(n.volume=this.currentSettings.volume),this.saveSettings(n)}},{key:"handleChangeEnded",value:function(){if(this.media.ended)switch(this.currentPlayed=0,this.currentLoop){default:case"all":this.handleSkipForward();break;case"one":this.play();break;case"none":if(this.currentIndex===this.currentList.length-1){var n=l(this.currentList,1);this.currentMusic=n[0],this.pause(),this.canPlay=!1}else this.handleSkipForward()}}},{key:"handleChangeMini",value:function(){this.isMini=this.mini}},{key:"handleChangeCurrentMini",value:(a=p(regeneratorRuntime.mark((function n(e,t){var r;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,this.$nextTick();case 2:r=this.$refs.container,this.isArrow=r&&r.offsetWidth<=300,void 0!==t&&(this.$emit("update:mini",this.isMini),this.handleChangeSettings());case 5:case"end":return n.stop()}}),n,this)}))),function(n,e){return a.apply(this,arguments)})},{key:"handleChangeLoop",value:function(){this.currentLoop=this.loop}},{key:"handleChangeCurrentLoop",value:function(){this.$emit("update:loop",this.currentLoop),this.handleChangeSettings()}},{key:"handleChangeOrder",value:function(){this.currentOrder=this.order}},{key:"handleChangeCurrentOrder",value:function(){this.$emit("update:order",this.currentOrder),this.handleChangeSettings()}},{key:"handleChangeListVisible",value:function(){this.$emit(this.listVisible?"listShow":"listHide"),this.$emit("update:listFolded",this.listVisible),this.handleChangeSettings()}},{key:"handleChangeLyricVisible",value:function(){this.$emit(this.lyricVisible?"lrcShow":"lrcHide"),this.handleChangeSettings()}},{key:"play",value:(r=p(regeneratorRuntime.mark((function n(){return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,this.mutex&&this.pauseOtherInstances(),n.next=4,this.player.play();case 4:n.next=10;break;case 6:n.prev=6,n.t0=n.catch(0),this.showNotice(n.t0.message),this.player.pause();case 10:case"end":return n.stop()}}),n,this,[[0,6]])}))),function(){return r.apply(this,arguments)})},{key:"pause",value:function(){this.player.pause()}},{key:"toggle",value:function(){this.media.paused?this.play():this.pause()}},{key:"seeking",value:(t=p(regeneratorRuntime.mark((function n(e){var t,r,a=arguments;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(t=!(a.length>1&&void 0!==a[1])||a[1],n.prev=1,this.isAwaitChangeProgressBar=!0,"none"!==this.preload){n.next=11;break}if(this.player.src){n.next=7;break}return n.next=7,this.media.srcLoaded();case 7:return r=this.player.paused,n.next=10,this.play();case 10:t&&r&&this.pause();case 11:return t&&this.pause(),n.next=14,this.media.loaded();case 14:this.player.currentTime=e*this.media.duration,t||(this.play(),Hn&&this.mutex&&Hn.postMessage("mutex")),n.next=21;break;case 18:n.prev=18,n.t0=n.catch(1),this.showNotice(n.t0.message);case 21:return n.prev=21,this.isAwaitChangeProgressBar=!1,n.finish(21);case 24:case"end":return n.stop()}}),n,this,[[1,18,21,24]])}))),function(n){return t.apply(this,arguments)})},{key:"seek",value:function(n){this.seeking(n/this.media.duration,this.media.paused)}},{key:"switch",value:function(n){switch(g(n)){case"number":this.currentMusic=this.orderList[Math.min(Math.max(0,n),this.orderList.length-1)];break;default:var e=this.orderList.find((function(e){return"string"==typeof e.name&&e.name.includes(n)}));e&&(this.currentMusic=e)}}},{key:"skipBack",value:function(){var n=this.getPlayIndexByMode("skipBack");this.currentMusic=o({},this.currentList[n])}},{key:"skipForward",value:function(){var n=this.getPlayIndexByMode("skipForward");this.currentMusic=o({},this.currentList[n])}},{key:"showLrc",value:function(){this.lyricVisible=!0}},{key:"hideLrc",value:function(){this.lyricVisible=!1}},{key:"toggleLrc",value:function(){this.lyricVisible=!this.lyricVisible}},{key:"showList",value:function(){this.listVisible=!0}},{key:"hideList",value:function(){this.listVisible=!1}},{key:"toggleList",value:function(){this.listVisible=!this.listVisible}},{key:"showNotice",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2e3,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.8;return new Promise((function(a){e.isMini?(console.warn("aplayer notice:",n),a()):(e.notice={text:n,time:t,opacity:r},e.$emit("noticeShow"),t>0&&setTimeout((function(){e.notice.opacity=0,e.$emit("noticeHide"),a()}),t))}))}},{key:"getThemeColorFromCover",value:function(n){var e=this;return new Promise(function(){var t=p(regeneratorRuntime.mark((function t(r,a){var o,i;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,"undefined"==typeof ColorThief){t.next=12;break}return t.next=4,e.xhr.download(n,"blob");case 4:o=t.sent,(i=new FileReader).onload=function(){e.img.src=i.result,e.img.onload=function(){var n=l((new ColorThief).getColor(e.img),3),t=n[0],a=n[1],o=n[2],i="rgb(".concat(t,", ").concat(a,", ").concat(o,")");r(i||e.currentMusic.theme||e.theme)},e.img.onabort=a,e.img.onerror=a},i.onabort=a,i.onerror=a,i.readAsDataURL(o),t.next=13;break;case 12:r(e.currentMusic.theme||e.theme);case 13:t.next=18;break;case 15:t.prev=15,t.t0=t.catch(0),r(e.currentMusic.theme||e.theme);case 18:case"end":return t.stop()}}),t,this,[[0,15]])})));return function(n,e){return t.apply(this,arguments)}}())}},{key:"getAudioUrl",value:function(n){var e=this;return new Promise((function(t,r){var a=n.type;if(a&&e.customAudioType&&e.customAudioType[a])"function"==typeof e.customAudioType[a]?e.customAudioType[a](e.player,n,e):console.error("Illegal customType: ".concat(a)),t();else if(a&&"auto"!==a||(a=/m3u8(#|\?|$)/i.test(n.url)?"hls":"normal"),"hls"===a)try{if(Hls.isSupported()){var o=new Hls;o.loadSource(n.url),o.attachMedia(e.player),t()}else e.player.canPlayType("application/x-mpegURL")||e.player.canPlayType("application/vnd.apple.mpegURL")?t(n.url):r(new Error("HLS is not supported."))}catch(n){r(new Error("HLS is not supported."))}else t(n.url)}))}},{key:"getPlayIndexByMode",value:function(n){var e=this.currentList.length,t=this.currentIndex;return("skipBack"===n?e+(t-1):t+1)%e}},{key:"pauseOtherInstances",value:function(){var n=this;$n.filter((function(e){return e!==n})).forEach((function(n){return n.pause()}))}},{key:"saveSettings",value:function(n){var e=$n.indexOf(this);null===n&&delete $n[e],this.store.set(void 0!==this.settings[e]?this.settings.map((function(t,r){return r===e?n:t})):s(this.settings).concat([n]))}},{key:"handleSkipBack",value:function(){this.skipBack()}},{key:"handleSkipForward",value:function(){this.skipForward()}},{key:"handleTogglePlay",value:function(){this.toggle()}},{key:"handleToggleOrderMode",value:function(){this.currentOrder="list"===this.currentOrder?"random":"list"}},{key:"handleToggleLoopMode",value:function(){this.currentLoop="all"===this.currentLoop?"one":"one"===this.currentLoop?"none":"all"}},{key:"handleTogglePlaylist",value:function(){this.toggleList()}},{key:"handleToggleLyric",value:function(){this.toggleLrc()}},{key:"handleChangeProgress",value:function(n,e){this.currentPlayed=e,this.isDraggingProgressBar=n.type.includes("move"),["touchend","mouseup"].includes(n.type)&&this.seeking(e,this.media.paused)}},{key:"handleMiniSwitcher",value:function(){this.isMini=!this.isMini}},{key:"handleChangePlaylist",value:function(n,e){n.id===this.currentMusic.id?this.handleTogglePlay():this.currentMusic=this.orderList[e]}},{key:"beforeMount",value:function(){var n=this;this.store.key=this.storageName;var e=$n.findIndex((function(n){return!n}));if(e>-1?$n[e]=this:$n.push(this),this.currentSettings){var t=this.currentSettings,r=t.mini,a=t.lrc,o=t.list,i=t.volume,s=t.loop,l=t.order,c=t.music,p=t.currentTime,u=t.duration,d=t.paused;this.isMini=r,this.lyricVisible=a,this.listVisible=o,this.currentVolume=i,this.currentLoop=s,this.currentOrder=l,c&&(this.currentMusic=c,!this.isMobile&&u&&this.seeking(p/u,d))}Hn&&this.mutex&&Hn.addEventListener("message",(function(e){"mutex"===e.data&&n.pause()})),P.forEach((function(e){n.player.addEventListener(e,(function(t){return n.$emit(e,t)}))}))}},{key:"beforeDestroy",value:function(){this.pause(),this.saveSettings(null),this.$emit("destroy"),this.$el.remove()}},{key:"render",value:function(){var n=arguments[0],e=this.dataSource,t=this.fixed,r=this.lrcType,a=this.isMini,o=this.isMobile,i=this.isArrow,s=this.isLoading,l=this.notice,c=this.listVisible,p=this.listScrollTop,u=this.currentMusic,d=this.lyricVisible;return n("div",{ref:"container",class:M()({aplayer:!0,"aplayer-withlist":e.length>1,"aplayer-withlrc":!t&&0!==r&&d,"aplayer-narrow":a,"aplayer-fixed":t,"aplayer-mobile":o,"aplayer-arrow":i,"aplayer-loading":s})},[n(Mn,{attrs:{notice:l},on:{skipBack:this.handleSkipBack,skipForward:this.handleSkipForward,togglePlay:this.handleTogglePlay,toggleOrderMode:this.handleToggleOrderMode,toggleLoopMode:this.handleToggleLoopMode,togglePlaylist:this.handleTogglePlaylist,toggleLyric:this.handleToggleLyric,changeVolume:this.handleChangeVolume,changeProgress:this.handleChangeProgress,miniSwitcher:this.handleMiniSwitcher}}),n(Nn,{attrs:{visible:c,scrollTop:p,currentMusic:u,dataSource:e},on:{change:this.handleChangePlaylist}}),t&&0!==r?n(rn,{attrs:{visible:d}}):null])}},{key:"aplayer",get:function(){return this}},{key:"settings",get:function(){return this.store.store}},{key:"currentSettings",get:function(){return this.settings[$n.indexOf(this)]}},{key:"currentList",get:function(){return"list"===this.currentOrder?this.orderList:this.randomList}},{key:"dataSource",get:function(){return(Array.isArray(this.audio)?this.audio:[this.audio]).filter((function(n){return n})).map((function(n,e){return o({id:e+1},n)}))}},{key:"orderList",get:function(){var n=function(n,e){return"string"==typeof n?n:n.data&&n.data.attrs&&n.data.attrs["data-".concat(e)]};return this.dataSource.map((function(e){var t=e.name,r=e.artist;return o({},i(e,["name","artist"]),{name:n(t,"name"),artist:n(r,"artist")})}))}},{key:"randomList",get:function(){return function(n){for(var e=n.length-1;e>=0;e--){var t=Math.floor(Math.random()*(e+1)),r=n[t];n[t]=n[e],n[e]=r}return n}(s(this.orderList))}},{key:"isLoading",get:function(){var n=this.preload,e=this.currentPlayed,t=this.currentLoaded,r=this.media,a=r.src,o=r.paused,i=r.duration,s=!!a&&(e>t||!i);return"none"===n?!o&&s:s}},{key:"listScrollTop",get:function(){return 33*this.currentOrderIndex}},{key:"currentIndex",get:function(){return"list"===this.currentOrder?this.currentOrderIndex:this.currentRandomIndex}},{key:"currentOrderIndex",get:function(){var n=this.currentMusic,e=n.id,t=n.url;return this.orderList.findIndex((function(n){return n.id===e||n.url===t}))}},{key:"currentRandomIndex",get:function(){var n=this.currentMusic,e=n.id,t=n.url;return this.randomList.findIndex((function(n){return n.id===e||n.url===t}))}},{key:"currentLoaded",get:function(){if(this.media.readyState<O.HAVE_FUTURE_DATA)return 0;var n=this.media.buffered.length;return n>0?this.media.buffered.end(n-1)/this.media.duration:1}}]),e}(x.Component);Jn.version="2.0.0-beta.5",Fn([T({type:Boolean,required:!1,default:!1}),Vn("design:type",Boolean)],Jn.prototype,"fixed",void 0),Fn([T({type:Boolean,required:!1,default:null}),Vn("design:type",Boolean)],Jn.prototype,"mini",void 0),Fn([T({type:Boolean,required:!1,default:!1}),Vn("design:type",Boolean)],Jn.prototype,"autoplay",void 0),Fn([T({type:String,required:!1,default:"#b7daff"}),Vn("design:type",String)],Jn.prototype,"theme",void 0),Fn([T({type:String,required:!1,default:"all"}),Vn("design:type","function"==typeof(Rn=void 0!==Jn&&Jn.LoopMode)?Rn:Object)],Jn.prototype,"loop",void 0),Fn([T({type:String,required:!1,default:"list"}),Vn("design:type","function"==typeof(Bn=void 0!==Jn&&Jn.OrderMode)?Bn:Object)],Jn.prototype,"order",void 0),Fn([T({type:String,required:!1,default:"auto"}),Vn("design:type","function"==typeof(qn=void 0!==Jn&&Jn.Preload)?qn:Object)],Jn.prototype,"preload",void 0),Fn([T({type:Number,required:!1,default:.7}),Vn("design:type",Number)],Jn.prototype,"volume",void 0),Fn([T({type:[Object,Array],required:!0}),Vn("design:type",Object)],Jn.prototype,"audio",void 0),Fn([T({type:Object,required:!1}),Vn("design:type",Object)],Jn.prototype,"customAudioType",void 0),Fn([T({type:Boolean,required:!1,default:!0}),Vn("design:type",Boolean)],Jn.prototype,"mutex",void 0),Fn([T({type:Number,required:!1,default:0}),Vn("design:type","function"==typeof(zn=void 0!==Jn&&Jn.LrcType)?zn:Object)],Jn.prototype,"lrcType",void 0),Fn([T({type:Boolean,required:!1,default:!1}),Vn("design:type",Boolean)],Jn.prototype,"listFolded",void 0),Fn([T({type:Number,required:!1,default:250}),Vn("design:type",Number)],Jn.prototype,"listMaxHeight",void 0),Fn([T({type:String,required:!1,default:"aplayer-setting"}),Vn("design:type",String)],Jn.prototype,"storageName",void 0),Fn([C(),Vn("design:type",Object),Vn("design:paramtypes",[])],Jn.prototype,"aplayer",null),Fn([j("orderList",{immediate:!0,deep:!0}),Vn("design:type",Function),Vn("design:paramtypes",[Array,Array]),Vn("design:returntype",Promise)],Jn.prototype,"handleChangePlayList",null),Fn([j("currentMusic",{immediate:!0,deep:!0}),Vn("design:type",Function),Vn("design:paramtypes",["function"==typeof(Ln=void 0!==Jn&&Jn.Audio)?Ln:Object,"function"==typeof(Dn=void 0!==Jn&&Jn.Audio)?Dn:Object]),Vn("design:returntype",Promise)],Jn.prototype,"handleChangeCurrentMusic",null),Fn([j("volume"),Vn("design:type",Function),Vn("design:paramtypes",[Number]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeVolume",null),Fn([j("currentVolume"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeCurrentVolume",null),Fn([j("media.currentTime"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeCurrentTime",null),Fn([j("media.$data",{deep:!0}),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeSettings",null),Fn([j("media.ended"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeEnded",null),Fn([j("mini"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeMini",null),Fn([j("isMini",{immediate:!0}),Vn("design:type",Function),Vn("design:paramtypes",[Boolean,Boolean]),Vn("design:returntype",Promise)],Jn.prototype,"handleChangeCurrentMini",null),Fn([j("loop"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeLoop",null),Fn([j("currentLoop"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeCurrentLoop",null),Fn([j("order"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeOrder",null),Fn([j("currentOrder"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeCurrentOrder",null),Fn([j("listVisible"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeListVisible",null),Fn([j("lyricVisible"),Vn("design:type",Function),Vn("design:paramtypes",[]),Vn("design:returntype",void 0)],Jn.prototype,"handleChangeLyricVisible",null);var Wn=Jn=Fn([k()({mixins:[$]})],Jn);t.d(e,"APlayer",(function(){return Wn}));e.default=function(n,e){var t=o({},{productionTip:!0,defaultCover:"https://avatars2.githubusercontent.com/u/20062482?s=270"},e);Object.assign(Wn.prototype,{options:t}),n.component("aplayer",Wn),n.component("APlayer",Wn),t.productionTip&&console.log("%c vue-aplayer %c v".concat("2.0.0-beta.5"," ").concat("dd10c50"," %c"),"background: #35495e; padding: 1px; border-radius: 3px 0 0 3px; color: #fff","background: #41b883; padding: 1px; border-radius: 0 3px 3px 0; color: #fff","background: transparent")}},fdef:function(n,e){n.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"}})},function(n,e,t){"use strict";var r=t(0),a=t(1),o=t(39),i=t(10),s=t(11),l=t(65),c=r.Function,p=a([].concat),u=a([].join),d={},m=function(n,e,t){if(!s(d,e)){for(var r=[],a=0;a<e;a++)r[a]="a["+a+"]";d[e]=c("C,a","return new C("+u(r,",")+")")}return d[e](n,t)};n.exports=c.bind||function(n){var e=o(this),t=e.prototype,r=l(arguments,1),a=function(){var t=p(r,l(arguments));return this instanceof a?m(e,t.length,t):e.apply(n,t)};return i(t)&&(a.prototype=t),a}},function(n,e,t){"use strict";t(214)},function(n,e,t){"use strict";t(215)},function(n,e,t){"use strict";t.r(e);t(144),t(237),t(246),t(248);var r=t(90),a=(t(143),t(71),t(5),t(28),t(36),t(41),t(25),t(3));function o(n,e){for(var t in e)n[t]=e[t];return n}var i=/[!'()*]/g,s=function(n){return"%"+n.charCodeAt(0).toString(16)},l=/%2C/g,c=function(n){return encodeURIComponent(n).replace(i,s).replace(l,",")};function p(n){try{return decodeURIComponent(n)}catch(n){0}return n}var u=function(n){return null==n||"object"==typeof n?n:String(n)};function d(n){var e={};return(n=n.trim().replace(/^(\?|#|&)/,""))?(n.split("&").forEach((function(n){var t=n.replace(/\+/g," ").split("="),r=p(t.shift()),a=t.length>0?p(t.join("=")):null;void 0===e[r]?e[r]=a:Array.isArray(e[r])?e[r].push(a):e[r]=[e[r],a]})),e):e}function m(n){var e=n?Object.keys(n).map((function(e){var t=n[e];if(void 0===t)return"";if(null===t)return c(e);if(Array.isArray(t)){var r=[];return t.forEach((function(n){void 0!==n&&(null===n?r.push(c(e)):r.push(c(e)+"="+c(n)))})),r.join("&")}return c(e)+"="+c(t)})).filter((function(n){return n.length>0})).join("&"):null;return e?"?"+e:""}var f=/\/?$/;function g(n,e,t,r){var a=r&&r.options.stringifyQuery,o=e.query||{};try{o=h(o)}catch(n){}var i={name:e.name||n&&n.name,meta:n&&n.meta||{},path:e.path||"/",hash:e.hash||"",query:o,params:e.params||{},fullPath:b(e,a),matched:n?y(n):[]};return t&&(i.redirectedFrom=b(t,a)),Object.freeze(i)}function h(n){if(Array.isArray(n))return n.map(h);if(n&&"object"==typeof n){var e={};for(var t in n)e[t]=h(n[t]);return e}return n}var v=g(null,{path:"/"});function y(n){for(var e=[];n;)e.unshift(n),n=n.parent;return e}function b(n,e){var t=n.path,r=n.query;void 0===r&&(r={});var a=n.hash;return void 0===a&&(a=""),(t||"/")+(e||m)(r)+a}function x(n,e,t){return e===v?n===e:!!e&&(n.path&&e.path?n.path.replace(f,"")===e.path.replace(f,"")&&(t||n.hash===e.hash&&w(n.query,e.query)):!(!n.name||!e.name)&&(n.name===e.name&&(t||n.hash===e.hash&&w(n.query,e.query)&&w(n.params,e.params))))}function w(n,e){if(void 0===n&&(n={}),void 0===e&&(e={}),!n||!e)return n===e;var t=Object.keys(n).sort(),r=Object.keys(e).sort();return t.length===r.length&&t.every((function(t,a){var o=n[t];if(r[a]!==t)return!1;var i=e[t];return null==o||null==i?o===i:"object"==typeof o&&"object"==typeof i?w(o,i):String(o)===String(i)}))}function k(n){for(var e=0;e<n.matched.length;e++){var t=n.matched[e];for(var r in t.instances){var a=t.instances[r],o=t.enteredCbs[r];if(a&&o){delete t.enteredCbs[r];for(var i=0;i<o.length;i++)a._isBeingDestroyed||o[i](a)}}}}var S={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(n,e){var t=e.props,r=e.children,a=e.parent,i=e.data;i.routerView=!0;for(var s=a.$createElement,l=t.name,c=a.$route,p=a._routerViewCache||(a._routerViewCache={}),u=0,d=!1;a&&a._routerRoot!==a;){var m=a.$vnode?a.$vnode.data:{};m.routerView&&u++,m.keepAlive&&a._directInactive&&a._inactive&&(d=!0),a=a.$parent}if(i.routerViewDepth=u,d){var f=p[l],g=f&&f.component;return g?(f.configProps&&E(g,i,f.route,f.configProps),s(g,i,r)):s()}var h=c.matched[u],v=h&&h.components[l];if(!h||!v)return p[l]=null,s();p[l]={component:v},i.registerRouteInstance=function(n,e){var t=h.instances[l];(e&&t!==n||!e&&t===n)&&(h.instances[l]=e)},(i.hook||(i.hook={})).prepatch=function(n,e){h.instances[l]=e.componentInstance},i.hook.init=function(n){n.data.keepAlive&&n.componentInstance&&n.componentInstance!==h.instances[l]&&(h.instances[l]=n.componentInstance),k(c)};var y=h.props&&h.props[l];return y&&(o(p[l],{route:c,configProps:y}),E(v,i,c,y)),s(v,i,r)}};function E(n,e,t,r){var a=e.props=function(n,e){switch(typeof e){case"undefined":return;case"object":return e;case"function":return e(n);case"boolean":return e?n.params:void 0;default:0}}(t,r);if(a){a=e.props=o({},a);var i=e.attrs=e.attrs||{};for(var s in a)n.props&&s in n.props||(i[s]=a[s],delete a[s])}}function _(n,e,t){var r=n.charAt(0);if("/"===r)return n;if("?"===r||"#"===r)return e+n;var a=e.split("/");t&&a[a.length-1]||a.pop();for(var o=n.replace(/^\//,"").split("/"),i=0;i<o.length;i++){var s=o[i];".."===s?a.pop():"."!==s&&a.push(s)}return""!==a[0]&&a.unshift(""),a.join("/")}function C(n){return n.replace(/\/+/g,"/")}var T=Array.isArray||function(n){return"[object Array]"==Object.prototype.toString.call(n)},j=V,A=R,M=function(n,e){return q(R(n,e),e)},I=q,O=F,P=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function R(n,e){for(var t,r=[],a=0,o=0,i="",s=e&&e.delimiter||"/";null!=(t=P.exec(n));){var l=t[0],c=t[1],p=t.index;if(i+=n.slice(o,p),o=p+l.length,c)i+=c[1];else{var u=n[o],d=t[2],m=t[3],f=t[4],g=t[5],h=t[6],v=t[7];i&&(r.push(i),i="");var y=null!=d&&null!=u&&u!==d,b="+"===h||"*"===h,x="?"===h||"*"===h,w=t[2]||s,k=f||g;r.push({name:m||a++,prefix:d||"",delimiter:w,optional:x,repeat:b,partial:y,asterisk:!!v,pattern:k?L(k):v?".*":"[^"+z(w)+"]+?"})}}return o<n.length&&(i+=n.substr(o)),i&&r.push(i),r}function B(n){return encodeURI(n).replace(/[\/?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()}))}function q(n,e){for(var t=new Array(n.length),r=0;r<n.length;r++)"object"==typeof n[r]&&(t[r]=new RegExp("^(?:"+n[r].pattern+")$",N(e)));return function(e,r){for(var a="",o=e||{},i=(r||{}).pretty?B:encodeURIComponent,s=0;s<n.length;s++){var l=n[s];if("string"!=typeof l){var c,p=o[l.name];if(null==p){if(l.optional){l.partial&&(a+=l.prefix);continue}throw new TypeError('Expected "'+l.name+'" to be defined')}if(T(p)){if(!l.repeat)throw new TypeError('Expected "'+l.name+'" to not repeat, but received `'+JSON.stringify(p)+"`");if(0===p.length){if(l.optional)continue;throw new TypeError('Expected "'+l.name+'" to not be empty')}for(var u=0;u<p.length;u++){if(c=i(p[u]),!t[s].test(c))throw new TypeError('Expected all "'+l.name+'" to match "'+l.pattern+'", but received `'+JSON.stringify(c)+"`");a+=(0===u?l.prefix:l.delimiter)+c}}else{if(c=l.asterisk?encodeURI(p).replace(/[?#]/g,(function(n){return"%"+n.charCodeAt(0).toString(16).toUpperCase()})):i(p),!t[s].test(c))throw new TypeError('Expected "'+l.name+'" to match "'+l.pattern+'", but received "'+c+'"');a+=l.prefix+c}}else a+=l}return a}}function z(n){return n.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function L(n){return n.replace(/([=!:$\/()])/g,"\\$1")}function D(n,e){return n.keys=e,n}function N(n){return n&&n.sensitive?"":"i"}function F(n,e,t){T(e)||(t=e||t,e=[]);for(var r=(t=t||{}).strict,a=!1!==t.end,o="",i=0;i<n.length;i++){var s=n[i];if("string"==typeof s)o+=z(s);else{var l=z(s.prefix),c="(?:"+s.pattern+")";e.push(s),s.repeat&&(c+="(?:"+l+c+")*"),o+=c=s.optional?s.partial?l+"("+c+")?":"(?:"+l+"("+c+"))?":l+"("+c+")"}}var p=z(t.delimiter||"/"),u=o.slice(-p.length)===p;return r||(o=(u?o.slice(0,-p.length):o)+"(?:"+p+"(?=$))?"),o+=a?"$":r&&u?"":"(?="+p+"|$)",D(new RegExp("^"+o,N(t)),e)}function V(n,e,t){return T(e)||(t=e||t,e=[]),t=t||{},n instanceof RegExp?function(n,e){var t=n.source.match(/\((?!\?)/g);if(t)for(var r=0;r<t.length;r++)e.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return D(n,e)}(n,e):T(n)?function(n,e,t){for(var r=[],a=0;a<n.length;a++)r.push(V(n[a],e,t).source);return D(new RegExp("(?:"+r.join("|")+")",N(t)),e)}(n,e,t):function(n,e,t){return F(R(n,t),e,t)}(n,e,t)}j.parse=A,j.compile=M,j.tokensToFunction=I,j.tokensToRegExp=O;var $=Object.create(null);function U(n,e,t){e=e||{};try{var r=$[n]||($[n]=j.compile(n));return"string"==typeof e.pathMatch&&(e[0]=e.pathMatch),r(e,{pretty:!0})}catch(n){return""}finally{delete e[0]}}function H(n,e,t,r){var a="string"==typeof n?{path:n}:n;if(a._normalized)return a;if(a.name){var i=(a=o({},n)).params;return i&&"object"==typeof i&&(a.params=o({},i)),a}if(!a.path&&a.params&&e){(a=o({},a))._normalized=!0;var s=o(o({},e.params),a.params);if(e.name)a.name=e.name,a.params=s;else if(e.matched.length){var l=e.matched[e.matched.length-1].path;a.path=U(l,s,e.path)}else 0;return a}var c=function(n){var e="",t="",r=n.indexOf("#");r>=0&&(e=n.slice(r),n=n.slice(0,r));var a=n.indexOf("?");return a>=0&&(t=n.slice(a+1),n=n.slice(0,a)),{path:n,query:t,hash:e}}(a.path||""),p=e&&e.path||"/",m=c.path?_(c.path,p,t||a.append):p,f=function(n,e,t){void 0===e&&(e={});var r,a=t||d;try{r=a(n||"")}catch(n){r={}}for(var o in e){var i=e[o];r[o]=Array.isArray(i)?i.map(u):u(i)}return r}(c.query,a.query,r&&r.options.parseQuery),g=a.hash||c.hash;return g&&"#"!==g.charAt(0)&&(g="#"+g),{_normalized:!0,path:m,query:f,hash:g}}var J,W=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(n){var e=this,t=this.$router,r=this.$route,a=t.resolve(this.to,r,this.append),i=a.location,s=a.route,l=a.href,c={},p=t.options.linkActiveClass,u=t.options.linkExactActiveClass,d=null==p?"router-link-active":p,m=null==u?"router-link-exact-active":u,h=null==this.activeClass?d:this.activeClass,v=null==this.exactActiveClass?m:this.exactActiveClass,y=s.redirectedFrom?g(null,H(s.redirectedFrom),null,t):s;c[v]=x(r,y,this.exactPath),c[h]=this.exact||this.exactPath?c[v]:function(n,e){return 0===n.path.replace(f,"/").indexOf(e.path.replace(f,"/"))&&(!e.hash||n.hash===e.hash)&&function(n,e){for(var t in e)if(!(t in n))return!1;return!0}(n.query,e.query)}(r,y);var b=c[v]?this.ariaCurrentValue:null,w=function(n){Q(n)&&(e.replace?t.replace(i,W):t.push(i,W))},k={click:Q};Array.isArray(this.event)?this.event.forEach((function(n){k[n]=w})):k[this.event]=w;var S={class:c},E=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:l,route:s,navigate:w,isActive:c[h],isExactActive:c[v]});if(E){if(1===E.length)return E[0];if(E.length>1||!E.length)return 0===E.length?n():n("span",{},E)}if("a"===this.tag)S.on=k,S.attrs={href:l,"aria-current":b};else{var _=function n(e){var t;if(e)for(var r=0;r<e.length;r++){if("a"===(t=e[r]).tag)return t;if(t.children&&(t=n(t.children)))return t}}(this.$slots.default);if(_){_.isStatic=!1;var C=_.data=o({},_.data);for(var T in C.on=C.on||{},C.on){var j=C.on[T];T in k&&(C.on[T]=Array.isArray(j)?j:[j])}for(var A in k)A in C.on?C.on[A].push(k[A]):C.on[A]=w;var M=_.data.attrs=o({},_.data.attrs);M.href=l,M["aria-current"]=b}else S.on=k}return n(this.tag,S,this.$slots.default)}};function Q(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey||n.defaultPrevented||void 0!==n.button&&0!==n.button)){if(n.currentTarget&&n.currentTarget.getAttribute){var e=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(e))return}return n.preventDefault&&n.preventDefault(),!0}}var K="undefined"!=typeof window;function Y(n,e,t,r,a){var o=e||[],i=t||Object.create(null),s=r||Object.create(null);n.forEach((function(n){!function n(e,t,r,a,o,i){var s=a.path,l=a.name;0;var c=a.pathToRegexpOptions||{},p=function(n,e,t){t||(n=n.replace(/\/$/,""));if("/"===n[0])return n;if(null==e)return n;return C(e.path+"/"+n)}(s,o,c.strict);"boolean"==typeof a.caseSensitive&&(c.sensitive=a.caseSensitive);var u={path:p,regex:Z(p,c),components:a.components||{default:a.component},alias:a.alias?"string"==typeof a.alias?[a.alias]:a.alias:[],instances:{},enteredCbs:{},name:l,parent:o,matchAs:i,redirect:a.redirect,beforeEnter:a.beforeEnter,meta:a.meta||{},props:null==a.props?{}:a.components?a.props:{default:a.props}};a.children&&a.children.forEach((function(a){var o=i?C(i+"/"+a.path):void 0;n(e,t,r,a,u,o)}));t[u.path]||(e.push(u.path),t[u.path]=u);if(void 0!==a.alias)for(var d=Array.isArray(a.alias)?a.alias:[a.alias],m=0;m<d.length;++m){0;var f={path:d[m],children:a.children};n(e,t,r,f,o,u.path||"/")}l&&(r[l]||(r[l]=u))}(o,i,s,n,a)}));for(var l=0,c=o.length;l<c;l++)"*"===o[l]&&(o.push(o.splice(l,1)[0]),c--,l--);return{pathList:o,pathMap:i,nameMap:s}}function Z(n,e){return j(n,[],e)}function X(n,e){var t=Y(n),r=t.pathList,a=t.pathMap,o=t.nameMap;function i(n,t,i){var s=H(n,t,!1,e),c=s.name;if(c){var p=o[c];if(!p)return l(null,s);var u=p.regex.keys.filter((function(n){return!n.optional})).map((function(n){return n.name}));if("object"!=typeof s.params&&(s.params={}),t&&"object"==typeof t.params)for(var d in t.params)!(d in s.params)&&u.indexOf(d)>-1&&(s.params[d]=t.params[d]);return s.path=U(p.path,s.params),l(p,s,i)}if(s.path){s.params={};for(var m=0;m<r.length;m++){var f=r[m],g=a[f];if(nn(g.regex,s.path,s.params))return l(g,s,i)}}return l(null,s)}function s(n,t){var r=n.redirect,a="function"==typeof r?r(g(n,t,null,e)):r;if("string"==typeof a&&(a={path:a}),!a||"object"!=typeof a)return l(null,t);var s=a,c=s.name,p=s.path,u=t.query,d=t.hash,m=t.params;if(u=s.hasOwnProperty("query")?s.query:u,d=s.hasOwnProperty("hash")?s.hash:d,m=s.hasOwnProperty("params")?s.params:m,c){o[c];return i({_normalized:!0,name:c,query:u,hash:d,params:m},void 0,t)}if(p){var f=function(n,e){return _(n,e.parent?e.parent.path:"/",!0)}(p,n);return i({_normalized:!0,path:U(f,m),query:u,hash:d},void 0,t)}return l(null,t)}function l(n,t,r){return n&&n.redirect?s(n,r||t):n&&n.matchAs?function(n,e,t){var r=i({_normalized:!0,path:U(t,e.params)});if(r){var a=r.matched,o=a[a.length-1];return e.params=r.params,l(o,e)}return l(null,e)}(0,t,n.matchAs):g(n,t,r,e)}return{match:i,addRoute:function(n,e){var t="object"!=typeof n?o[n]:void 0;Y([e||n],r,a,o,t),t&&t.alias.length&&Y(t.alias.map((function(n){return{path:n,children:[e]}})),r,a,o,t)},getRoutes:function(){return r.map((function(n){return a[n]}))},addRoutes:function(n){Y(n,r,a,o)}}}function nn(n,e,t){var r=e.match(n);if(!r)return!1;if(!t)return!0;for(var a=1,o=r.length;a<o;++a){var i=n.keys[a-1];i&&(t[i.name||"pathMatch"]="string"==typeof r[a]?p(r[a]):r[a])}return!0}var en=K&&window.performance&&window.performance.now?window.performance:Date;function tn(){return en.now().toFixed(3)}var rn=tn();function an(){return rn}function on(n){return rn=n}var sn=Object.create(null);function ln(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var n=window.location.protocol+"//"+window.location.host,e=window.location.href.replace(n,""),t=o({},window.history.state);return t.key=an(),window.history.replaceState(t,"",e),window.addEventListener("popstate",un),function(){window.removeEventListener("popstate",un)}}function cn(n,e,t,r){if(n.app){var a=n.options.scrollBehavior;a&&n.app.$nextTick((function(){var o=function(){var n=an();if(n)return sn[n]}(),i=a.call(n,e,t,r?o:null);i&&("function"==typeof i.then?i.then((function(n){hn(n,o)})).catch((function(n){0})):hn(i,o))}))}}function pn(){var n=an();n&&(sn[n]={x:window.pageXOffset,y:window.pageYOffset})}function un(n){pn(),n.state&&n.state.key&&on(n.state.key)}function dn(n){return fn(n.x)||fn(n.y)}function mn(n){return{x:fn(n.x)?n.x:window.pageXOffset,y:fn(n.y)?n.y:window.pageYOffset}}function fn(n){return"number"==typeof n}var gn=/^#\d/;function hn(n,e){var t,r="object"==typeof n;if(r&&"string"==typeof n.selector){var a=gn.test(n.selector)?document.getElementById(n.selector.slice(1)):document.querySelector(n.selector);if(a){var o=n.offset&&"object"==typeof n.offset?n.offset:{};e=function(n,e){var t=document.documentElement.getBoundingClientRect(),r=n.getBoundingClientRect();return{x:r.left-t.left-e.x,y:r.top-t.top-e.y}}(a,o={x:fn((t=o).x)?t.x:0,y:fn(t.y)?t.y:0})}else dn(n)&&(e=mn(n))}else r&&dn(n)&&(e=mn(n));e&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:e.x,top:e.y,behavior:n.behavior}):window.scrollTo(e.x,e.y))}var vn,yn=K&&((-1===(vn=window.navigator.userAgent).indexOf("Android 2.")&&-1===vn.indexOf("Android 4.0")||-1===vn.indexOf("Mobile Safari")||-1!==vn.indexOf("Chrome")||-1!==vn.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function bn(n,e){pn();var t=window.history;try{if(e){var r=o({},t.state);r.key=an(),t.replaceState(r,"",n)}else t.pushState({key:on(tn())},"",n)}catch(t){window.location[e?"replace":"assign"](n)}}function xn(n){bn(n,!0)}function wn(n,e,t){var r=function(a){a>=n.length?t():n[a]?e(n[a],(function(){r(a+1)})):r(a+1)};r(0)}var kn={redirected:2,aborted:4,cancelled:8,duplicated:16};function Sn(n,e){return _n(n,e,kn.redirected,'Redirected when going from "'+n.fullPath+'" to "'+function(n){if("string"==typeof n)return n;if("path"in n)return n.path;var e={};return Cn.forEach((function(t){t in n&&(e[t]=n[t])})),JSON.stringify(e,null,2)}(e)+'" via a navigation guard.')}function En(n,e){return _n(n,e,kn.cancelled,'Navigation cancelled from "'+n.fullPath+'" to "'+e.fullPath+'" with a new navigation.')}function _n(n,e,t,r){var a=new Error(r);return a._isRouter=!0,a.from=n,a.to=e,a.type=t,a}var Cn=["params","query","hash"];function Tn(n){return Object.prototype.toString.call(n).indexOf("Error")>-1}function jn(n,e){return Tn(n)&&n._isRouter&&(null==e||n.type===e)}function An(n){return function(e,t,r){var a=!1,o=0,i=null;Mn(n,(function(n,e,t,s){if("function"==typeof n&&void 0===n.cid){a=!0,o++;var l,c=Pn((function(e){var a;((a=e).__esModule||On&&"Module"===a[Symbol.toStringTag])&&(e=e.default),n.resolved="function"==typeof e?e:J.extend(e),t.components[s]=e,--o<=0&&r()})),p=Pn((function(n){var e="Failed to resolve async component "+s+": "+n;i||(i=Tn(n)?n:new Error(e),r(i))}));try{l=n(c,p)}catch(n){p(n)}if(l)if("function"==typeof l.then)l.then(c,p);else{var u=l.component;u&&"function"==typeof u.then&&u.then(c,p)}}})),a||r()}}function Mn(n,e){return In(n.map((function(n){return Object.keys(n.components).map((function(t){return e(n.components[t],n.instances[t],n,t)}))})))}function In(n){return Array.prototype.concat.apply([],n)}var On="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Pn(n){var e=!1;return function(){for(var t=[],r=arguments.length;r--;)t[r]=arguments[r];if(!e)return e=!0,n.apply(this,t)}}var Rn=function(n,e){this.router=n,this.base=function(n){if(!n)if(K){var e=document.querySelector("base");n=(n=e&&e.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else n="/";"/"!==n.charAt(0)&&(n="/"+n);return n.replace(/\/$/,"")}(e),this.current=v,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Bn(n,e,t,r){var a=Mn(n,(function(n,r,a,o){var i=function(n,e){"function"!=typeof n&&(n=J.extend(n));return n.options[e]}(n,e);if(i)return Array.isArray(i)?i.map((function(n){return t(n,r,a,o)})):t(i,r,a,o)}));return In(r?a.reverse():a)}function qn(n,e){if(e)return function(){return n.apply(e,arguments)}}Rn.prototype.listen=function(n){this.cb=n},Rn.prototype.onReady=function(n,e){this.ready?n():(this.readyCbs.push(n),e&&this.readyErrorCbs.push(e))},Rn.prototype.onError=function(n){this.errorCbs.push(n)},Rn.prototype.transitionTo=function(n,e,t){var r,a=this;try{r=this.router.match(n,this.current)}catch(n){throw this.errorCbs.forEach((function(e){e(n)})),n}var o=this.current;this.confirmTransition(r,(function(){a.updateRoute(r),e&&e(r),a.ensureURL(),a.router.afterHooks.forEach((function(n){n&&n(r,o)})),a.ready||(a.ready=!0,a.readyCbs.forEach((function(n){n(r)})))}),(function(n){t&&t(n),n&&!a.ready&&(jn(n,kn.redirected)&&o===v||(a.ready=!0,a.readyErrorCbs.forEach((function(e){e(n)}))))}))},Rn.prototype.confirmTransition=function(n,e,t){var r=this,a=this.current;this.pending=n;var o,i,s=function(n){!jn(n)&&Tn(n)&&(r.errorCbs.length?r.errorCbs.forEach((function(e){e(n)})):console.error(n)),t&&t(n)},l=n.matched.length-1,c=a.matched.length-1;if(x(n,a)&&l===c&&n.matched[l]===a.matched[c])return this.ensureURL(),n.hash&&cn(this.router,a,n,!1),s(((i=_n(o=a,n,kn.duplicated,'Avoided redundant navigation to current location: "'+o.fullPath+'".')).name="NavigationDuplicated",i));var p=function(n,e){var t,r=Math.max(n.length,e.length);for(t=0;t<r&&n[t]===e[t];t++);return{updated:e.slice(0,t),activated:e.slice(t),deactivated:n.slice(t)}}(this.current.matched,n.matched),u=p.updated,d=p.deactivated,m=p.activated,f=[].concat(function(n){return Bn(n,"beforeRouteLeave",qn,!0)}(d),this.router.beforeHooks,function(n){return Bn(n,"beforeRouteUpdate",qn)}(u),m.map((function(n){return n.beforeEnter})),An(m)),g=function(e,t){if(r.pending!==n)return s(En(a,n));try{e(n,a,(function(e){!1===e?(r.ensureURL(!0),s(function(n,e){return _n(n,e,kn.aborted,'Navigation aborted from "'+n.fullPath+'" to "'+e.fullPath+'" via a navigation guard.')}(a,n))):Tn(e)?(r.ensureURL(!0),s(e)):"string"==typeof e||"object"==typeof e&&("string"==typeof e.path||"string"==typeof e.name)?(s(Sn(a,n)),"object"==typeof e&&e.replace?r.replace(e):r.push(e)):t(e)}))}catch(n){s(n)}};wn(f,g,(function(){wn(function(n){return Bn(n,"beforeRouteEnter",(function(n,e,t,r){return function(n,e,t){return function(r,a,o){return n(r,a,(function(n){"function"==typeof n&&(e.enteredCbs[t]||(e.enteredCbs[t]=[]),e.enteredCbs[t].push(n)),o(n)}))}}(n,t,r)}))}(m).concat(r.router.resolveHooks),g,(function(){if(r.pending!==n)return s(En(a,n));r.pending=null,e(n),r.router.app&&r.router.app.$nextTick((function(){k(n)}))}))}))},Rn.prototype.updateRoute=function(n){this.current=n,this.cb&&this.cb(n)},Rn.prototype.setupListeners=function(){},Rn.prototype.teardown=function(){this.listeners.forEach((function(n){n()})),this.listeners=[],this.current=v,this.pending=null};var zn=function(n){function e(e,t){n.call(this,e,t),this._startLocation=Ln(this.base)}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router,t=e.options.scrollBehavior,r=yn&&t;r&&this.listeners.push(ln());var a=function(){var t=n.current,a=Ln(n.base);n.current===v&&a===n._startLocation||n.transitionTo(a,(function(n){r&&cn(e,n,t,!0)}))};window.addEventListener("popstate",a),this.listeners.push((function(){window.removeEventListener("popstate",a)}))}},e.prototype.go=function(n){window.history.go(n)},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){bn(C(r.base+n.fullPath)),cn(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){xn(C(r.base+n.fullPath)),cn(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.ensureURL=function(n){if(Ln(this.base)!==this.current.fullPath){var e=C(this.base+this.current.fullPath);n?bn(e):xn(e)}},e.prototype.getCurrentLocation=function(){return Ln(this.base)},e}(Rn);function Ln(n){var e=window.location.pathname,t=e.toLowerCase(),r=n.toLowerCase();return!n||t!==r&&0!==t.indexOf(C(r+"/"))||(e=e.slice(n.length)),(e||"/")+window.location.search+window.location.hash}var Dn=function(n){function e(e,t,r){n.call(this,e,t),r&&function(n){var e=Ln(n);if(!/^\/#/.test(e))return window.location.replace(C(n+"/#"+e)),!0}(this.base)||Nn()}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.setupListeners=function(){var n=this;if(!(this.listeners.length>0)){var e=this.router.options.scrollBehavior,t=yn&&e;t&&this.listeners.push(ln());var r=function(){var e=n.current;Nn()&&n.transitionTo(Fn(),(function(r){t&&cn(n.router,r,e,!0),yn||Un(r.fullPath)}))},a=yn?"popstate":"hashchange";window.addEventListener(a,r),this.listeners.push((function(){window.removeEventListener(a,r)}))}},e.prototype.push=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){$n(n.fullPath),cn(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this,a=this.current;this.transitionTo(n,(function(n){Un(n.fullPath),cn(r.router,n,a,!1),e&&e(n)}),t)},e.prototype.go=function(n){window.history.go(n)},e.prototype.ensureURL=function(n){var e=this.current.fullPath;Fn()!==e&&(n?$n(e):Un(e))},e.prototype.getCurrentLocation=function(){return Fn()},e}(Rn);function Nn(){var n=Fn();return"/"===n.charAt(0)||(Un("/"+n),!1)}function Fn(){var n=window.location.href,e=n.indexOf("#");return e<0?"":n=n.slice(e+1)}function Vn(n){var e=window.location.href,t=e.indexOf("#");return(t>=0?e.slice(0,t):e)+"#"+n}function $n(n){yn?bn(Vn(n)):window.location.hash=n}function Un(n){yn?xn(Vn(n)):window.location.replace(Vn(n))}var Hn=function(n){function e(e,t){n.call(this,e,t),this.stack=[],this.index=-1}return n&&(e.__proto__=n),e.prototype=Object.create(n&&n.prototype),e.prototype.constructor=e,e.prototype.push=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index+1).concat(n),r.index++,e&&e(n)}),t)},e.prototype.replace=function(n,e,t){var r=this;this.transitionTo(n,(function(n){r.stack=r.stack.slice(0,r.index).concat(n),e&&e(n)}),t)},e.prototype.go=function(n){var e=this,t=this.index+n;if(!(t<0||t>=this.stack.length)){var r=this.stack[t];this.confirmTransition(r,(function(){var n=e.current;e.index=t,e.updateRoute(r),e.router.afterHooks.forEach((function(e){e&&e(r,n)}))}),(function(n){jn(n,kn.duplicated)&&(e.index=t)}))}},e.prototype.getCurrentLocation=function(){var n=this.stack[this.stack.length-1];return n?n.fullPath:"/"},e.prototype.ensureURL=function(){},e}(Rn),Jn=function(n){void 0===n&&(n={}),this.app=null,this.apps=[],this.options=n,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=X(n.routes||[],this);var e=n.mode||"hash";switch(this.fallback="history"===e&&!yn&&!1!==n.fallback,this.fallback&&(e="hash"),K||(e="abstract"),this.mode=e,e){case"history":this.history=new zn(this,n.base);break;case"hash":this.history=new Dn(this,n.base,this.fallback);break;case"abstract":this.history=new Hn(this,n.base);break;default:0}},Wn={currentRoute:{configurable:!0}};function Gn(n,e){return n.push(e),function(){var t=n.indexOf(e);t>-1&&n.splice(t,1)}}Jn.prototype.match=function(n,e,t){return this.matcher.match(n,e,t)},Wn.currentRoute.get=function(){return this.history&&this.history.current},Jn.prototype.init=function(n){var e=this;if(this.apps.push(n),n.$once("hook:destroyed",(function(){var t=e.apps.indexOf(n);t>-1&&e.apps.splice(t,1),e.app===n&&(e.app=e.apps[0]||null),e.app||e.history.teardown()})),!this.app){this.app=n;var t=this.history;if(t instanceof zn||t instanceof Dn){var r=function(n){t.setupListeners(),function(n){var r=t.current,a=e.options.scrollBehavior;yn&&a&&"fullPath"in n&&cn(e,n,r,!1)}(n)};t.transitionTo(t.getCurrentLocation(),r,r)}t.listen((function(n){e.apps.forEach((function(e){e._route=n}))}))}},Jn.prototype.beforeEach=function(n){return Gn(this.beforeHooks,n)},Jn.prototype.beforeResolve=function(n){return Gn(this.resolveHooks,n)},Jn.prototype.afterEach=function(n){return Gn(this.afterHooks,n)},Jn.prototype.onReady=function(n,e){this.history.onReady(n,e)},Jn.prototype.onError=function(n){this.history.onError(n)},Jn.prototype.push=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.push(n,e,t)}));this.history.push(n,e,t)},Jn.prototype.replace=function(n,e,t){var r=this;if(!e&&!t&&"undefined"!=typeof Promise)return new Promise((function(e,t){r.history.replace(n,e,t)}));this.history.replace(n,e,t)},Jn.prototype.go=function(n){this.history.go(n)},Jn.prototype.back=function(){this.go(-1)},Jn.prototype.forward=function(){this.go(1)},Jn.prototype.getMatchedComponents=function(n){var e=n?n.matched?n:this.resolve(n).route:this.currentRoute;return e?[].concat.apply([],e.matched.map((function(n){return Object.keys(n.components).map((function(e){return n.components[e]}))}))):[]},Jn.prototype.resolve=function(n,e,t){var r=H(n,e=e||this.history.current,t,this),a=this.match(r,e),o=a.redirectedFrom||a.fullPath;return{location:r,route:a,href:function(n,e,t){var r="hash"===t?"#"+e:e;return n?C(n+"/"+r):r}(this.history.base,o,this.mode),normalizedTo:r,resolved:a}},Jn.prototype.getRoutes=function(){return this.matcher.getRoutes()},Jn.prototype.addRoute=function(n,e){this.matcher.addRoute(n,e),this.history.current!==v&&this.history.transitionTo(this.history.getCurrentLocation())},Jn.prototype.addRoutes=function(n){this.matcher.addRoutes(n),this.history.current!==v&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(Jn.prototype,Wn),Jn.install=function n(e){if(!n.installed||J!==e){n.installed=!0,J=e;var t=function(n){return void 0!==n},r=function(n,e){var r=n.$options._parentVnode;t(r)&&t(r=r.data)&&t(r=r.registerRouteInstance)&&r(n,e)};e.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),e.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,r(this,this)},destroyed:function(){r(this)}}),Object.defineProperty(e.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(e.prototype,"$route",{get:function(){return this._routerRoot._route}}),e.component("RouterView",S),e.component("RouterLink",G);var a=e.config.optionMergeStrategies;a.beforeRouteEnter=a.beforeRouteLeave=a.beforeRouteUpdate=a.created}},Jn.version="3.5.3",Jn.isNavigationFailure=jn,Jn.NavigationFailureType=kn,Jn.START_LOCATION=v,K&&window.Vue&&window.Vue.use(Jn);var Qn=Jn;t(174),t(175),t(251),t(73),t(253),t(29),t(30),t(254);function Kn(n){n.locales&&Object.keys(n.locales).forEach((function(e){n.locales[e].path=e})),Object.freeze(n)}t(67),t(92),t(124);function Yn(n){return(Yn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}var Zn=t(69),Xn=(t(186),t(19),t(54),t(227),t(228),t(42),t(31),{NotFound:function(){return Promise.all([t.e(0),t.e(12)]).then(t.bind(null,511))},Layout:function(){return Promise.all([t.e(0),t.e(3),t.e(2)]).then(t.bind(null,510))}}),ne={"v-7e589802":function(){return t.e(18).then(t.bind(null,512))},"v-471855f4":function(){return t.e(17).then(t.bind(null,513))},"v-3a688953":function(){return t.e(13).then(t.bind(null,514))},"v-f931e64c":function(){return t.e(16).then(t.bind(null,515))},"v-34be8741":function(){return t.e(21).then(t.bind(null,516))},"v-8e88dc58":function(){return t.e(20).then(t.bind(null,517))},"v-2fc728ba":function(){return t.e(22).then(t.bind(null,518))},"v-4f57980c":function(){return t.e(19).then(t.bind(null,519))},"v-0069db8e":function(){return t.e(23).then(t.bind(null,520))},"v-b57eb2de":function(){return t.e(25).then(t.bind(null,521))},"v-29486e54":function(){return t.e(24).then(t.bind(null,522))},"v-17b68674":function(){return t.e(26).then(t.bind(null,523))},"v-9d058b4e":function(){return t.e(28).then(t.bind(null,524))},"v-e974bd18":function(){return t.e(27).then(t.bind(null,525))},"v-4a35e8e8":function(){return t.e(30).then(t.bind(null,526))},"v-5ef541de":function(){return t.e(29).then(t.bind(null,527))},"v-64e809bf":function(){return t.e(33).then(t.bind(null,528))},"v-069e0ca2":function(){return t.e(31).then(t.bind(null,529))},"v-5bee6a51":function(){return t.e(34).then(t.bind(null,530))},"v-5fd909e1":function(){return t.e(36).then(t.bind(null,531))},"v-bcb67630":function(){return t.e(32).then(t.bind(null,532))},"v-7ee600f6":function(){return t.e(5).then(t.bind(null,533))},"v-84907370":function(){return t.e(35).then(t.bind(null,534))},"v-29b94478":function(){return t.e(37).then(t.bind(null,535))},"v-3fa1c972":function(){return t.e(38).then(t.bind(null,536))},"v-aa7a79d0":function(){return t.e(14).then(t.bind(null,537))},"v-383ff026":function(){return t.e(39).then(t.bind(null,538))},"v-69e8ae2a":function(){return t.e(6).then(t.bind(null,539))},"v-0a14c254":function(){return t.e(40).then(t.bind(null,540))},"v-b51269ae":function(){return t.e(15).then(t.bind(null,541))},"v-28e5f514":function(){return t.e(43).then(t.bind(null,542))},"v-c61b991a":function(){return t.e(41).then(t.bind(null,543))},"v-7d1c09d6":function(){return t.e(44).then(t.bind(null,544))},"v-00ec27bb":function(){return t.e(7).then(t.bind(null,545))},"v-0cb1234b":function(){return t.e(42).then(t.bind(null,546))},"v-e71b2536":function(){return t.e(45).then(t.bind(null,547))},"v-54c34bd8":function(){return t.e(47).then(t.bind(null,548))},"v-efed3fb6":function(){return t.e(46).then(t.bind(null,549))},"v-63b96b96":function(){return t.e(8).then(t.bind(null,550))},"v-6bd8a556":function(){return t.e(49).then(t.bind(null,551))},"v-48a7f63f":function(){return t.e(48).then(t.bind(null,552))},"v-7f98913b":function(){return t.e(50).then(t.bind(null,553))},"v-67c86f9c":function(){return t.e(51).then(t.bind(null,554))},"v-15a97d63":function(){return t.e(52).then(t.bind(null,555))},"v-667b9d14":function(){return t.e(54).then(t.bind(null,556))},"v-9f0513de":function(){return t.e(53).then(t.bind(null,557))},"v-24476194":function(){return t.e(56).then(t.bind(null,558))},"v-4717db20":function(){return t.e(55).then(t.bind(null,559))},"v-241511aa":function(){return t.e(4).then(t.bind(null,560))},"v-522bd708":function(){return t.e(57).then(t.bind(null,561))},"v-597c1aba":function(){return t.e(59).then(t.bind(null,562))},"v-1c48e214":function(){return t.e(58).then(t.bind(null,563))},"v-35d3a620":function(){return t.e(60).then(t.bind(null,564))},"v-88904f4c":function(){return t.e(61).then(t.bind(null,565))},"v-5a4aad80":function(){return t.e(62).then(t.bind(null,566))},"v-06288b74":function(){return t.e(9).then(t.bind(null,567))},"v-6c40d3e8":function(){return t.e(10).then(t.bind(null,568))},"v-8815005e":function(){return t.e(63).then(t.bind(null,569))},"v-6d67b5e6":function(){return t.e(64).then(t.bind(null,570))},"v-17188e2e":function(){return t.e(65).then(t.bind(null,571))},"v-3a50b66b":function(){return t.e(67).then(t.bind(null,572))},"v-4db62294":function(){return t.e(66).then(t.bind(null,573))},"v-1a195796":function(){return t.e(68).then(t.bind(null,574))},"v-6f4bd572":function(){return t.e(69).then(t.bind(null,575))},"v-f61f7974":function(){return t.e(70).then(t.bind(null,576))},"v-23017f8c":function(){return t.e(72).then(t.bind(null,577))},"v-5a7e7158":function(){return t.e(75).then(t.bind(null,578))},"v-6db702af":function(){return t.e(71).then(t.bind(null,579))},"v-5508f0ba":function(){return t.e(73).then(t.bind(null,580))},"v-f58aebf0":function(){return t.e(74).then(t.bind(null,581))},"v-ed639c18":function(){return t.e(77).then(t.bind(null,582))},"v-027e22d1":function(){return t.e(76).then(t.bind(null,583))},"v-7832c0a0":function(){return t.e(78).then(t.bind(null,584))},"v-3d8d6032":function(){return t.e(79).then(t.bind(null,585))},"v-ca31da4e":function(){return t.e(80).then(t.bind(null,586))},"v-457f4439":function(){return t.e(81).then(t.bind(null,587))},"v-2a230c59":function(){return t.e(82).then(t.bind(null,588))},"v-53fe3f05":function(){return t.e(83).then(t.bind(null,589))}};function ee(n){var e=Object.create(null);return function(t){return e[t]||(e[t]=n(t))}}var te=/-(\w)/g,re=ee((function(n){return n.replace(te,(function(n,e){return e?e.toUpperCase():""}))})),ae=/\B([A-Z])/g,oe=ee((function(n){return n.replace(ae,"-$1").toLowerCase()})),ie=ee((function(n){return n.charAt(0).toUpperCase()+n.slice(1)}));function se(n,e){if(e)return n(e)?n(e):e.includes("-")?n(ie(re(e))):n(ie(e))||n(oe(e))}var le=Object.assign({},Xn,ne),ce=function(n){return le[n]},pe=function(n){return ne[n]},ue=function(n){return Xn[n]},de=function(n){return a.default.component(n)};function me(n){return se(pe,n)}function fe(n){return se(ue,n)}function ge(n){return se(ce,n)}function he(n){return se(de,n)}function ve(){for(var n=arguments.length,e=new Array(n),t=0;t<n;t++)e[t]=arguments[t];return Promise.all(e.filter((function(n){return n})).map(function(){var n=Object(r.a)(regeneratorRuntime.mark((function n(e){var t;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(he(e)||!ge(e)){n.next=5;break}return n.next=3,ge(e)();case 3:t=n.sent,a.default.component(e,t.default);case 5:case"end":return n.stop()}}),n)})));return function(e){return n.apply(this,arguments)}}()))}function ye(n,e){"undefined"!=typeof window&&window.__VUEPRESS__&&(window.__VUEPRESS__[n]=e)}var be=t(138),xe=(t(267),t(108),t(72),t(216)),we=t.n(xe),ke=t(217),Se=t.n(ke),Ee={created:function(){if(this.siteMeta=this.$site.headTags.filter((function(n){return"meta"===Object(be.a)(n,1)[0]})).map((function(n){var e=Object(be.a)(n,2);e[0];return e[1]})),this.$ssrContext){var n=this.getMergedMetaTags();this.$ssrContext.title=this.$title,this.$ssrContext.lang=this.$lang,this.$ssrContext.pageMeta=(e=n)?e.map((function(n){var e="<meta";return Object.keys(n).forEach((function(t){e+=" ".concat(t,'="').concat(Se()(n[t]),'"')})),e+">"})).join("\n    "):"",this.$ssrContext.canonicalLink=Ce(this.$canonicalUrl)}var e},mounted:function(){this.currentMetaTags=Object(Zn.a)(document.querySelectorAll("meta")),this.updateMeta(),this.updateCanonicalLink()},methods:{updateMeta:function(){document.title=this.$title,document.documentElement.lang=this.$lang;var n=this.getMergedMetaTags();this.currentMetaTags=Te(n,this.currentMetaTags)},getMergedMetaTags:function(){var n=this.$page.frontmatter.meta||[];return we()([{name:"description",content:this.$description}],n,this.siteMeta,je)},updateCanonicalLink:function(){_e(),this.$canonicalUrl&&document.head.insertAdjacentHTML("beforeend",Ce(this.$canonicalUrl))}},watch:{$page:function(){this.updateMeta(),this.updateCanonicalLink()}},beforeDestroy:function(){Te(null,this.currentMetaTags),_e()}};function _e(){var n=document.querySelector("link[rel='canonical']");n&&n.remove()}function Ce(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return n?'<link href="'.concat(n,'" rel="canonical" />'):""}function Te(n,e){if(e&&Object(Zn.a)(e).filter((function(n){return n.parentNode===document.head})).forEach((function(n){return document.head.removeChild(n)})),n)return n.map((function(n){var e=document.createElement("meta");return Object.keys(n).forEach((function(t){e.setAttribute(t,n[t])})),document.head.appendChild(e),e}))}function je(n){for(var e=0,t=["name","property","itemprop"];e<t.length;e++){var r=t[e];if(n.hasOwnProperty(r))return n[r]+r}return JSON.stringify(n)}t(140);var Ae=t(148),Me={mounted:function(){window.addEventListener("scroll",this.onScroll)},methods:{onScroll:t.n(Ae)()((function(){this.setActiveHash()}),300),setActiveHash:function(){for(var n=this,e=[].slice.call(document.querySelectorAll(".sidebar-link")),t=[].slice.call(document.querySelectorAll(".header-anchor")).filter((function(n){return e.some((function(e){return e.hash===n.hash}))})),r=Math.max(window.pageYOffset,document.documentElement.scrollTop,document.body.scrollTop),a=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),o=window.innerHeight+r,i=0;i<t.length;i++){var s=t[i],l=t[i+1],c=0===i&&0===r||r>=s.parentElement.offsetTop+10&&(!l||r<l.parentElement.offsetTop-10),p=decodeURIComponent(this.$route.hash);if(c&&p!==decodeURIComponent(s.hash)){var u=s;if(o===a)for(var d=i+1;d<t.length;d++)if(p===decodeURIComponent(t[d].hash))return;return this.$vuepress.$set("disableScrollBehavior",!0),void this.$router.replace(decodeURIComponent(u.hash),(function(){n.$nextTick((function(){n.$vuepress.$set("disableScrollBehavior",!1)}))}))}}}},beforeDestroy:function(){window.removeEventListener("scroll",this.onScroll)}},Ie=(t(77),t(102)),Oe=t.n(Ie),Pe={mounted:function(){var n=this;Oe.a.configure({showSpinner:!1}),this.$router.beforeEach((function(n,e,t){n.path===e.path||a.default.component(n.name)||Oe.a.start(),t()})),this.$router.afterEach((function(){Oe.a.done(),n.isSidebarOpen=!1}))}};t(53),t(103),t(76),t(362);function Re(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}t(100);function Be(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}function qe(n,e,t){return e&&Be(n.prototype,e),t&&Be(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}t(363);var ze=function(){function n(){Re(this,n);this.containerEl=document.getElementById("message-container"),this.containerEl||(this.containerEl=document.createElement("div"),this.containerEl.id="message-container",document.body.appendChild(this.containerEl))}return qe(n,[{key:"show",value:function(n){var e=this,t=n.text,r=void 0===t?"":t,a=n.duration,o=void 0===a?3e3:a,i=document.createElement("div");i.className="message move-in",i.innerHTML='\n      <i style="fill: #06a35a;font-size: 14px;display:inline-flex;align-items: center;">\n        <svg style="fill: #06a35a;font-size: 14px;" t="1572421810237" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2323" width="16" height="16"><path d="M822.811993 824.617989c-83.075838 81.99224-188.546032 124.613757-316.049383 127.86455-122.085362-3.250794-223.943563-45.87231-305.935802-127.86455s-124.613757-184.21164-127.86455-305.935802c3.250794-127.503351 45.87231-232.973545 127.86455-316.049383 81.99224-83.075838 184.21164-126.058554 305.935802-129.309347 127.503351 3.250794 232.973545 46.23351 316.049383 129.309347 83.075838 83.075838 126.058554 188.546032 129.309347 316.049383C949.231746 640.406349 905.887831 742.62575 822.811993 824.617989zM432.716755 684.111464c3.973192 3.973192 8.307584 5.779189 13.364374 6.140388 5.05679 0.361199 9.752381-1.444797 13.364374-5.417989l292.571429-287.514638c3.973192-3.973192 5.779189-8.307584 5.779189-13.364374 0-5.05679-1.805996-9.752381-5.779189-13.364374l1.805996 1.805996c-3.973192-3.973192-8.668783-5.779189-14.086772-6.140388-5.417989-0.361199-10.47478 1.444797-14.809171 5.417989l-264.397884 220.33157c-3.973192 3.250794-8.668783 4.695591-14.447972 4.695591-5.779189 0-10.835979-1.444797-15.53157-3.973192l-94.273016-72.962257c-4.334392-3.250794-9.391182-4.334392-14.447972-3.973192s-9.391182 3.250794-12.641975 7.585185l-2.889594 3.973192c-3.250794 4.334392-4.334392 9.391182-3.973192 14.809171 0.722399 5.417989 2.528395 10.11358 5.779189 14.086772L432.716755 684.111464z" p-id="2324"></path></svg>\n      </i>\n      <div class="text">'.concat(r,"</div>\n    "),this.containerEl.appendChild(i),o>0&&setTimeout((function(){e.close(i)}),o)}},{key:"close",value:function(n){n.className=n.className.replace("move-in",""),n.className+="move-out",n.addEventListener("animationend",(function(){n.remove()}))}}]),n}(),Le={mounted:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},updated:function(){!!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||this.updateCopy()},methods:{updateCopy:function(){var n=this;setTimeout((function(){(['div[class*="language-"] pre','div[class*="aside-code"] aside']instanceof Array||Array.isArray(['div[class*="language-"] pre','div[class*="aside-code"] aside']))&&['div[class*="language-"] pre','div[class*="aside-code"] aside'].forEach((function(e){document.querySelectorAll(e).forEach(n.generateCopyButton)}))}),1e3)},generateCopyButton:function(n){var e=this;if(!n.classList.contains("codecopy-enabled")){var t=document.createElement("i");t.className="code-copy",t.innerHTML='<svg  style="color:#aaa;font-size:14px" t="1572422231464" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3201" width="14" height="14"><path d="M866.461538 39.384615H354.461538c-43.323077 0-78.769231 35.446154-78.76923 78.769231v39.384616h472.615384c43.323077 0 78.769231 35.446154 78.769231 78.76923v551.384616h39.384615c43.323077 0 78.769231-35.446154 78.769231-78.769231V118.153846c0-43.323077-35.446154-78.769231-78.769231-78.769231z m-118.153846 275.692308c0-43.323077-35.446154-78.769231-78.76923-78.769231H157.538462c-43.323077 0-78.769231 35.446154-78.769231 78.769231v590.769231c0 43.323077 35.446154 78.769231 78.769231 78.769231h512c43.323077 0 78.769231-35.446154 78.76923-78.769231V315.076923z m-354.461538 137.846154c0 11.815385-7.876923 19.692308-19.692308 19.692308h-157.538461c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h157.538461c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z m157.538461 315.076923c0 11.815385-7.876923 19.692308-19.692307 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h315.076923c11.815385 0 19.692308 7.876923 19.692307 19.692308v39.384615z m78.769231-157.538462c0 11.815385-7.876923 19.692308-19.692308 19.692308H216.615385c-11.815385 0-19.692308-7.876923-19.692308-19.692308v-39.384615c0-11.815385 7.876923-19.692308 19.692308-19.692308h393.846153c11.815385 0 19.692308 7.876923 19.692308 19.692308v39.384615z" p-id="3202"></path></svg>',t.title="Copy to clipboard",t.addEventListener("click",(function(){e.copyToClipboard(n.innerText)})),n.appendChild(t),n.classList.add("codecopy-enabled")}},copyToClipboard:function(n){var e=document.createElement("textarea");e.value=n,e.setAttribute("readonly",""),e.style.position="absolute",e.style.left="-9999px",document.body.appendChild(e);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);e.select(),document.execCommand("copy"),(new ze).show({text:"复制成功",duration:1e3}),document.body.removeChild(e),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))}}},De=(t(139),"auto"),Ne="zoom-in",Fe="zoom-out",Ve="grab",$e="move";function Ue(n,e,t){var r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a={passive:!1};r?n.addEventListener(e,t,a):n.removeEventListener(e,t,a)}function He(n,e){if(n){var t=new Image;t.onload=function(){e&&e(t)},t.src=n}}function Je(n){return n.dataset.original?n.dataset.original:"A"===n.parentNode.tagName?n.parentNode.getAttribute("href"):null}function We(n,e,t){!function(n){var e=Ge,t=Qe;if(n.transition){var r=n.transition;delete n.transition,n[e]=r}if(n.transform){var a=n.transform;delete n.transform,n[t]=a}}(e);var r=n.style,a={};for(var o in e)t&&(a[o]=r[o]||""),r[o]=e[o];return a}var Ge="transition",Qe="transform",Ke="transform",Ye="transitionend";var Ze=function(){},Xe={enableGrab:!0,preloadImage:!1,closeOnWindowResize:!0,transitionDuration:.4,transitionTimingFunction:"cubic-bezier(0.4, 0, 0, 1)",bgColor:"rgb(255, 255, 255)",bgOpacity:1,scaleBase:1,scaleExtra:.5,scrollThreshold:40,zIndex:998,customSize:null,onOpen:Ze,onClose:Ze,onGrab:Ze,onMove:Ze,onRelease:Ze,onBeforeOpen:Ze,onBeforeClose:Ze,onBeforeGrab:Ze,onBeforeRelease:Ze,onImageLoading:Ze,onImageLoaded:Ze},nt={init:function(n){var e,t;e=this,t=n,Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((function(n){e[n]=e[n].bind(t)}))},click:function(n){if(n.preventDefault(),tt(n))return window.open(this.target.srcOriginal||n.currentTarget.src,"_blank");this.shown?this.released?this.close():this.release():this.open(n.currentTarget)},scroll:function(){var n=document.documentElement||document.body.parentNode||document.body,e=window.pageXOffset||n.scrollLeft,t=window.pageYOffset||n.scrollTop;null===this.lastScrollPosition&&(this.lastScrollPosition={x:e,y:t});var r=this.lastScrollPosition.x-e,a=this.lastScrollPosition.y-t,o=this.options.scrollThreshold;(Math.abs(a)>=o||Math.abs(r)>=o)&&(this.lastScrollPosition=null,this.close())},keydown:function(n){(function(n){return"Escape"===(n.key||n.code)||27===n.keyCode})(n)&&(this.released?this.close():this.release(this.close))},mousedown:function(n){if(et(n)&&!tt(n)){n.preventDefault();var e=n.clientX,t=n.clientY;this.pressTimer=setTimeout(function(){this.grab(e,t)}.bind(this),200)}},mousemove:function(n){this.released||this.move(n.clientX,n.clientY)},mouseup:function(n){et(n)&&!tt(n)&&(clearTimeout(this.pressTimer),this.released?this.close():this.release())},touchstart:function(n){n.preventDefault();var e=n.touches[0],t=e.clientX,r=e.clientY;this.pressTimer=setTimeout(function(){this.grab(t,r)}.bind(this),200)},touchmove:function(n){if(!this.released){var e=n.touches[0],t=e.clientX,r=e.clientY;this.move(t,r)}},touchend:function(n){(function(n){n.targetTouches.length})(n)||(clearTimeout(this.pressTimer),this.released?this.close():this.release())},clickOverlay:function(){this.close()},resizeWindow:function(){this.close()}};function et(n){return 0===n.button}function tt(n){return n.metaKey||n.ctrlKey}var rt={init:function(n){this.el=document.createElement("div"),this.instance=n,this.parent=document.body,We(this.el,{position:"fixed",top:0,left:0,right:0,bottom:0,opacity:0}),this.updateStyle(n.options),Ue(this.el,"click",n.handler.clickOverlay.bind(n))},updateStyle:function(n){We(this.el,{zIndex:n.zIndex,backgroundColor:n.bgColor,transition:"opacity\n        "+n.transitionDuration+"s\n        "+n.transitionTimingFunction})},insert:function(){this.parent.appendChild(this.el)},remove:function(){this.parent.removeChild(this.el)},fadeIn:function(){this.el.offsetWidth,this.el.style.opacity=this.instance.options.bgOpacity},fadeOut:function(){this.el.style.opacity=0}},at="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},ot=function(){function n(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,r.key,r)}}return function(e,t,r){return t&&n(e.prototype,t),r&&n(e,r),e}}(),it=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},st={init:function(n,e){this.el=n,this.instance=e,this.srcThumbnail=this.el.getAttribute("src"),this.srcset=this.el.getAttribute("srcset"),this.srcOriginal=Je(this.el),this.rect=this.el.getBoundingClientRect(),this.translate=null,this.scale=null,this.styleOpen=null,this.styleClose=null},zoomIn:function(){var n=this.instance.options,e=n.zIndex,t=n.enableGrab,r=n.transitionDuration,a=n.transitionTimingFunction;this.translate=this.calculateTranslate(),this.scale=this.calculateScale(),this.styleOpen={position:"relative",zIndex:e+1,cursor:t?Ve:Fe,transition:Ke+"\n        "+r+"s\n        "+a,transform:"translate3d("+this.translate.x+"px, "+this.translate.y+"px, 0px)\n        scale("+this.scale.x+","+this.scale.y+")",height:this.rect.height+"px",width:this.rect.width+"px"},this.el.offsetWidth,this.styleClose=We(this.el,this.styleOpen,!0)},zoomOut:function(){this.el.offsetWidth,We(this.el,{transform:"none"})},grab:function(n,e,t){var r=lt(),a=r.x-n,o=r.y-e;We(this.el,{cursor:$e,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+o)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},move:function(n,e,t){var r=lt(),a=r.x-n,o=r.y-e;We(this.el,{transition:Ke,transform:"translate3d(\n        "+(this.translate.x+a)+"px, "+(this.translate.y+o)+"px, 0px)\n        scale("+(this.scale.x+t)+","+(this.scale.y+t)+")"})},restoreCloseStyle:function(){We(this.el,this.styleClose)},restoreOpenStyle:function(){We(this.el,this.styleOpen)},upgradeSource:function(){if(this.srcOriginal){var n=this.el.parentNode;this.srcset&&this.el.removeAttribute("srcset");var e=this.el.cloneNode(!1);e.setAttribute("src",this.srcOriginal),e.style.position="fixed",e.style.visibility="hidden",n.appendChild(e),setTimeout(function(){this.el.setAttribute("src",this.srcOriginal),n.removeChild(e)}.bind(this),50)}},downgradeSource:function(){this.srcOriginal&&(this.srcset&&this.el.setAttribute("srcset",this.srcset),this.el.setAttribute("src",this.srcThumbnail))},calculateTranslate:function(){var n=lt(),e=this.rect.left+this.rect.width/2,t=this.rect.top+this.rect.height/2;return{x:n.x-e,y:n.y-t}},calculateScale:function(){var n=this.el.dataset,e=n.zoomingHeight,t=n.zoomingWidth,r=this.instance.options,a=r.customSize,o=r.scaleBase;if(!a&&e&&t)return{x:t/this.rect.width,y:e/this.rect.height};if(a&&"object"===(void 0===a?"undefined":at(a)))return{x:a.width/this.rect.width,y:a.height/this.rect.height};var i=this.rect.width/2,s=this.rect.height/2,l=lt(),c={x:l.x-i,y:l.y-s},p=c.x/i,u=c.y/s,d=o+Math.min(p,u);if(a&&"string"==typeof a){var m=t||this.el.naturalWidth,f=e||this.el.naturalHeight,g=parseFloat(a)*m/(100*this.rect.width),h=parseFloat(a)*f/(100*this.rect.height);if(d>g||d>h)return{x:g,y:h}}return{x:d,y:d}}};function lt(){var n=document.documentElement;return{x:Math.min(n.clientWidth,window.innerWidth)/2,y:Math.min(n.clientHeight,window.innerHeight)/2}}function ct(n,e,t){["mousedown","mousemove","mouseup","touchstart","touchmove","touchend"].forEach((function(r){Ue(n,r,e[r],t)}))}var pt=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.target=Object.create(st),this.overlay=Object.create(rt),this.handler=Object.create(nt),this.body=document.body,this.shown=!1,this.lock=!1,this.released=!0,this.lastScrollPosition=null,this.pressTimer=null,this.options=it({},Xe,e),this.overlay.init(this),this.handler.init(this)}return ot(n,[{key:"listen",value:function(n){if("string"==typeof n)for(var e=document.querySelectorAll(n),t=e.length;t--;)this.listen(e[t]);else"IMG"===n.tagName&&(n.style.cursor=Ne,Ue(n,"click",this.handler.click),this.options.preloadImage&&He(Je(n)));return this}},{key:"config",value:function(n){return n?(it(this.options,n),this.overlay.updateStyle(this.options),this):this.options}},{key:"open",value:function(n){var e=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.options.onOpen;if(!this.shown&&!this.lock){var r="string"==typeof n?document.querySelector(n):n;if("IMG"===r.tagName){if(this.options.onBeforeOpen(r),this.target.init(r,this),!this.options.preloadImage){var a=this.target.srcOriginal;null!=a&&(this.options.onImageLoading(r),He(a,this.options.onImageLoaded))}this.shown=!0,this.lock=!0,this.target.zoomIn(),this.overlay.insert(),this.overlay.fadeIn(),Ue(document,"scroll",this.handler.scroll),Ue(document,"keydown",this.handler.keydown),this.options.closeOnWindowResize&&Ue(window,"resize",this.handler.resizeWindow);var o=function n(){Ue(r,Ye,n,!1),e.lock=!1,e.target.upgradeSource(),e.options.enableGrab&&ct(document,e.handler,!0),t(r)};return Ue(r,Ye,o),this}}}},{key:"close",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onClose;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeClose(t),this.lock=!0,this.body.style.cursor=De,this.overlay.fadeOut(),this.target.zoomOut(),Ue(document,"scroll",this.handler.scroll,!1),Ue(document,"keydown",this.handler.keydown,!1),this.options.closeOnWindowResize&&Ue(window,"resize",this.handler.resizeWindow,!1);var r=function r(){Ue(t,Ye,r,!1),n.shown=!1,n.lock=!1,n.target.downgradeSource(),n.options.enableGrab&&ct(document,n.handler,!1),n.target.restoreCloseStyle(),n.overlay.remove(),e(t)};return Ue(t,Ye,r),this}}},{key:"grab",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onGrab;if(this.shown&&!this.lock){var a=this.target.el;this.options.onBeforeGrab(a),this.released=!1,this.target.grab(n,e,t);var o=function n(){Ue(a,Ye,n,!1),r(a)};return Ue(a,Ye,o),this}}},{key:"move",value:function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.options.scaleExtra,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this.options.onMove;if(this.shown&&!this.lock){this.released=!1,this.body.style.cursor=$e,this.target.move(n,e,t);var a=this.target.el,o=function n(){Ue(a,Ye,n,!1),r(a)};return Ue(a,Ye,o),this}}},{key:"release",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.options.onRelease;if(this.shown&&!this.lock){var t=this.target.el;this.options.onBeforeRelease(t),this.lock=!0,this.body.style.cursor=De,this.target.restoreOpenStyle();var r=function r(){Ue(t,Ye,r,!1),n.lock=!1,n.released=!0,e(t)};return Ue(t,Ye,r),this}}}]),n}(),ut=".theme-vdoing-content img:not(.no-zoom)",dt=JSON.parse('{"bgColor":"rgba(0,0,0,0.6)"}'),mt=Number("500"),ft=function(){function n(){Re(this,n),this.instance=new pt(dt)}return qe(n,[{key:"update",value:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ut;"undefined"!=typeof window&&this.instance.listen(n)}},{key:"updateDelay",value:function(){var n=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:ut,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:mt;setTimeout((function(){return n.update(e)}),t)}}]),n}(),gt=[Ee,Me,Pe,Le,{watch:{"$page.path":function(){void 0!==this.$vuepress.zooming&&this.$vuepress.zooming.updateDelay()}},mounted:function(){this.$vuepress.zooming=new ft,this.$vuepress.zooming.updateDelay()}}],ht={name:"GlobalLayout",computed:{layout:function(){var n=this.getLayout();return ye("layout",n),a.default.component(n)}},methods:{getLayout:function(){if(this.$page.path){var n=this.$page.frontmatter.layout;return n&&(this.$vuepress.getLayoutAsyncComponent(n)||this.$vuepress.getVueComponent(n))?n:"Layout"}return"NotFound"}}},vt=t(16),yt=Object(vt.a)(ht,(function(){var n=this.$createElement;return(this._self._c||n)(this.layout,{tag:"component"})}),[],!1,null,null,null).exports;!function(n,e,t){var r;switch(e){case"components":n[e]||(n[e]={}),Object.assign(n[e],t);break;case"mixins":n[e]||(n[e]=[]),(r=n[e]).push.apply(r,Object(Zn.a)(t));break;default:throw new Error("Unknown option name.")}}(yt,"mixins",gt);var bt=[{name:"v-7e589802",path:"/pages/380bfa/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-7e589802").then(t)}},{path:"/pages/380bfa/index.html",redirect:"/pages/380bfa/"},{path:"/11.前端/15.CSS/20.CSS常用效果.html",redirect:"/pages/380bfa/"},{name:"v-471855f4",path:"/pages/862342/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-471855f4").then(t)}},{path:"/pages/862342/index.html",redirect:"/pages/862342/"},{path:"/11.前端/15.CSS/10.CSS快速上手.html",redirect:"/pages/862342/"},{name:"v-3a688953",path:"/pages/9dedc8/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-3a688953").then(t)}},{path:"/pages/9dedc8/index.html",redirect:"/pages/9dedc8/"},{path:"/11.前端/25.Vue/10.Vue.html",redirect:"/pages/9dedc8/"},{name:"v-f931e64c",path:"/pages/69d591/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-f931e64c").then(t)}},{path:"/pages/69d591/index.html",redirect:"/pages/69d591/"},{path:"/11.前端/10.HTML/10.html快速上手.html",redirect:"/pages/69d591/"},{name:"v-34be8741",path:"/pages/ec02d8/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-34be8741").then(t)}},{path:"/pages/ec02d8/index.html",redirect:"/pages/ec02d8/"},{path:"/11.前端/25.Vue/20.Vue3.html",redirect:"/pages/ec02d8/"},{name:"v-8e88dc58",path:"/pages/dbd4b7/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-8e88dc58").then(t)}},{path:"/pages/dbd4b7/index.html",redirect:"/pages/dbd4b7/"},{path:"/11.前端/23.ES6/10.ES6快速上手.html",redirect:"/pages/dbd4b7/"},{name:"v-2fc728ba",path:"/pages/1257a3/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-2fc728ba").then(t)}},{path:"/pages/1257a3/index.html",redirect:"/pages/1257a3/"},{path:"/11.前端/30.Element-UI/10.快速上手.html",redirect:"/pages/1257a3/"},{name:"v-4f57980c",path:"/pages/0e295d/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-4f57980c").then(t)}},{path:"/pages/0e295d/index.html",redirect:"/pages/0e295d/"},{path:"/11.前端/20.JavaScript/10.js快速上手.html",redirect:"/pages/0e295d/"},{name:"v-0069db8e",path:"/pages/e743fe/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-0069db8e").then(t)}},{path:"/pages/e743fe/index.html",redirect:"/pages/e743fe/"},{path:"/11.前端/40.yarn/10.yarn.html",redirect:"/pages/e743fe/"},{name:"v-b57eb2de",path:"/pages/b9d355/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-b57eb2de").then(t)}},{path:"/pages/b9d355/index.html",redirect:"/pages/b9d355/"},{path:"/20.Java/10.Java基础/10.异常处理.html",redirect:"/pages/b9d355/"},{name:"v-29486e54",path:"/pages/7038b1/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-29486e54").then(t)}},{path:"/pages/7038b1/index.html",redirect:"/pages/7038b1/"},{path:"/11.前端/45.webpack/10.webpack快速上手.html",redirect:"/pages/7038b1/"},{name:"v-17b68674",path:"/pages/e422a2/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-17b68674").then(t)}},{path:"/pages/e422a2/index.html",redirect:"/pages/e422a2/"},{path:"/20.Java/30.Java线程/10.前置知识.html",redirect:"/pages/e422a2/"},{name:"v-9d058b4e",path:"/pages/23a0a3/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-9d058b4e").then(t)}},{path:"/pages/23a0a3/index.html",redirect:"/pages/23a0a3/"},{path:"/20.Java/40.Java8新特性/15.lambda演化之旅.html",redirect:"/pages/23a0a3/"},{name:"v-e974bd18",path:"/pages/e4d55d/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-e974bd18").then(t)}},{path:"/pages/e4d55d/index.html",redirect:"/pages/e4d55d/"},{path:"/20.Java/40.Java8新特性/10.lambda表达式.html",redirect:"/pages/e4d55d/"},{name:"v-4a35e8e8",path:"/pages/01a53c/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-4a35e8e8").then(t)}},{path:"/pages/01a53c/index.html",redirect:"/pages/01a53c/"},{path:"/20.Java/40.Java8新特性/25.StreamAPI.html",redirect:"/pages/01a53c/"},{name:"v-5ef541de",path:"/pages/fc50b7/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-5ef541de").then(t)}},{path:"/pages/fc50b7/index.html",redirect:"/pages/fc50b7/"},{path:"/20.Java/40.Java8新特性/20.常见函数式接口.html",redirect:"/pages/fc50b7/"},{name:"v-64e809bf",path:"/pages/c1c484/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-64e809bf").then(t)}},{path:"/pages/c1c484/index.html",redirect:"/pages/c1c484/"},{path:"/23.Go/10.GoHW.html",redirect:"/pages/c1c484/"},{name:"v-069e0ca2",path:"/pages/b19c02/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-069e0ca2").then(t)}},{path:"/pages/b19c02/index.html",redirect:"/pages/b19c02/"},{path:"/20.Java/60.Java源码记录/10.字符串相关.html",redirect:"/pages/b19c02/"},{name:"v-5bee6a51",path:"/pages/fd06c0/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-5bee6a51").then(t)}},{path:"/pages/fd06c0/index.html",redirect:"/pages/fd06c0/"},{path:"/25.数据库/10.MySQL/10.MySQL基础.html",redirect:"/pages/fd06c0/"},{name:"v-5fd909e1",path:"/pages/2b5d14/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-5fd909e1").then(t)}},{path:"/pages/2b5d14/index.html",redirect:"/pages/2b5d14/"},{path:"/25.数据库/10.MySQL/40.数据库设计规范.html",redirect:"/pages/2b5d14/"},{name:"v-bcb67630",path:"/pages/ff7d53/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-bcb67630").then(t)}},{path:"/pages/ff7d53/index.html",redirect:"/pages/ff7d53/"},{path:"/20.Java/60.Java源码记录/20.Stream.html",redirect:"/pages/ff7d53/"},{name:"v-7ee600f6",path:"/pages/659d0f/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-7ee600f6").then(t)}},{path:"/pages/659d0f/index.html",redirect:"/pages/659d0f/"},{path:"/25.数据库/10.MySQL/20.MySQL进阶.html",redirect:"/pages/659d0f/"},{name:"v-84907370",path:"/pages/454bc7/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-84907370").then(t)}},{path:"/pages/454bc7/index.html",redirect:"/pages/454bc7/"},{path:"/25.数据库/10.MySQL/30.索引失效.html",redirect:"/pages/454bc7/"},{name:"v-29b94478",path:"/pages/79ebd4/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-29b94478").then(t)}},{path:"/pages/79ebd4/index.html",redirect:"/pages/79ebd4/"},{path:"/25.数据库/10.MySQL/50.MySQL事务.html",redirect:"/pages/79ebd4/"},{name:"v-3fa1c972",path:"/pages/7e8569/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-3fa1c972").then(t)}},{path:"/pages/7e8569/index.html",redirect:"/pages/7e8569/"},{path:"/25.数据库/20.Redis/10.redis安装启动.html",redirect:"/pages/7e8569/"},{name:"v-aa7a79d0",path:"/pages/77a99b/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-aa7a79d0").then(t)}},{path:"/pages/77a99b/index.html",redirect:"/pages/77a99b/"},{path:"/25.数据库/20.Redis/20.redis知识点.html",redirect:"/pages/77a99b/"},{name:"v-383ff026",path:"/pages/179208/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-383ff026").then(t)}},{path:"/pages/179208/index.html",redirect:"/pages/179208/"},{path:"/25.数据库/20.Redis/30.redis整合Springboot.html",redirect:"/pages/179208/"},{name:"v-69e8ae2a",path:"/pages/7c9b4b/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-69e8ae2a").then(t)}},{path:"/pages/7c9b4b/index.html",redirect:"/pages/7c9b4b/"},{path:"/25.数据库/30.MongoDB/10.MongoDB.html",redirect:"/pages/7c9b4b/"},{name:"v-0a14c254",path:"/pages/2fef79/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-0a14c254").then(t)}},{path:"/pages/2fef79/index.html",redirect:"/pages/2fef79/"},{path:"/25.数据库/20.Redis/40.redis常用命令.html",redirect:"/pages/2fef79/"},{name:"v-b51269ae",path:"/pages/3bb24f/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-b51269ae").then(t)}},{path:"/pages/3bb24f/index.html",redirect:"/pages/3bb24f/"},{path:"/25.数据库/30.MongoDB/20.MongoDB整合SpringBoot.html",redirect:"/pages/3bb24f/"},{name:"v-28e5f514",path:"/pages/1b0d2d/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-28e5f514").then(t)}},{path:"/pages/1b0d2d/index.html",redirect:"/pages/1b0d2d/"},{path:"/35.Spring系列/10.Spring/20.常用注解.html",redirect:"/pages/1b0d2d/"},{name:"v-c61b991a",path:"/pages/a34c22/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-c61b991a").then(t)}},{path:"/pages/a34c22/index.html",redirect:"/pages/a34c22/"},{path:"/25.数据库/30.MongoDB/30.MongoDB应用场景.html",redirect:"/pages/a34c22/"},{name:"v-7d1c09d6",path:"/pages/7b798f/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-7d1c09d6").then(t)}},{path:"/pages/7b798f/index.html",redirect:"/pages/7b798f/"},{path:"/35.Spring系列/10.Spring/30.早期xml配置.html",redirect:"/pages/7b798f/"},{name:"v-00ec27bb",path:"/pages/a9e167/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-00ec27bb").then(t)}},{path:"/pages/a9e167/index.html",redirect:"/pages/a9e167/"},{path:"/35.Spring系列/10.Spring/40.源码分析.html",redirect:"/pages/a9e167/"},{name:"v-0cb1234b",path:"/pages/a832bb/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-0cb1234b").then(t)}},{path:"/pages/a832bb/index.html",redirect:"/pages/a832bb/"},{path:"/35.Spring系列/10.Spring/10.Spring笔记.html",redirect:"/pages/a832bb/"},{name:"v-e71b2536",path:"/pages/8a16ee/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-e71b2536").then(t)}},{path:"/pages/8a16ee/index.html",redirect:"/pages/8a16ee/"},{path:"/35.Spring系列/10.Spring/50.源码备注.html",redirect:"/pages/8a16ee/"},{name:"v-54c34bd8",path:"/pages/89cf77/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-54c34bd8").then(t)}},{path:"/pages/89cf77/index.html",redirect:"/pages/89cf77/"},{path:"/35.Spring系列/20.SpringMVC/20.常用注解.html",redirect:"/pages/89cf77/"},{name:"v-efed3fb6",path:"/pages/35de30/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-efed3fb6").then(t)}},{path:"/pages/35de30/index.html",redirect:"/pages/35de30/"},{path:"/35.Spring系列/20.SpringMVC/10.SpringMVC笔记.html",redirect:"/pages/35de30/"},{name:"v-63b96b96",path:"/pages/d803de/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-63b96b96").then(t)}},{path:"/pages/d803de/index.html",redirect:"/pages/d803de/"},{path:"/35.Spring系列/30.SpringBoot/10Springboot如何运行.html",redirect:"/pages/d803de/"},{name:"v-6bd8a556",path:"/pages/5eb237/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-6bd8a556").then(t)}},{path:"/pages/5eb237/index.html",redirect:"/pages/5eb237/"},{path:"/35.Spring系列/30.SpringBoot/30.常用注解.html",redirect:"/pages/5eb237/"},{name:"v-48a7f63f",path:"/pages/87a76e/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-48a7f63f").then(t)}},{path:"/pages/87a76e/index.html",redirect:"/pages/87a76e/"},{path:"/35.Spring系列/30.SpringBoot/20.Springboot基础配置.html",redirect:"/pages/87a76e/"},{name:"v-7f98913b",path:"/pages/e37732/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-7f98913b").then(t)}},{path:"/pages/e37732/index.html",redirect:"/pages/e37732/"},{path:"/35.Spring系列/30.SpringBoot/40.源码分析.html",redirect:"/pages/e37732/"},{name:"v-67c86f9c",path:"/pages/8e5ec8/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-67c86f9c").then(t)}},{path:"/pages/8e5ec8/index.html",redirect:"/pages/8e5ec8/"},{path:"/35.Spring系列/40.源码速查/10.Transactiona事务注解.html",redirect:"/pages/8e5ec8/"},{name:"v-15a97d63",path:"/pages/5c205b/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-15a97d63").then(t)}},{path:"/pages/5c205b/index.html",redirect:"/pages/5c205b/"},{path:"/37.ORM框架/10.Mybatis/10.JDBC&SQL注入.html",redirect:"/pages/5c205b/"},{name:"v-667b9d14",path:"/pages/ec2247/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-667b9d14").then(t)}},{path:"/pages/ec2247/index.html",redirect:"/pages/ec2247/"},{path:"/38.其他框架/10.文件处理/10.EasyExcel.html",redirect:"/pages/ec2247/"},{name:"v-9f0513de",path:"/pages/4e88d5/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-9f0513de").then(t)}},{path:"/pages/4e88d5/index.html",redirect:"/pages/4e88d5/"},{path:"/37.ORM框架/15.Mybatis-Plus/10.MyBatis-Plus常用操作.html",redirect:"/pages/4e88d5/"},{name:"v-24476194",path:"/pages/374a76/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-24476194").then(t)}},{path:"/pages/374a76/index.html",redirect:"/pages/374a76/"},{path:"/40.工具-构建部署/20.Maven/10.Maven常用总结.html",redirect:"/pages/374a76/"},{name:"v-4717db20",path:"/pages/4a375c/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-4717db20").then(t)}},{path:"/pages/4a375c/index.html",redirect:"/pages/4a375c/"},{path:"/40.工具-构建部署/10.Git/10.git多账号ssh免密登录.html",redirect:"/pages/4a375c/"},{name:"v-241511aa",path:"/pages/711d35/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-241511aa").then(t)}},{path:"/pages/711d35/index.html",redirect:"/pages/711d35/"},{path:"/40.工具-构建部署/30.Linux/10.CentOS7相关配置.html",redirect:"/pages/711d35/"},{name:"v-522bd708",path:"/pages/87e646/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-522bd708").then(t)}},{path:"/pages/87e646/index.html",redirect:"/pages/87e646/"},{path:"/40.工具-构建部署/30.Linux/15.环境变量.html",redirect:"/pages/87e646/"},{name:"v-597c1aba",path:"/pages/b78243/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-597c1aba").then(t)}},{path:"/pages/b78243/index.html",redirect:"/pages/b78243/"},{path:"/40.工具-构建部署/30.Linux/30.Vim.html",redirect:"/pages/b78243/"},{name:"v-1c48e214",path:"/pages/80ad7f/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-1c48e214").then(t)}},{path:"/pages/80ad7f/index.html",redirect:"/pages/80ad7f/"},{path:"/40.工具-构建部署/30.Linux/20.常用命令.html",redirect:"/pages/80ad7f/"},{name:"v-35d3a620",path:"/pages/118379/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-35d3a620").then(t)}},{path:"/pages/118379/index.html",redirect:"/pages/118379/"},{path:"/40.工具-构建部署/40.Docker/10.Docker安装使用.html",redirect:"/pages/118379/"},{name:"v-88904f4c",path:"/pages/368a0b/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-88904f4c").then(t)}},{path:"/pages/368a0b/index.html",redirect:"/pages/368a0b/"},{path:"/40.工具-构建部署/40.Docker/20.Docker开发环境搭建.html",redirect:"/pages/368a0b/"},{name:"v-5a4aad80",path:"/pages/3510a2/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-5a4aad80").then(t)}},{path:"/pages/3510a2/index.html",redirect:"/pages/3510a2/"},{path:"/40.工具-构建部署/40.Docker/50.Docker参考.html",redirect:"/pages/3510a2/"},{name:"v-06288b74",path:"/pages/d1300e/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-06288b74").then(t)}},{path:"/pages/d1300e/index.html",redirect:"/pages/d1300e/"},{path:"/42.工具-开发调试/10.IDEA/10.常用快捷键.html",redirect:"/pages/d1300e/"},{name:"v-6c40d3e8",path:"/pages/5451e7/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-6c40d3e8").then(t)}},{path:"/pages/5451e7/index.html",redirect:"/pages/5451e7/"},{path:"/42.工具-开发调试/20.VScode/10.VScode常用操作.html",redirect:"/pages/5451e7/"},{name:"v-8815005e",path:"/pages/70fee8/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-8815005e").then(t)}},{path:"/pages/70fee8/index.html",redirect:"/pages/70fee8/"},{path:"/42.工具-开发调试/10.IDEA/20.idea插件市场.html",redirect:"/pages/70fee8/"},{name:"v-6d67b5e6",path:"/pages/155967/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-6d67b5e6").then(t)}},{path:"/pages/155967/index.html",redirect:"/pages/155967/"},{path:"/42.工具-开发调试/30.Swagger2/10.快速上手.html",redirect:"/pages/155967/"},{name:"v-17188e2e",path:"/pages/78eaba/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-17188e2e").then(t)}},{path:"/pages/78eaba/index.html",redirect:"/pages/78eaba/"},{path:"/43.工具-网络&其他/10.计算机网络/10.计算机网络.html",redirect:"/pages/78eaba/"},{name:"v-3a50b66b",path:"/pages/812a25/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-3a50b66b").then(t)}},{path:"/pages/812a25/index.html",redirect:"/pages/812a25/"},{path:"/50.关于/02.经验之谈/分类表设计.html",redirect:"/pages/812a25/"},{name:"v-4db62294",path:"/pages/c027ac/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-4db62294").then(t)}},{path:"/pages/c027ac/index.html",redirect:"/pages/c027ac/"},{path:"/43.工具-网络&其他/30.设计模式/10.设计模式总结.html",redirect:"/pages/c027ac/"},{name:"v-1a195796",path:"/pages/288e51/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-1a195796").then(t)}},{path:"/pages/288e51/index.html",redirect:"/pages/288e51/"},{path:"/50.关于/02.经验之谈/电商类项目分析.html",redirect:"/pages/288e51/"},{name:"v-6f4bd572",path:"/pages/5b9d1b/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-6f4bd572").then(t)}},{path:"/pages/5b9d1b/index.html",redirect:"/pages/5b9d1b/"},{path:"/50.关于/02.经验之谈/项目搭建流程.html",redirect:"/pages/5b9d1b/"},{name:"v-f61f7974",path:"/pages/46344d/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-f61f7974").then(t)}},{path:"/pages/46344d/index.html",redirect:"/pages/46344d/"},{path:"/50.关于/10.好用利器/10.你真的会搜索吗？.html",redirect:"/pages/46344d/"},{name:"v-23017f8c",path:"/pages/d3fb30/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-23017f8c").then(t)}},{path:"/pages/d3fb30/index.html",redirect:"/pages/d3fb30/"},{path:"/50.关于/10.好用利器/30.Markdown语法.html",redirect:"/pages/d3fb30/"},{name:"v-5a7e7158",path:"/pages/0e2db5/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-5a7e7158").then(t)}},{path:"/pages/0e2db5/index.html",redirect:"/pages/0e2db5/"},{path:"/50.关于/20.细读文章/30.Go未来所趋③.html",redirect:"/pages/0e2db5/"},{name:"v-6db702af",path:"/pages/d744a1/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-6db702af").then(t)}},{path:"/pages/d744a1/index.html",redirect:"/pages/d744a1/"},{path:"/50.关于/10.好用利器/20.Typora.html",redirect:"/pages/d744a1/"},{name:"v-5508f0ba",path:"/pages/2c260b/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-5508f0ba").then(t)}},{path:"/pages/2c260b/index.html",redirect:"/pages/2c260b/"},{path:"/50.关于/20.细读文章/10.细读文章①.html",redirect:"/pages/2c260b/"},{name:"v-f58aebf0",path:"/pages/11a8fe/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-f58aebf0").then(t)}},{path:"/pages/11a8fe/index.html",redirect:"/pages/11a8fe/"},{path:"/50.关于/20.细读文章/20.关于微服务②.html",redirect:"/pages/11a8fe/"},{name:"v-ed639c18",path:"/pages/715be6/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-ed639c18").then(t)}},{path:"/pages/715be6/index.html",redirect:"/pages/715be6/"},{path:"/50.关于/25.想起来了/20.小问题记录一下.html",redirect:"/pages/715be6/"},{name:"v-027e22d1",path:"/pages/54eb0a/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-027e22d1").then(t)}},{path:"/pages/54eb0a/index.html",redirect:"/pages/54eb0a/"},{path:"/50.关于/25.想起来了/10.随便写写.html",redirect:"/pages/54eb0a/"},{name:"v-7832c0a0",path:"/pages/e78cf8/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-7832c0a0").then(t)}},{path:"/pages/e78cf8/index.html",redirect:"/pages/e78cf8/"},{path:"/50.关于/25.想起来了/30.如何解决跨域问题.html",redirect:"/pages/e78cf8/"},{name:"v-3d8d6032",path:"/pages/a0d2c8/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-3d8d6032").then(t)}},{path:"/pages/a0d2c8/index.html",redirect:"/pages/a0d2c8/"},{path:"/50.关于/25.想起来了/40.接收map集合数据.html",redirect:"/pages/a0d2c8/"},{name:"v-ca31da4e",path:"/blog/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-ca31da4e").then(t)}},{path:"/blog/index.html",redirect:"/blog/"},{path:"/@pages/archivesPage.html",redirect:"/blog/"},{name:"v-457f4439",path:"/categories/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-457f4439").then(t)}},{path:"/categories/index.html",redirect:"/categories/"},{path:"/@pages/categoriesPage.html",redirect:"/categories/"},{name:"v-2a230c59",path:"/tags/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-2a230c59").then(t)}},{path:"/tags/index.html",redirect:"/tags/"},{path:"/@pages/tagsPage.html",redirect:"/tags/"},{name:"v-53fe3f05",path:"/",component:yt,beforeEnter:function(n,e,t){ve("Layout","v-53fe3f05").then(t)}},{path:"/index.html",redirect:"/"},{path:"*",component:yt}],xt={title:"viki",description:"viki`s blog",base:"/",headTags:[["link",{rel:"icon",href:"/img/logo2.jpg"}],["meta",{name:"keywords",content:"vuepress,theme,blog,vdoing"}],["meta",{name:"theme-color",content:"#11a8cd"}]],pages:[{title:"CSS常用效果",frontmatter:{title:"CSS常用效果",date:"2022-02-01T15:26:00.000Z",permalink:"/pages/380bfa/",categories:["前端","CSS"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/15.CSS/20.CSS%E5%B8%B8%E7%94%A8%E6%95%88%E6%9E%9C.html",relativePath:"11.前端/15.CSS/20.CSS常用效果.md",key:"v-7e589802",path:"/pages/380bfa/",headers:[{level:2,title:"纯CSS实现毛玻璃效果",slug:"纯css实现毛玻璃效果",normalizedTitle:"纯css实现毛玻璃效果",charIndex:2}],headersStr:"纯CSS实现毛玻璃效果",content:"# 纯CSS实现毛玻璃效果\n\n参考文章\n\n小技巧！用 CSS 滤镜实现毛玻璃效果探讨\n\n//在文字顶部j\nfilter: blur(20px);\n//给文字底部加上毛玻璃效果\nbackdrop-filter: blur(20px);\n\n\n1\n2\n3\n4\n",normalizedContent:"# 纯css实现毛玻璃效果\n\n参考文章\n\n小技巧！用 css 滤镜实现毛玻璃效果探讨\n\n//在文字顶部j\nfilter: blur(20px);\n//给文字底部加上毛玻璃效果\nbackdrop-filter: blur(20px);\n\n\n1\n2\n3\n4\n",charsets:{cjk:!0}},{title:"CSS基础",frontmatter:{title:"CSS基础",date:"2022-01-16T12:00:36.000Z",permalink:"/pages/862342/",categories:["前端","CSS"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/15.CSS/10.CSS%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"11.前端/15.CSS/10.CSS快速上手.md",key:"v-471855f4",path:"/pages/862342/",headers:[{level:2,title:"CSS学习参考网站",slug:"css学习参考网站",normalizedTitle:"css学习参考网站",charIndex:14},{level:2,title:"CSS基本属性",slug:"css基本属性",normalizedTitle:"css基本属性",charIndex:78},{level:3,title:"文本属性",slug:"文本属性",normalizedTitle:"文本属性",charIndex:90},{level:3,title:"背景属性",slug:"背景属性",normalizedTitle:"背景属性",charIndex:398}],headersStr:"CSS学习参考网站 CSS基本属性 文本属性 背景属性",content:"# CSS基础语法\n\n\n# CSS学习参考网站\n\nhttps://developer.mozilla.org/zh-CN/docs/Web/CSS\n\n\n# CSS基本属性\n\n\n# 文本属性\n\n> 指定字体：font-family : value;\n> \n> 字体大小：font-size : value;\n> \n>  * px：像素\n>  * em：倍数\n> \n> 字体加粗：font-weight : normal/bold;\n> \n> 文本颜色：color : value;\n> \n> 文本排列：text-align : left/right/center;\n> \n> 文字修饰：text-decoration : none/underline;\n> \n> 行高：line-height : value;\n> \n> 首行文本缩进：text-indent : value （2em）;\n\n\n# 背景属性\n\n> background-color 设置元素的背景颜色。\n> \n> background-image 把图像设置为背景。\n> \n> background-repeat 设置背景图像的墙纸效果，是否及如何重复\n> \n>  * repeat：在垂直方向和水平方向重复，为重复值\n>  * repeat-x：仅在水平方向重复\n>  * repeat-y：仅在垂直方向重复\n>  * no-repeat：仅显示一次\n> \n> background-position 设置背景图像的起始位置\n> \n> 1：控制水平方向 x轴： 正值，向右移动； 负值，向左移动\n> \n> 2：控制垂直方向 y轴： 正值，向下移动； 负值，向上移动\n> \n> background-attachment 背景图像是否固定或者随着页面的其余部分滚动\n> \n>  * 默认值是 scroll：默认情况下，背景会随文档滚动\n>  * 可取值为 fixed：背景图像固定，并不会随着页面的其余部分滚动，常用于实现称为水印的图像",normalizedContent:"# css基础语法\n\n\n# css学习参考网站\n\nhttps://developer.mozilla.org/zh-cn/docs/web/css\n\n\n# css基本属性\n\n\n# 文本属性\n\n> 指定字体：font-family : value;\n> \n> 字体大小：font-size : value;\n> \n>  * px：像素\n>  * em：倍数\n> \n> 字体加粗：font-weight : normal/bold;\n> \n> 文本颜色：color : value;\n> \n> 文本排列：text-align : left/right/center;\n> \n> 文字修饰：text-decoration : none/underline;\n> \n> 行高：line-height : value;\n> \n> 首行文本缩进：text-indent : value （2em）;\n\n\n# 背景属性\n\n> background-color 设置元素的背景颜色。\n> \n> background-image 把图像设置为背景。\n> \n> background-repeat 设置背景图像的墙纸效果，是否及如何重复\n> \n>  * repeat：在垂直方向和水平方向重复，为重复值\n>  * repeat-x：仅在水平方向重复\n>  * repeat-y：仅在垂直方向重复\n>  * no-repeat：仅显示一次\n> \n> background-position 设置背景图像的起始位置\n> \n> 1：控制水平方向 x轴： 正值，向右移动； 负值，向左移动\n> \n> 2：控制垂直方向 y轴： 正值，向下移动； 负值，向上移动\n> \n> background-attachment 背景图像是否固定或者随着页面的其余部分滚动\n> \n>  * 默认值是 scroll：默认情况下，背景会随文档滚动\n>  * 可取值为 fixed：背景图像固定，并不会随着页面的其余部分滚动，常用于实现称为水印的图像",charsets:{cjk:!0}},{title:"Vue",frontmatter:{title:"Vue",date:"2022-01-16T16:18:34.000Z",permalink:"/pages/9dedc8/",categories:["前端","Vue"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/25.Vue/10.Vue.html",relativePath:"11.前端/25.Vue/10.Vue.md",key:"v-3a688953",path:"/pages/9dedc8/",headers:[{level:2,title:"Vue官网",slug:"vue官网",normalizedTitle:"vue官网",charIndex:12},{level:2,title:"Vue是什么？",slug:"vue是什么",normalizedTitle:"vue是什么？",charIndex:45},{level:2,title:"Vue实例",slug:"vue实例",normalizedTitle:"vue实例",charIndex:273},{level:3,title:"插值语法",slug:"插值语法",normalizedTitle:"插值语法",charIndex:322},{level:3,title:"指令语法",slug:"指令语法",normalizedTitle:"指令语法",charIndex:365},{level:2,title:"MVVM模型",slug:"mvvm模型",normalizedTitle:"mvvm模型",charIndex:587},{level:2,title:"Object.defineProperty",slug:"object-defineproperty",normalizedTitle:"object.defineproperty",charIndex:652}],headersStr:"Vue官网 Vue是什么？ Vue实例 插值语法 指令语法 MVVM模型 Object.defineProperty",content:'# Vue基础\n\n\n# Vue官网\n\nhttps://cn.vuejs.org/\n\n\n# Vue是什么？\n\nVue采用组件化模式开发，提高代码复用率，更好维护\n\n> 在.vue文件中写html，css，js代码\n\n\n\n声明式编码，让编码人员无需直接操作DOM，提高开发效率（区别命令式编码，手动操作DOM）\n\n使用虚拟DOM+Diff算法，提高DOM节点的复用率\n\n> 原生js需要拼串，数据一变，会产生很多冗余\n\n\n\n学习vue前置知识\n\nES6语法规范、ES6模块化、包管理器、原型、原型链、数组常用方法、axios、promise\n\n\n# Vue实例\n\n注意：一个Vue实例只能接管一个容器，一一对应\n\n使用CSS选择器进行绑定\n\n\n# 插值语法\n\n> 用于标签体中\n\n#插值表达式\n{{name}}\n\n\n1\n2\n\n\n\n# 指令语法\n\n> 用于标签属性，或者标签体内容，或者绑定事件\n\n> 关于双向绑定v-model不是所有属性都能作用，只能应用在表单类元素上\n\n#单向绑定 v-bind: 简写===> :\n<a v-bind:href="url">我是单向绑定链接</a>\n\n<a :href="url">我是单向绑定链接</a>\n\n#双向绑定 v-moudle: 简写===> \n#底层原理看P11\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# MVVM模型\n\nhttps://zh.wikipedia.org/wiki/MVVM\n\n只要是出现在VM模型中的都能调用\n\n\n# Object.defineProperty\n\n * getter\n * setter\n\n> 底层数据读取修改的底层原理，比如v-bind和v-model\n\nvm._data.name\n\n数据劫持',normalizedContent:'# vue基础\n\n\n# vue官网\n\nhttps://cn.vuejs.org/\n\n\n# vue是什么？\n\nvue采用组件化模式开发，提高代码复用率，更好维护\n\n> 在.vue文件中写html，css，js代码\n\n\n\n声明式编码，让编码人员无需直接操作dom，提高开发效率（区别命令式编码，手动操作dom）\n\n使用虚拟dom+diff算法，提高dom节点的复用率\n\n> 原生js需要拼串，数据一变，会产生很多冗余\n\n\n\n学习vue前置知识\n\nes6语法规范、es6模块化、包管理器、原型、原型链、数组常用方法、axios、promise\n\n\n# vue实例\n\n注意：一个vue实例只能接管一个容器，一一对应\n\n使用css选择器进行绑定\n\n\n# 插值语法\n\n> 用于标签体中\n\n#插值表达式\n{{name}}\n\n\n1\n2\n\n\n\n# 指令语法\n\n> 用于标签属性，或者标签体内容，或者绑定事件\n\n> 关于双向绑定v-model不是所有属性都能作用，只能应用在表单类元素上\n\n#单向绑定 v-bind: 简写===> :\n<a v-bind:href="url">我是单向绑定链接</a>\n\n<a :href="url">我是单向绑定链接</a>\n\n#双向绑定 v-moudle: 简写===> \n#底层原理看p11\n\n\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# mvvm模型\n\nhttps://zh.wikipedia.org/wiki/mvvm\n\n只要是出现在vm模型中的都能调用\n\n\n# object.defineproperty\n\n * getter\n * setter\n\n> 底层数据读取修改的底层原理，比如v-bind和v-model\n\nvm._data.name\n\n数据劫持',charsets:{cjk:!0}},{title:"html快速上手",frontmatter:{title:"html快速上手",date:"2022-01-21T21:21:25.000Z",permalink:"/pages/69d591/",categories:["前端","HTML"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/10.HTML/10.html%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"11.前端/10.HTML/10.html快速上手.md",key:"v-f931e64c",path:"/pages/69d591/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Vue3",frontmatter:{title:"Vue3",date:"2022-01-21T20:41:04.000Z",permalink:"/pages/ec02d8/",categories:["前端","Vue"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/25.Vue/20.Vue3.html",relativePath:"11.前端/25.Vue/20.Vue3.md",key:"v-34be8741",path:"/pages/ec02d8/",headers:[{level:2,title:"Vue3",slug:"vue3",normalizedTitle:"vue3",charIndex:2}],headersStr:"Vue3",content:"# Vue3\n\n官网是最优的教程\n\nVue3官网教程",normalizedContent:"# vue3\n\n官网是最优的教程\n\nvue3官网教程",charsets:{cjk:!0}},{title:"ES6快速上手",frontmatter:{title:"ES6快速上手",date:"2022-01-21T20:23:29.000Z",permalink:"/pages/dbd4b7/",categories:["前端","ES6"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/23.ES6/10.ES6%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"11.前端/23.ES6/10.ES6快速上手.md",key:"v-8e88dc58",path:"/pages/dbd4b7/",headers:[{level:2,title:"ECMAScript 6 简介",slug:"ecmascript-6-简介",normalizedTitle:"ecmascript 6 简介",charIndex:26},{level:2,title:"基本语法",slug:"基本语法",normalizedTitle:"基本语法",charIndex:965},{level:3,title:"1、let声明变量",slug:"_1、let声明变量",normalizedTitle:"1、let声明变量",charIndex:1034},{level:3,title:"2、const声明常量（只读变量）",slug:"_2、const声明常量-只读变量",normalizedTitle:"2、const声明常量（只读变量）",charIndex:1375},{level:3,title:"3、解构赋值",slug:"_3、解构赋值",normalizedTitle:"3、解构赋值",charIndex:1604},{level:3,title:"4、模板字符串",slug:"_4、模板字符串",normalizedTitle:"4、模板字符串",charIndex:2068},{level:3,title:"5、声明对象简写",slug:"_5、声明对象简写",normalizedTitle:"5、声明对象简写",charIndex:2659},{level:3,title:"6、定义方法简写",slug:"_6、定义方法简写",normalizedTitle:"6、定义方法简写",charIndex:2873},{level:3,title:"7、对象拓展运算符",slug:"_7、对象拓展运算符",normalizedTitle:"7、对象拓展运算符",charIndex:3122},{level:3,title:"8、箭头函数",slug:"_8、箭头函数",normalizedTitle:"8、箭头函数",charIndex:3456}],headersStr:"ECMAScript 6 简介 基本语法 1、let声明变量 2、const声明常量（只读变量） 3、解构赋值 4、模板字符串 5、声明对象简写 6、定义方法简写 7、对象拓展运算符 8、箭头函数",content:'ECMAScript 6 入门 - 阮一峰\n\n\n# ECMAScript 6 简介\n\n> ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。\n\n> ECMAScript 与 JavaScript 是什么关系？\n> \n> 1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件（ECMA-262）的第一版，规定了浏览器脚本语言的标准，并将这种语言称为ECMAScript，这个版本就是 1.0 版。\n> \n> 因此ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现（另外的 ECMAScript 方言还有 Jscript 和 ActionScript）\n> \n> ES6 与 ECMAScript 2015（简称 ES2015）的关系\n> \n> 2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。\n> \n> ES6 的第一个版本，在 2015 年 6 月发布，正式名称是《ECMAScript 2015 标准》（简称 ES2015）。\n> \n> 2016 年 6 月，小幅修订的《ECMAScript 2016 标准》（简称 ES2016）如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小，基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。\n> \n> 因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 ES6 的地方，一般是指 ES2015 标准，但有时也是泛指“下一代 JavaScript 语言”。\n\n\n# 基本语法\n\nES标准中不包含 DOM 和 BOM的定义，只涵盖基本数据类型、关键字、语句、运算符、内建对象、内建函数等通用语法。\n\n\n# 1、let声明变量\n\n// var 声明的变量没有局部作用域\n// let 声明的变量  有局部作用域\n{\nvar a = 0\nlet b = 1\n}\nconsole.log(a)  // 0\nconsole.log(b)  // ReferenceError: b is not defined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// var 可以声明多次\n// let 只能声明一次\nvar m = 1\nvar m = 2\nlet n = 3\nlet n = 4\nconsole.log(m)  // 2\nconsole.log(n)  // Identifier \'n\' has already been declared\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 2、const声明常量（只读变量）\n\n// 1、声明之后不允许改变    \nconst PI = "3.1415926"\nPI = 3  // TypeError: Assignment to constant variable.\n\n\n1\n2\n3\n\n\n// 2、一但声明必须初始化，否则会报错\nconst MY_AGE  // SyntaxError: Missing initializer in const declaration\n\n\n1\n2\n\n\n\n# 3、解构赋值\n\n创建 jgfz.html\n\n解构赋值是对赋值运算符的扩展。\n\n他是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值。\n\n在代码书写上简洁且易读，语义更加清晰明了；也方便了复杂对象中数据字段获取。\n\n//1、数组解构\n// 传统\nlet a = 1, b = 2, c = 3\nconsole.log(a, b, c)\n// ES6\nlet [x, y, z] = [1, 2, 3]\nconsole.log(x, y, z)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n//2、对象解构\nlet user = {name: \'Helen\', age: 18}\n// 传统\nlet name1 = user.name\nlet age1 = user.age\nconsole.log(name1, age1)\n// ES6\nlet { name, age } =  user//注意：结构的变量必须是user中的属性\nconsole.log(name, age)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 4、模板字符串\n\n模板字符串相当于加强版的字符串，用反引号 `,除了作为普通字符串，还可以用来定义多行字符串，还可以在字符串中加入变量和表达式。\n\n// 1、多行字符串\nlet string1 =  `Hey,\ncan you stop angry now?`\nconsole.log(string1)\n// Hey,\n// can you stop angry now?\n\n\n1\n2\n3\n4\n5\n6\n\n\n// 2、字符串插入变量和表达式。变量名写在 ${} 中，${} 中可以放入 JavaScript 表达式。\nlet name = "Mike"\nlet age = 27\nlet info = `My Name is ${name},I am ${age+1} years old next year.`\nconsole.log(info)\n// My Name is Mike,I am 28 years old next year.\n\n\n1\n2\n3\n4\n5\n6\n\n\n// 3、字符串中调用函数\nfunction f(){\n    return "have fun!"\n}\nlet string2 = `Game start,${f()}`\nconsole.log(string2);  // Game start,have fun!\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 5、声明对象简写\n\nconst age = 12\nconst name = "Amy"\n// 传统\nconst person1 = {age: age, name: name}\nconsole.log(person1)\n// ES6\nconst person2 = {age, name}\nconsole.log(person2) //{age: 12, name: "Amy"}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 6、定义方法简写\n\n// 传统\nconst person1 = {\n    sayHi:function(){\n        console.log("Hi")\n    }\n}\nperson1.sayHi();//"Hi"\n// ES6\nconst person2 = {\n    sayHi(){\n        console.log("Hi")\n    }\n}\nperson2.sayHi()  //"Hi"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 7、对象拓展运算符\n\n拓展运算符（...）用于取出参数对象所有可遍历属性然后拷贝到当前对象。\n\n// 1、拷贝对象\nlet person1 = {name: "Amy", age: 15}\nlet someone = { ...person1 }\nconsole.log(someone)  //{name: "Amy", age: 15}\n\n\n1\n2\n3\n4\n\n\n// 2、合并对象\nlet age = {age: 15}\nlet name = {name: "Amy"}\nlet person2 = {...age, ...name}\nconsole.log(person2)  //{age: 15, name: "Amy"}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 8、箭头函数\n\n箭头函数提供了一种更加简洁的函数书写方式。基本语法是：参数 => 函数体\n\n// 传统\nvar f1 = function(a){\n    return a\n}\nconsole.log(f1(1))\n// ES6\nvar f2 = a => a\nconsole.log(f2(1))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// 当箭头函数没有参数或者有多个参数，要用 () 括起来。\n// 当箭头函数函数体有多行语句，用 {} 包裹起来，表示代码块，\n// 当只有一行语句，并且需要返回结果时，可以省略 {} , 结果会自动返回。\nvar f3 = (a,b) => {\n    let result = a+b\n    return result\n}\nconsole.log(f3(6,2))  // 8\n// 前面代码相当于：\nvar f4 = (a,b) => a+b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n箭头函数多用于匿名函数的定义',normalizedContent:'ecmascript 6 入门 - 阮一峰\n\n\n# ecmascript 6 简介\n\n> ecmascript 6.0（以下简称 es6）是 javascript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 javascript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。\n\n> ecmascript 与 javascript 是什么关系？\n> \n> 1996 年 11 月，javascript 的创造者 netscape 公司，决定将 javascript 提交给标准化组织 ecma，希望这种语言能够成为国际标准。次年，ecma 发布 262 号标准文件（ecma-262）的第一版，规定了浏览器脚本语言的标准，并将这种语言称为ecmascript，这个版本就是 1.0 版。\n> \n> 因此ecmascript 和 javascript 的关系是，前者是后者的规格，后者是前者的一种实现（另外的 ecmascript 方言还有 jscript 和 actionscript）\n> \n> es6 与 ecmascript 2015（简称 es2015）的关系\n> \n> 2011 年，ecmascript 5.1 版发布后，就开始制定 6.0 版了。因此，es6 这个词的原意，就是指 javascript 语言的下一个版本。\n> \n> es6 的第一个版本，在 2015 年 6 月发布，正式名称是《ecmascript 2015 标准》（简称 es2015）。\n> \n> 2016 年 6 月，小幅修订的《ecmascript 2016 标准》（简称 es2016）如期发布，这个版本可以看作是 es6.1 版，因为两者的差异非常小，基本上是同一个标准。根据计划，2017 年 6 月发布 es2017 标准。\n> \n> 因此，es6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 javascript 的下一代标准，涵盖了 es2015、es2016、es2017 等等，而 es2015 则是正式名称，特指该年发布的正式版本的语言标准。本书中提到 es6 的地方，一般是指 es2015 标准，但有时也是泛指“下一代 javascript 语言”。\n\n\n# 基本语法\n\nes标准中不包含 dom 和 bom的定义，只涵盖基本数据类型、关键字、语句、运算符、内建对象、内建函数等通用语法。\n\n\n# 1、let声明变量\n\n// var 声明的变量没有局部作用域\n// let 声明的变量  有局部作用域\n{\nvar a = 0\nlet b = 1\n}\nconsole.log(a)  // 0\nconsole.log(b)  // referenceerror: b is not defined\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// var 可以声明多次\n// let 只能声明一次\nvar m = 1\nvar m = 2\nlet n = 3\nlet n = 4\nconsole.log(m)  // 2\nconsole.log(n)  // identifier \'n\' has already been declared\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 2、const声明常量（只读变量）\n\n// 1、声明之后不允许改变    \nconst pi = "3.1415926"\npi = 3  // typeerror: assignment to constant variable.\n\n\n1\n2\n3\n\n\n// 2、一但声明必须初始化，否则会报错\nconst my_age  // syntaxerror: missing initializer in const declaration\n\n\n1\n2\n\n\n\n# 3、解构赋值\n\n创建 jgfz.html\n\n解构赋值是对赋值运算符的扩展。\n\n他是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值。\n\n在代码书写上简洁且易读，语义更加清晰明了；也方便了复杂对象中数据字段获取。\n\n//1、数组解构\n// 传统\nlet a = 1, b = 2, c = 3\nconsole.log(a, b, c)\n// es6\nlet [x, y, z] = [1, 2, 3]\nconsole.log(x, y, z)\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n//2、对象解构\nlet user = {name: \'helen\', age: 18}\n// 传统\nlet name1 = user.name\nlet age1 = user.age\nconsole.log(name1, age1)\n// es6\nlet { name, age } =  user//注意：结构的变量必须是user中的属性\nconsole.log(name, age)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 4、模板字符串\n\n模板字符串相当于加强版的字符串，用反引号 `,除了作为普通字符串，还可以用来定义多行字符串，还可以在字符串中加入变量和表达式。\n\n// 1、多行字符串\nlet string1 =  `hey,\ncan you stop angry now?`\nconsole.log(string1)\n// hey,\n// can you stop angry now?\n\n\n1\n2\n3\n4\n5\n6\n\n\n// 2、字符串插入变量和表达式。变量名写在 ${} 中，${} 中可以放入 javascript 表达式。\nlet name = "mike"\nlet age = 27\nlet info = `my name is ${name},i am ${age+1} years old next year.`\nconsole.log(info)\n// my name is mike,i am 28 years old next year.\n\n\n1\n2\n3\n4\n5\n6\n\n\n// 3、字符串中调用函数\nfunction f(){\n    return "have fun!"\n}\nlet string2 = `game start,${f()}`\nconsole.log(string2);  // game start,have fun!\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 5、声明对象简写\n\nconst age = 12\nconst name = "amy"\n// 传统\nconst person1 = {age: age, name: name}\nconsole.log(person1)\n// es6\nconst person2 = {age, name}\nconsole.log(person2) //{age: 12, name: "amy"}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 6、定义方法简写\n\n// 传统\nconst person1 = {\n    sayhi:function(){\n        console.log("hi")\n    }\n}\nperson1.sayhi();//"hi"\n// es6\nconst person2 = {\n    sayhi(){\n        console.log("hi")\n    }\n}\nperson2.sayhi()  //"hi"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 7、对象拓展运算符\n\n拓展运算符（...）用于取出参数对象所有可遍历属性然后拷贝到当前对象。\n\n// 1、拷贝对象\nlet person1 = {name: "amy", age: 15}\nlet someone = { ...person1 }\nconsole.log(someone)  //{name: "amy", age: 15}\n\n\n1\n2\n3\n4\n\n\n// 2、合并对象\nlet age = {age: 15}\nlet name = {name: "amy"}\nlet person2 = {...age, ...name}\nconsole.log(person2)  //{age: 15, name: "amy"}\n\n\n1\n2\n3\n4\n5\n\n\n\n# 8、箭头函数\n\n箭头函数提供了一种更加简洁的函数书写方式。基本语法是：参数 => 函数体\n\n// 传统\nvar f1 = function(a){\n    return a\n}\nconsole.log(f1(1))\n// es6\nvar f2 = a => a\nconsole.log(f2(1))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n// 当箭头函数没有参数或者有多个参数，要用 () 括起来。\n// 当箭头函数函数体有多行语句，用 {} 包裹起来，表示代码块，\n// 当只有一行语句，并且需要返回结果时，可以省略 {} , 结果会自动返回。\nvar f3 = (a,b) => {\n    let result = a+b\n    return result\n}\nconsole.log(f3(6,2))  // 8\n// 前面代码相当于：\nvar f4 = (a,b) => a+b\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n箭头函数多用于匿名函数的定义',charsets:{cjk:!0}},{title:"快速上手",frontmatter:{title:"快速上手",date:"2022-01-21T20:44:12.000Z",permalink:"/pages/1257a3/",categories:["前端","Element-UI"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/30.Element-UI/10.%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"11.前端/30.Element-UI/10.快速上手.md",key:"v-2fc728ba",path:"/pages/1257a3/",headers:[{level:2,title:"Element-UI",slug:"element-ui",normalizedTitle:"element-ui",charIndex:2}],headersStr:"Element-UI",content:"# Element-UI\n\n官网是最优的教程\n\nElement-UI基于Vue2\n\nElement-UI基于Vue3",normalizedContent:"# element-ui\n\n官网是最优的教程\n\nelement-ui基于vue2\n\nelement-ui基于vue3",charsets:{cjk:!0}},{title:"js快速上手",frontmatter:{title:"js快速上手",date:"2022-01-21T21:13:58.000Z",permalink:"/pages/0e295d/",categories:["前端","JavaScript"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/20.JavaScript/10.js%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"11.前端/20.JavaScript/10.js快速上手.md",key:"v-4f57980c",path:"/pages/0e295d/",headers:[{level:2,title:"JavaScript简介",slug:"javascript简介",normalizedTitle:"javascript简介",charIndex:2}],headersStr:"JavaScript简介",content:"# JavaScript简介\n\n官网\n\nW3School文档教程",normalizedContent:"# javascript简介\n\n官网\n\nw3school文档教程",charsets:{cjk:!0}},{title:"yarn",frontmatter:{title:"yarn",date:"2022-01-16T21:48:59.000Z",permalink:"/pages/e743fe/",categories:["前端","yarn"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/40.yarn/10.yarn.html",relativePath:"11.前端/40.yarn/10.yarn.md",key:"v-0069db8e",path:"/pages/e743fe/",headers:[{level:2,title:"yarn简介",slug:"yarn简介",normalizedTitle:"yarn简介",charIndex:2},{level:2,title:"常用命令",slug:"常用命令",normalizedTitle:"常用命令",charIndex:84},{level:3,title:"显示命令列表",slug:"显示命令列表",normalizedTitle:"显示命令列表",charIndex:93},{level:3,title:"初始化一个新项目",slug:"初始化一个新项目",normalizedTitle:"初始化一个新项目",charIndex:120},{level:3,title:"安装所有依赖项",slug:"安装所有依赖项",normalizedTitle:"安装所有依赖项",charIndex:149},{level:3,title:"添加依赖项",slug:"添加依赖项",normalizedTitle:"添加依赖项",charIndex:187},{level:3,title:"将依赖项添加到不同的依赖类别中",slug:"将依赖项添加到不同的依赖类别中",normalizedTitle:"将依赖项添加到不同的依赖类别中",charIndex:280},{level:3,title:"更新依赖项",slug:"更新依赖项",normalizedTitle:"更新依赖项",charIndex:399},{level:3,title:"删除依赖项",slug:"删除依赖项",normalizedTitle:"删除依赖项",charIndex:489},{level:3,title:"更新 Yarn 本体",slug:"更新-yarn-本体",normalizedTitle:"更新 yarn 本体",charIndex:527}],headersStr:"yarn简介 常用命令 显示命令列表 初始化一个新项目 安装所有依赖项 添加依赖项 将依赖项添加到不同的依赖类别中 更新依赖项 删除依赖项 更新 Yarn 本体",content:"# yarn简介\n\nyarn官网\n\n> Yarn 对你的代码来说是一个软件包管理器， 你可以通过它使用全世界开发者的代码，或者分享自己的代码给全世界的开发者。\n\n\n# 常用命令\n\n\n# 显示命令列表\n\nyarn help\n\n\n1\n\n\n\n# 初始化一个新项目\n\nyarn init\n\n\n1\n\n\n\n# 安装所有依赖项\n\nyarn\nyarn install\n\n\n1\n2\n\n\n\n# 添加依赖项\n\nyarn add [package]\nyarn add [package]@[version]\nyarn add [package]@[tag]\n\n\n1\n2\n3\n\n\n\n# 将依赖项添加到不同的依赖类别中\n\nyarn add [package] --dev  # dev dependencies\nyarn add [package] --peer # peer dependencies\n\n\n1\n2\n\n\n\n# 更新依赖项\n\nyarn up [package]\nyarn up [package]@[version]\nyarn up [package]@[tag]\n\n\n1\n2\n3\n\n\n\n# 删除依赖项\n\nyarn remove [package]\n\n\n1\n\n\n\n# 更新 Yarn 本体\n\nyarn set version latest\nyarn set version from sources\n\n\n1\n2\n",normalizedContent:"# yarn简介\n\nyarn官网\n\n> yarn 对你的代码来说是一个软件包管理器， 你可以通过它使用全世界开发者的代码，或者分享自己的代码给全世界的开发者。\n\n\n# 常用命令\n\n\n# 显示命令列表\n\nyarn help\n\n\n1\n\n\n\n# 初始化一个新项目\n\nyarn init\n\n\n1\n\n\n\n# 安装所有依赖项\n\nyarn\nyarn install\n\n\n1\n2\n\n\n\n# 添加依赖项\n\nyarn add [package]\nyarn add [package]@[version]\nyarn add [package]@[tag]\n\n\n1\n2\n3\n\n\n\n# 将依赖项添加到不同的依赖类别中\n\nyarn add [package] --dev  # dev dependencies\nyarn add [package] --peer # peer dependencies\n\n\n1\n2\n\n\n\n# 更新依赖项\n\nyarn up [package]\nyarn up [package]@[version]\nyarn up [package]@[tag]\n\n\n1\n2\n3\n\n\n\n# 删除依赖项\n\nyarn remove [package]\n\n\n1\n\n\n\n# 更新 yarn 本体\n\nyarn set version latest\nyarn set version from sources\n\n\n1\n2\n",charsets:{cjk:!0}},{title:"异常处理",frontmatter:{title:"异常处理",date:"2022-01-25T19:40:55.000Z",permalink:"/pages/b9d355/",categories:["Java","Java基础"],tags:[null]},regularPath:"/20.Java/10.Java%E5%9F%BA%E7%A1%80/10.%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html",relativePath:"20.Java/10.Java基础/10.异常处理.md",key:"v-b57eb2de",path:"/pages/b9d355/",headers:[{level:2,title:"适用场景",slug:"适用场景",normalizedTitle:"适用场景",charIndex:2}],headersStr:"适用场景",content:"# 适用场景\n\n资源加载初始化时存在失败可能，必然使用try/catch/finally",normalizedContent:"# 适用场景\n\n资源加载初始化时存在失败可能，必然使用try/catch/finally",charsets:{cjk:!0}},{title:"10webpack快速上手",frontmatter:{title:"10webpack快速上手",date:"2022-01-21T21:10:23.000Z",permalink:"/pages/7038b1/",categories:["前端","webpack"],tags:[null]},regularPath:"/11.%E5%89%8D%E7%AB%AF/45.webpack/10.webpack%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"11.前端/45.webpack/10.webpack快速上手.md",key:"v-29486e54",path:"/pages/7038b1/",headers:[{level:2,title:"webpack简介",slug:"webpack简介",normalizedTitle:"webpack简介",charIndex:2}],headersStr:"webpack简介",content:"# webpack简介\n\n官网\n\n> webpack 是一个现代 JavaScript 应用程序的 静态模块打包器(module bundler)。",normalizedContent:"# webpack简介\n\n官网\n\n> webpack 是一个现代 javascript 应用程序的 静态模块打包器(module bundler)。",charsets:{cjk:!0}},{title:"前置知识",frontmatter:{title:"前置知识",date:"2022-02-10T13:34:55.000Z",permalink:"/pages/e422a2/",categories:["Java","Java线程"],tags:[null]},regularPath:"/20.Java/30.Java%E7%BA%BF%E7%A8%8B/10.%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86.html",relativePath:"20.Java/30.Java线程/10.前置知识.md",key:"v-17b68674",path:"/pages/e422a2/",headers:[{level:2,title:"多线程前置知识",slug:"多线程前置知识",normalizedTitle:"多线程前置知识",charIndex:2},{level:3,title:"1.什么是进程？",slug:"_1-什么是进程",normalizedTitle:"1.什么是进程？",charIndex:14}],headersStr:"多线程前置知识 1.什么是进程？",content:"# 多线程前置知识\n\n\n# 1.什么是进程？\n\n进程是程序分配资源的基本单位",normalizedContent:"# 多线程前置知识\n\n\n# 1.什么是进程？\n\n进程是程序分配资源的基本单位",charsets:{cjk:!0}},{title:"lambda演化之旅",frontmatter:{title:"lambda演化之旅",date:"2022-02-11T21:08:35.000Z",permalink:"/pages/23a0a3/",categories:["Java","Java8新特性"],tags:[null]},regularPath:"/20.Java/40.Java8%E6%96%B0%E7%89%B9%E6%80%A7/15.lambda%E6%BC%94%E5%8C%96%E4%B9%8B%E6%97%85.html",relativePath:"20.Java/40.Java8新特性/15.lambda演化之旅.md",key:"v-9d058b4e",path:"/pages/23a0a3/",headers:[{level:2,title:"lambda简化流程",slug:"lambda简化流程",normalizedTitle:"lambda简化流程",charIndex:2}],headersStr:"lambda简化流程",content:'# lambda简化流程\n\n这里使用字符串的排序演示，同时Comparator接口也是一个很经典的函数式接口，顺带列出数组的所有遍历方式\n\npublic void testLambda() {\n    String[] arr = {"Hello", "java", "World", "beautiful", "international", "others"};\n    //不使用匿名对象\n    Comparator<String> stringComparator = new Comparator<String>() {\n        @Override\n        public int compare(String o1, String o2) {\n            return o1.compareToIgnoreCase(o2);\n        }\n\n        //Comparator接口没有强制要求重写\n        // @Override\n        // public boolean equals(Object obj) {\n        //     return false;\n        // }\n\n    };\n    Arrays.sort(arr,stringComparator);\n\n    //使用匿名对象\n    Arrays.sort(arr, new Comparator<String>() {\n        @Override\n        public int compare(String o1, String o2) {\n            return o1.compareToIgnoreCase(o2);\n        }\n    });\n\n    //使用标准lambda格式\n    Arrays.sort(arr,(o1,o2)->{\n        return o1.compareToIgnoreCase(o2);\n    });\n\n    //简化的lambda表达式，参数列表()不能省略，只有一条语句，{} ; return 三个省略\n    Arrays.sort(arr,(o1,o2)-> o1.compareToIgnoreCase(o2));\n\n    //使用方法引用语法糖代替lambda表达式\n    Arrays.sort(arr,String::compareToIgnoreCase);\n    \n    \n    //数组的三种遍历方式\n    //1.普通for循环\n    //2.增强for循环\n    //3.Arrays工具类的toString()方法\n    \n    //1.普通for循环\n    for (int i = 0; i < arr.length; i++) {\n        System.out.println(arr[i]);\n    }\n    \n    //2.增强for循环\n    for (String s : arr){\n        System.out.println(s);\n    }\n\n    //3.Arrays工具类的toString()方法\n    String printArr = Arrays.toString(arr);\n    System.out.println(printArr);\n\n    //3.Arrays工具类的toString()方法\n    System.out.println(Arrays.toString(arr));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n',normalizedContent:'# lambda简化流程\n\n这里使用字符串的排序演示，同时comparator接口也是一个很经典的函数式接口，顺带列出数组的所有遍历方式\n\npublic void testlambda() {\n    string[] arr = {"hello", "java", "world", "beautiful", "international", "others"};\n    //不使用匿名对象\n    comparator<string> stringcomparator = new comparator<string>() {\n        @override\n        public int compare(string o1, string o2) {\n            return o1.comparetoignorecase(o2);\n        }\n\n        //comparator接口没有强制要求重写\n        // @override\n        // public boolean equals(object obj) {\n        //     return false;\n        // }\n\n    };\n    arrays.sort(arr,stringcomparator);\n\n    //使用匿名对象\n    arrays.sort(arr, new comparator<string>() {\n        @override\n        public int compare(string o1, string o2) {\n            return o1.comparetoignorecase(o2);\n        }\n    });\n\n    //使用标准lambda格式\n    arrays.sort(arr,(o1,o2)->{\n        return o1.comparetoignorecase(o2);\n    });\n\n    //简化的lambda表达式，参数列表()不能省略，只有一条语句，{} ; return 三个省略\n    arrays.sort(arr,(o1,o2)-> o1.comparetoignorecase(o2));\n\n    //使用方法引用语法糖代替lambda表达式\n    arrays.sort(arr,string::comparetoignorecase);\n    \n    \n    //数组的三种遍历方式\n    //1.普通for循环\n    //2.增强for循环\n    //3.arrays工具类的tostring()方法\n    \n    //1.普通for循环\n    for (int i = 0; i < arr.length; i++) {\n        system.out.println(arr[i]);\n    }\n    \n    //2.增强for循环\n    for (string s : arr){\n        system.out.println(s);\n    }\n\n    //3.arrays工具类的tostring()方法\n    string printarr = arrays.tostring(arr);\n    system.out.println(printarr);\n\n    //3.arrays工具类的tostring()方法\n    system.out.println(arrays.tostring(arr));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n',charsets:{cjk:!0}},{title:"lambda表达式",frontmatter:{title:"lambda表达式",date:"2022-02-09T11:28:29.000Z",permalink:"/pages/e4d55d/",categories:["Java","Java8新特性"],tags:[null]},regularPath:"/20.Java/40.Java8%E6%96%B0%E7%89%B9%E6%80%A7/10.lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F.html",relativePath:"20.Java/40.Java8新特性/10.lambda表达式.md",key:"v-e974bd18",path:"/pages/e4d55d/",headers:[{level:2,title:"Lambda表达式",slug:"lambda表达式",normalizedTitle:"lambda表达式",charIndex:2},{level:3,title:"函数式接口",slug:"函数式接口",normalizedTitle:"函数式接口",charIndex:258},{level:3,title:"常见函数式接口",slug:"常见函数式接口",normalizedTitle:"常见函数式接口",charIndex:611},{level:3,title:"lambda语法",slug:"lambda语法",normalizedTitle:"lambda语法",charIndex:632},{level:3,title:"方法引用",slug:"方法引用",normalizedTitle:"方法引用",charIndex:1709},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:3327}],headersStr:"Lambda表达式 函数式接口 常见函数式接口 lambda语法 方法引用 总结",content:'# Lambda表达式\n\n> Lambda表达式是一种新的语法糖，让Java开始支持“函数式编程”的语法。\n> \n> Java是面向对象的编程语言，所有的操作几乎都是基于对象，“一切皆对象”。\n> \n> 如果某个变量或形参是引用数据类型，那么必须给他赋值一个对象再使用。\n> \n> 在开发中，有时候我们并不关心这个对象，我们关心的是这个对象的某个方法的功能，方法体代码，其实就是函数的实现。按照面向对象的编程思想，为了传递这段代码，还要new一个对象，就显得有点啰嗦。\n\n函数式编程思想：把函数当成数据传递\n\n\n# 函数式接口\n\n> 函数式接口，是SAM接口（Single Abstract Method）有唯一的抽象方法的接口。\n> \n> JDK8后可以有default方法，不影响，仍是函数式接口\n\nLambda表达式只针对“函数式接口”使用。\n\n@FunctionalInterface\npublic interface Runnable {\n    //只有一个抽象方法，并且标识FuncationalInterface\n    public abstract void run();\n}\n\n\n1\n2\n3\n4\n5\n\n\nnew Thread(()->{\n    //run线程体，do sth\n    System.out.println("......");\n}).start();\n\n\n1\n2\n3\n4\n\n\n\n# 常见函数式接口\n\n常见函数式接口\n\n\n# lambda语法\n\n语法结构：\n\n> (Lambda表达式的形参列表)-> {Lambda体} (参数类型 参数名称)->{代码语句}\n\n说明：\n\n> 1.->：称为箭头操作符，或Lambda操作符,由减号和大于号组成，中间不能有空格，表示指向动作 2.(Lambda表达式的形参列表)，就是函数式接口的抽象方法的形参列表\n\n例如：\n\n> 对于Rannable接口中的run()方法，则Lambda表达式的形参列表为 ()->{} 对于Comparator<T>接口中的compare(T t1, T t2)方法，则Lambda表达式的形参列表为 (T t1, T t2)->{}\n\n作用：\n\n> Lambda表达式的作用是给函数式接口的变量/形参赋值的\n\nLambda表达式的简化\n\n> （1）当{Lambda体}只有一个语句，可以省略{}和语句后面的; ps:如果此时是return语句，要把return也省略 （2）当（Lambda表达式的形参列表）的形参列表的形参类型是已知的，或者是可以根据泛型自动推断的，那么类型可以省略 （3）如果（Lambda表达式的形参列表）的形参列表的类型省略了，并且形参只有一个，那么()可以省略\n> \n> 如果形参列表是多个参数，()不能省略\n> \n> 如果形参列表是空参()，那么()不能省略\n\nlambda的简化例子\n\n//Runnable接口中run()方法无参的，()不能省略，只有一条语句，；和 {} 和 return可以省略\nnew Thread(()-> System.out.println("hello")).start();\n\n\n1\n2\n\n\nps：为什么Thread可以使用lambda表达式？\n\n> 在Thread的构造函数中，public Thread(Runnable target)传入的Runnable接口是函数式接口(JDK1.8)\n\n//使用lambda标准格式\nlist.forEach((element) -> {\n    System.out.print(element);\n});\n\n//Comsumer函数式接口中void accept(T t)方法中参数只有一个，()可以是省略，只有一条语句，；和 {} 和 return可以省略\n//Comsumer接口是消费型接口，抽象方法是`void accept(T t); 参数类型是t\nlist.forEach(element-> System.out.print(element));\n\n//对lambda再次简化，使用方法引用::遍历,下文讲述\nlist.forEach(System.out::print);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nps：为什么forEach方法可以使用lambda表达式？\n\n> 同理，在public void forEach(Consumer<? super E> action)方法中，传入的Consumer接口时函数式接口(JDK1.8)\n> \n> Comsumer接口是消费型接口，抽象方法是void accept(T t); 参数类型是t\n\n\n# 方法引用\n\n语法格式：\n\n> 类名/对象名::方法名\n\n说明：\n\n> ::双冒号被称为引用运算符\n> \n> 如果lambda函数体中的代码方案已经在某个方法中实现了，就可以直接使用双冒号::来引用该方法替代lambda表达式\n\n满足条件：\n\n> 1.{lambda体}中只有一个语句，并且这个语句是调用现有的对象/类的方法来完成。\n> \n> 2.lambda表达式的(形参列表)中的形参，要么作为调用方法的对象，要么作为调用方法的实参，所 有形参都要用上\n> \n> 3.在整个{lambda体}中，没有使用到除lambda表达式中额外的数据/对象等\n\n方法引用例子：\n\n//例如：\nArrays.sort(arr, (t1, t2) -> t1.compareToIgnoreCase(t2));\n\n//1.{lambda体}中只有一个语句 return t1.compareToIgnoreCase(t2);\n//2.Lambda表达式的(形参列表)是(t1, t2)，t1是作为调用compareToIgnoreCase方法的对象，t2是作为调用compareToIgnoreCase方法的实参。\n//3.没有用到额外数据/对象\n\n//所以可以使用方法引用，因为t1是String对象，compareToIgnoreCase()是String类的方法\nArray.sort(arr,String::compareToIgnoreCase)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n//例如：\nlist.forEach(t -> System.out.println(t));\n//1.{lambda体}中只有一个语句 System.out.println(t)\n//2.Lambda表达式的(形参列表)是(String t) , t作为println方法调用的实参。\n//3.没有用到额外数据/对象\n\n//所以可以使用方法引用，因为println()是System.out对象的方法\nlist.forEach(System.out::println);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//例如：\nnew Thread(()//System.out.println("hello")).start();\n//1.{lambda体}中只有一个语句 System.out.println("hello")\n//2.Lambda表达式的(形参列表)是()，没有参数可以使用\n//3.在整个{lambda体}中，没有使用到额外的数据/对象等 不满足，出现了"hello"\n           \n//所以不能使用方法引用代替，运行结果完全不同\nnew Thread(System.out::println); //只是启动一个线程打印了一个newLine();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//供给型接口Supplier<T>，抽象方法T get()\n//Lambda表达式可以直接给函数式接口的变量赋值\nSupplier<String> s = () -> new String();\n//使用构造器引用进行简化\nSupplier<String> s = String :: new;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 总结\n\n1.使用lambda表达式的前提条件\n\n> 传入的参数接口必须是函数式接口\n\n2.简化lambda表达式使用方法引用::的前提条件\n\n> 1.{lambda体}中只有一个语句，并且这个语句是调用现有的对象/类的方法来完成。\n> \n> 2.lambda表达式的(形参列表)中的形参，要么作为调用方法的对象，要么作为调用方法的实参，所 有形参都要用上\n> \n> 3.在整个{lambda体}中，没有使用到除lambda表达式中额外的数据/对象等\n\n参考\n\n上文理解不了，试试这个',normalizedContent:'# lambda表达式\n\n> lambda表达式是一种新的语法糖，让java开始支持“函数式编程”的语法。\n> \n> java是面向对象的编程语言，所有的操作几乎都是基于对象，“一切皆对象”。\n> \n> 如果某个变量或形参是引用数据类型，那么必须给他赋值一个对象再使用。\n> \n> 在开发中，有时候我们并不关心这个对象，我们关心的是这个对象的某个方法的功能，方法体代码，其实就是函数的实现。按照面向对象的编程思想，为了传递这段代码，还要new一个对象，就显得有点啰嗦。\n\n函数式编程思想：把函数当成数据传递\n\n\n# 函数式接口\n\n> 函数式接口，是sam接口（single abstract method）有唯一的抽象方法的接口。\n> \n> jdk8后可以有default方法，不影响，仍是函数式接口\n\nlambda表达式只针对“函数式接口”使用。\n\n@functionalinterface\npublic interface runnable {\n    //只有一个抽象方法，并且标识funcationalinterface\n    public abstract void run();\n}\n\n\n1\n2\n3\n4\n5\n\n\nnew thread(()->{\n    //run线程体，do sth\n    system.out.println("......");\n}).start();\n\n\n1\n2\n3\n4\n\n\n\n# 常见函数式接口\n\n常见函数式接口\n\n\n# lambda语法\n\n语法结构：\n\n> (lambda表达式的形参列表)-> {lambda体} (参数类型 参数名称)->{代码语句}\n\n说明：\n\n> 1.->：称为箭头操作符，或lambda操作符,由减号和大于号组成，中间不能有空格，表示指向动作 2.(lambda表达式的形参列表)，就是函数式接口的抽象方法的形参列表\n\n例如：\n\n> 对于rannable接口中的run()方法，则lambda表达式的形参列表为 ()->{} 对于comparator<t>接口中的compare(t t1, t t2)方法，则lambda表达式的形参列表为 (t t1, t t2)->{}\n\n作用：\n\n> lambda表达式的作用是给函数式接口的变量/形参赋值的\n\nlambda表达式的简化\n\n> （1）当{lambda体}只有一个语句，可以省略{}和语句后面的; ps:如果此时是return语句，要把return也省略 （2）当（lambda表达式的形参列表）的形参列表的形参类型是已知的，或者是可以根据泛型自动推断的，那么类型可以省略 （3）如果（lambda表达式的形参列表）的形参列表的类型省略了，并且形参只有一个，那么()可以省略\n> \n> 如果形参列表是多个参数，()不能省略\n> \n> 如果形参列表是空参()，那么()不能省略\n\nlambda的简化例子\n\n//runnable接口中run()方法无参的，()不能省略，只有一条语句，；和 {} 和 return可以省略\nnew thread(()-> system.out.println("hello")).start();\n\n\n1\n2\n\n\nps：为什么thread可以使用lambda表达式？\n\n> 在thread的构造函数中，public thread(runnable target)传入的runnable接口是函数式接口(jdk1.8)\n\n//使用lambda标准格式\nlist.foreach((element) -> {\n    system.out.print(element);\n});\n\n//comsumer函数式接口中void accept(t t)方法中参数只有一个，()可以是省略，只有一条语句，；和 {} 和 return可以省略\n//comsumer接口是消费型接口，抽象方法是`void accept(t t); 参数类型是t\nlist.foreach(element-> system.out.print(element));\n\n//对lambda再次简化，使用方法引用::遍历,下文讲述\nlist.foreach(system.out::print);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\nps：为什么foreach方法可以使用lambda表达式？\n\n> 同理，在public void foreach(consumer<? super e> action)方法中，传入的consumer接口时函数式接口(jdk1.8)\n> \n> comsumer接口是消费型接口，抽象方法是void accept(t t); 参数类型是t\n\n\n# 方法引用\n\n语法格式：\n\n> 类名/对象名::方法名\n\n说明：\n\n> ::双冒号被称为引用运算符\n> \n> 如果lambda函数体中的代码方案已经在某个方法中实现了，就可以直接使用双冒号::来引用该方法替代lambda表达式\n\n满足条件：\n\n> 1.{lambda体}中只有一个语句，并且这个语句是调用现有的对象/类的方法来完成。\n> \n> 2.lambda表达式的(形参列表)中的形参，要么作为调用方法的对象，要么作为调用方法的实参，所 有形参都要用上\n> \n> 3.在整个{lambda体}中，没有使用到除lambda表达式中额外的数据/对象等\n\n方法引用例子：\n\n//例如：\narrays.sort(arr, (t1, t2) -> t1.comparetoignorecase(t2));\n\n//1.{lambda体}中只有一个语句 return t1.comparetoignorecase(t2);\n//2.lambda表达式的(形参列表)是(t1, t2)，t1是作为调用comparetoignorecase方法的对象，t2是作为调用comparetoignorecase方法的实参。\n//3.没有用到额外数据/对象\n\n//所以可以使用方法引用，因为t1是string对象，comparetoignorecase()是string类的方法\narray.sort(arr,string::comparetoignorecase)\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n//例如：\nlist.foreach(t -> system.out.println(t));\n//1.{lambda体}中只有一个语句 system.out.println(t)\n//2.lambda表达式的(形参列表)是(string t) , t作为println方法调用的实参。\n//3.没有用到额外数据/对象\n\n//所以可以使用方法引用，因为println()是system.out对象的方法\nlist.foreach(system.out::println);\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//例如：\nnew thread(()//system.out.println("hello")).start();\n//1.{lambda体}中只有一个语句 system.out.println("hello")\n//2.lambda表达式的(形参列表)是()，没有参数可以使用\n//3.在整个{lambda体}中，没有使用到额外的数据/对象等 不满足，出现了"hello"\n           \n//所以不能使用方法引用代替，运行结果完全不同\nnew thread(system.out::println); //只是启动一个线程打印了一个newline();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n//供给型接口supplier<t>，抽象方法t get()\n//lambda表达式可以直接给函数式接口的变量赋值\nsupplier<string> s = () -> new string();\n//使用构造器引用进行简化\nsupplier<string> s = string :: new;\n\n\n1\n2\n3\n4\n5\n\n\n\n# 总结\n\n1.使用lambda表达式的前提条件\n\n> 传入的参数接口必须是函数式接口\n\n2.简化lambda表达式使用方法引用::的前提条件\n\n> 1.{lambda体}中只有一个语句，并且这个语句是调用现有的对象/类的方法来完成。\n> \n> 2.lambda表达式的(形参列表)中的形参，要么作为调用方法的对象，要么作为调用方法的实参，所 有形参都要用上\n> \n> 3.在整个{lambda体}中，没有使用到除lambda表达式中额外的数据/对象等\n\n参考\n\n上文理解不了，试试这个',charsets:{cjk:!0}},{title:"Stream API",frontmatter:{title:"Stream API",date:"2022-02-11T22:10:24.000Z",permalink:"/pages/01a53c/",categories:["Java","Java8新特性"],tags:[null]},regularPath:"/20.Java/40.Java8%E6%96%B0%E7%89%B9%E6%80%A7/25.StreamAPI.html",relativePath:"20.Java/40.Java8新特性/25.StreamAPI.md",key:"v-4a35e8e8",path:"/pages/01a53c/",headers:[{level:2,title:"Stream API 简介",slug:"stream-api-简介",normalizedTitle:"stream api 简介",charIndex:2},{level:2,title:"Stream API 使用步骤",slug:"stream-api-使用步骤",normalizedTitle:"stream api 使用步骤",charIndex:270},{level:2,title:"Stream API 的特点",slug:"stream-api-的特点",normalizedTitle:"stream api 的特点",charIndex:336},{level:2,title:"Stream API 初体验",slug:"stream-api-初体验",normalizedTitle:"stream api 初体验",charIndex:529},{level:2,title:"Stream API 创建方式④",slug:"stream-api-创建方式4",normalizedTitle:"stream api 创建方式④",charIndex:1041}],headersStr:"Stream API 简介 Stream API 使用步骤 Stream API 的特点 Stream API 初体验 Stream API 创建方式④",content:'# Stream API 简介\n\nStream 是 Java8 中处理集合的关键抽象概念，它可以指定你希望对集合进行的操作，可以执行非常复杂的查找、过滤和映射数据等操作。 使用Stream API 对集合数据进行操作，就类似于使用 SQL 执行的数据库查询。也可以使用 Stream API 来并行执行操作。简言之，Stream API 提供了一种高效且易于使用的处理数据的方式。\n\nStream是数据渠道，用于操作数据源（集合、数组等）所生成的元素序列。“集合讲的是数据，负责存储数据，Stream流讲的是计算，负责处理数据！”\n\n\n# Stream API 使用步骤\n\n1.创建Stream,获取数据来源\n\n2.中间操作,处理数据\n\n3.终结操作,看最后结果\n\n\n# Stream API 的特点\n\n1.Stream的对象是不可变对象，凡是修改会产生新Stream对象，必须重新接收 2.Stream流的操作不会改变原数据 3.中间操作可以是0~n步 4.中间操作是一个延迟操作，在执行终结操作之前，中间不会执行，直到我们要执行终结操作，一口气执行 5.一旦终结就结束了，除非创建新的Stream 6.Stream不负责存储数据，只负责处理数据\n\n\n# Stream API 初体验\n\n@Test\npublic void test1(){\n\n    ArrayList<String> list = new ArrayList<>();\n    \n    Collections.addAll(list,"hello","stream","interesting","fast","comfortable");\n\n    //1.创建Stream\n    Stream<String> stream = list.stream();\n\n    //2.中间操作逻辑\n    Stream<String> e = stream.filter(s -> s.contains("e"));\n\n    //3.终结操作\n    e.forEach(System.out::println);\n\n    //连在一起书写\n    list.stream().filter(s->s.contains("e")).forEach(System.out::println);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# Stream API 创建方式④\n\n1.集合.stream()\n\n> Collection系列的集合，在Java8之后Collection接口中增加了一个方法：default Stream<E> stream() Map系列的集合，要先转为Collection系列的集合再获取Stream。\n\n2.Arrays.stream(数组)\n\n> 在数组工具类Arrays中增加了一批stream，可以根据数组来创建Stream\n\n3.Stream接口的静态方法，of方法，创建一个有限的Stream\n\n> Stream.of(T... args) Stream.of(T t)\n\n4.Stream接口的静态方法，generate和iterate，创建无限的Stream\n\n> static <T> Stream<T> generate(Supplier<T> s) static <T> Stream<T> iterate(T seed, UnaryOperator<T> f)\n\n测试代码\n\n1.集合.stream()\n\n@Test\npublic void test2(){\n    //Collection interface\n    ArrayList<String> list = new ArrayList<>();\n    Collections.addAll(list,"hello","stream","interesting","fast","comfortable");\n    Stream<String> stream = list.stream();\n\n\n    //Map interface\n    HashMap<Integer, String> map = new HashMap<>();\n    map.put(1,"Hello");\n    map.put(2,"Map");\n    map.put(3,"to");\n    map.put(4,"Stream");\n\n    //拿到所有的key，为Set集合，及Collection类型集合\n    Set<Integer> keys = map.keySet();\n    Stream<Integer> stream1 = keys.stream();\n\n    //拿到所有的value，Collection类型集合\n    Collection<String> values = map.values();\n    Stream<String> stream2 = values.stream();\n\n    //拿到所有entry,为Set集合，及Collection类型集合\n    Set<Map.Entry<Integer, String>> entries = map.entrySet();\n    Stream<Map.Entry<Integer, String>> stream3 = entries.stream();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n2.Arrays.stream(数组)\n\n@Test\npublic void test3(){\n    //BaseStream下的子接口DoubleStream ， IntStream ， LongStream ， Stream <T> \n    //基本数据类型，DoubleStream ， IntStream ， LongStream \n    int[] ints = {1,2,3,4,5};\n    IntStream stream1 = Arrays.stream(ints);\n\n    //引用数据类型，Stream <T> \n    String[] arr = {"hello","string","array","Stream"};\n    Stream<String> stream2 = Arrays.stream(arr);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n3.Stream接口的静态方法，of方法，创建一个有限的Stream\n\n@Test\npublic void test4(){\n    //使用Stream接口的静态方法of创建流，看源码很简单，对于T...，直接调用Arrays.stream()方法\n    Stream<String> stream1 = Stream.of("hello", "stream", "static", "of()", "method");\n\n    Stream<String> stream2 = Stream.of(new String("hello"));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n4.Stream接口的静态方法，generate和iterate，创建无限的Stream\n\npublic void test5(){\n    //Stream接口的静态方法，generate和iterate，创建无限的Stream\n    Stream<Double> stream1 = Stream.generate(() -> {\n        return Math.random();\n    }).limit(1090);\n\n    Stream<Integer> stream2 = Stream.generate(() -> (int) (Math.random() * 100)).limit(1000).distinct();\n\n    Stream<Double> stream3 = Stream.generate(Math::random).limit(1000);\n\n    stream2.forEach(System.out::println);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n@Test\npublic void test6(){\n    Stream<Integer> stream1 = Stream.iterate(5, t -> t + 5);\n\n    // stream1.forEach(System.out::println);\n\n    stream1.forEach(e->{\n        System.out.print(e);\n        System.out.print("、");\n    });\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n> static <T> Stream<T> iterate(T seed, UnaryOperator<T> f) iterate方法的形参有两个： 第一个是T seed，种子 第二个是UnaryOperator<T>，它是今天学习的函数式接口的一种， UnaryOperator<T>抽象方法T apply(T t) ，有参有返回值，参数和返回值 的类型一样',normalizedContent:'# stream api 简介\n\nstream 是 java8 中处理集合的关键抽象概念，它可以指定你希望对集合进行的操作，可以执行非常复杂的查找、过滤和映射数据等操作。 使用stream api 对集合数据进行操作，就类似于使用 sql 执行的数据库查询。也可以使用 stream api 来并行执行操作。简言之，stream api 提供了一种高效且易于使用的处理数据的方式。\n\nstream是数据渠道，用于操作数据源（集合、数组等）所生成的元素序列。“集合讲的是数据，负责存储数据，stream流讲的是计算，负责处理数据！”\n\n\n# stream api 使用步骤\n\n1.创建stream,获取数据来源\n\n2.中间操作,处理数据\n\n3.终结操作,看最后结果\n\n\n# stream api 的特点\n\n1.stream的对象是不可变对象，凡是修改会产生新stream对象，必须重新接收 2.stream流的操作不会改变原数据 3.中间操作可以是0~n步 4.中间操作是一个延迟操作，在执行终结操作之前，中间不会执行，直到我们要执行终结操作，一口气执行 5.一旦终结就结束了，除非创建新的stream 6.stream不负责存储数据，只负责处理数据\n\n\n# stream api 初体验\n\n@test\npublic void test1(){\n\n    arraylist<string> list = new arraylist<>();\n    \n    collections.addall(list,"hello","stream","interesting","fast","comfortable");\n\n    //1.创建stream\n    stream<string> stream = list.stream();\n\n    //2.中间操作逻辑\n    stream<string> e = stream.filter(s -> s.contains("e"));\n\n    //3.终结操作\n    e.foreach(system.out::println);\n\n    //连在一起书写\n    list.stream().filter(s->s.contains("e")).foreach(system.out::println);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# stream api 创建方式④\n\n1.集合.stream()\n\n> collection系列的集合，在java8之后collection接口中增加了一个方法：default stream<e> stream() map系列的集合，要先转为collection系列的集合再获取stream。\n\n2.arrays.stream(数组)\n\n> 在数组工具类arrays中增加了一批stream，可以根据数组来创建stream\n\n3.stream接口的静态方法，of方法，创建一个有限的stream\n\n> stream.of(t... args) stream.of(t t)\n\n4.stream接口的静态方法，generate和iterate，创建无限的stream\n\n> static <t> stream<t> generate(supplier<t> s) static <t> stream<t> iterate(t seed, unaryoperator<t> f)\n\n测试代码\n\n1.集合.stream()\n\n@test\npublic void test2(){\n    //collection interface\n    arraylist<string> list = new arraylist<>();\n    collections.addall(list,"hello","stream","interesting","fast","comfortable");\n    stream<string> stream = list.stream();\n\n\n    //map interface\n    hashmap<integer, string> map = new hashmap<>();\n    map.put(1,"hello");\n    map.put(2,"map");\n    map.put(3,"to");\n    map.put(4,"stream");\n\n    //拿到所有的key，为set集合，及collection类型集合\n    set<integer> keys = map.keyset();\n    stream<integer> stream1 = keys.stream();\n\n    //拿到所有的value，collection类型集合\n    collection<string> values = map.values();\n    stream<string> stream2 = values.stream();\n\n    //拿到所有entry,为set集合，及collection类型集合\n    set<map.entry<integer, string>> entries = map.entryset();\n    stream<map.entry<integer, string>> stream3 = entries.stream();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n2.arrays.stream(数组)\n\n@test\npublic void test3(){\n    //basestream下的子接口doublestream ， intstream ， longstream ， stream <t> \n    //基本数据类型，doublestream ， intstream ， longstream \n    int[] ints = {1,2,3,4,5};\n    intstream stream1 = arrays.stream(ints);\n\n    //引用数据类型，stream <t> \n    string[] arr = {"hello","string","array","stream"};\n    stream<string> stream2 = arrays.stream(arr);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n3.stream接口的静态方法，of方法，创建一个有限的stream\n\n@test\npublic void test4(){\n    //使用stream接口的静态方法of创建流，看源码很简单，对于t...，直接调用arrays.stream()方法\n    stream<string> stream1 = stream.of("hello", "stream", "static", "of()", "method");\n\n    stream<string> stream2 = stream.of(new string("hello"));\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n4.stream接口的静态方法，generate和iterate，创建无限的stream\n\npublic void test5(){\n    //stream接口的静态方法，generate和iterate，创建无限的stream\n    stream<double> stream1 = stream.generate(() -> {\n        return math.random();\n    }).limit(1090);\n\n    stream<integer> stream2 = stream.generate(() -> (int) (math.random() * 100)).limit(1000).distinct();\n\n    stream<double> stream3 = stream.generate(math::random).limit(1000);\n\n    stream2.foreach(system.out::println);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n@test\npublic void test6(){\n    stream<integer> stream1 = stream.iterate(5, t -> t + 5);\n\n    // stream1.foreach(system.out::println);\n\n    stream1.foreach(e->{\n        system.out.print(e);\n        system.out.print("、");\n    });\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n> static <t> stream<t> iterate(t seed, unaryoperator<t> f) iterate方法的形参有两个： 第一个是t seed，种子 第二个是unaryoperator<t>，它是今天学习的函数式接口的一种， unaryoperator<t>抽象方法t apply(t t) ，有参有返回值，参数和返回值 的类型一样',charsets:{cjk:!0}},{title:"常见函数式接口",frontmatter:{title:"常见函数式接口",date:"2022-02-11T16:21:38.000Z",permalink:"/pages/fc50b7/",categories:["Java","Java8新特性"],tags:[null]},regularPath:"/20.Java/40.Java8%E6%96%B0%E7%89%B9%E6%80%A7/20.%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3.html",relativePath:"20.Java/40.Java8新特性/20.常见函数式接口.md",key:"v-5ef541de",path:"/pages/fc50b7/",headers:[{level:2,title:"函数式接口总结",slug:"函数式接口总结",normalizedTitle:"函数式接口总结",charIndex:2},{level:2,title:"函数式接口四大代表",slug:"函数式接口四大代表",normalizedTitle:"函数式接口四大代表",charIndex:4570},{level:3,title:"Consumer<T> 消费型接口",slug:"consumer-t-消费型接口",normalizedTitle:"consumer<t> 消费型接口",charIndex:4684},{level:3,title:"Supplier<T> 供给型接口",slug:"supplier-t-供给型接口",normalizedTitle:"supplier<t> 供给型接口",charIndex:4790},{level:3,title:"Predicate<T> 判断型接口",slug:"predicate-t-判断型接口",normalizedTitle:"predicate<t> 判断型接口",charIndex:4889},{level:3,title:"Function<T,R> 功能型接口",slug:"function-t-r-功能型接口",normalizedTitle:"function&lt;t,r&gt; 功能型接口",charIndex:null},{level:3,title:"函数式接口拓展",slug:"函数式接口拓展",normalizedTitle:"函数式接口拓展",charIndex:5205},{level:3,title:"(1)`Consumer<T>`，消费型接口",slug:"_1-consumer-t-消费型接口",normalizedTitle:"(1)<code>consumer&lt;t&gt;</code>，消费型接口",charIndex:null},{level:3,title:"(2)`Supplier<T>`，供给型接口",slug:"_2-supplier-t-供给型接口",normalizedTitle:"(2)<code>supplier&lt;t&gt;</code>，供给型接口",charIndex:null},{level:3,title:"(3)`Predicate<T>`，判断型接口，断定型接口",slug:"_3-predicate-t-判断型接口-断定型接口",normalizedTitle:"(3)<code>predicate&lt;t&gt;</code>，判断型接口，断定型接口",charIndex:null},{level:3,title:"(4)`Function<T,R>`：功能型接口",slug:"_4-function-t-r-功能型接口",normalizedTitle:"(4)<code>function&lt;t,r&gt;</code>：功能型接口",charIndex:null}],headersStr:"函数式接口总结 函数式接口四大代表 Consumer<T> 消费型接口 Supplier<T> 供给型接口 Predicate<T> 判断型接口 Function<T,R> 功能型接口 函数式接口拓展 (1)`Consumer<T>`，消费型接口 (2)`Supplier<T>`，供给型接口 (3)`Predicate<T>`，判断型接口，断定型接口 (4)`Function<T,R>`：功能型接口",content:'# 函数式接口总结\n\n建议对标有@FuncationInterface的接口使用lambda表达式\n\njava.lang.Runnable\n\n点击查看\n\n@FunctionalInterface\npublic interface Runnable {\n    public abstract void run();\n}\n\n\n1\n2\n3\n4\n\n\njava.util.Comparator<T>\n\n点击查看\n\n@FunctionalInterface\npublic interface Comparator<T> {\n\n    int compare(T o1, T o2);\n\n    boolean equals(Object obj);\n\n    default Comparator<T> reversed() {\n        return Collections.reverseOrder(this);\n    }\n\n    default Comparator<T> thenComparing(Comparator<? super T> other) {\n        Objects.requireNonNull(other);\n        return (Comparator<T> & Serializable) (c1, c2) -> {\n            int res = compare(c1, c2);\n            return (res != 0) ? res : other.compare(c1, c2);\n        };\n    }\n\n    default <U> Comparator<T> thenComparing(\n            Function<? super T, ? extends U> keyExtractor,\n            Comparator<? super U> keyComparator)\n    {\n        return thenComparing(comparing(keyExtractor, keyComparator));\n    }\n\n    default <U extends Comparable<? super U>> Comparator<T> thenComparing(\n            Function<? super T, ? extends U> keyExtractor)\n    {\n        return thenComparing(comparing(keyExtractor));\n    }\n\n    default Comparator<T> thenComparingInt(ToIntFunction<? super T> keyExtractor) {\n        return thenComparing(comparingInt(keyExtractor));\n    }\n\n    default Comparator<T> thenComparingLong(ToLongFunction<? super T> keyExtractor) {\n        return thenComparing(comparingLong(keyExtractor));\n    }\n\n    default Comparator<T> thenComparingDouble(ToDoubleFunction<? super T> keyExtractor) {\n        return thenComparing(comparingDouble(keyExtractor));\n    }\n\n    public static <T extends Comparable<? super T>> Comparator<T> reverseOrder() {\n        return Collections.reverseOrder();\n    }\n\n    @SuppressWarnings("unchecked")\n    public static <T extends Comparable<? super T>> Comparator<T> naturalOrder() {\n        return (Comparator<T>) Comparators.NaturalOrderComparator.INSTANCE;\n    }\n\n    public static <T> Comparator<T> nullsFirst(Comparator<? super T> comparator) {\n        return new Comparators.NullComparator<>(true, comparator);\n    }\n\n    public static <T, U> Comparator<T> comparing(\n            Function<? super T, ? extends U> keyExtractor,\n            Comparator<? super U> keyComparator)\n    {\n        Objects.requireNonNull(keyExtractor);\n        Objects.requireNonNull(keyComparator);\n        return (Comparator<T> & Serializable)\n            (c1, c2) -> keyComparator.compare(keyExtractor.apply(c1),\n                                              keyExtractor.apply(c2));\n    }\n\n    public static <T, U extends Comparable<? super U>> Comparator<T> comparing(\n            Function<? super T, ? extends U> keyExtractor)\n    {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n            (c1, c2) -> keyExtractor.apply(c1).compareTo(keyExtractor.apply(c2));\n    }\n\n    public static <T> Comparator<T> comparingInt(ToIntFunction<? super T> keyExtractor) {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n            (c1, c2) -> Integer.compare(keyExtractor.applyAsInt(c1), keyExtractor.applyAsInt(c2));\n    }\n\n    public static <T> Comparator<T> comparingLong(ToLongFunction<? super T> keyExtractor) {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n            (c1, c2) -> Long.compare(keyExtractor.applyAsLong(c1), keyExtractor.applyAsLong(c2));\n    }\n\n    public static<T> Comparator<T> comparingDouble(ToDoubleFunction<? super T> keyExtractor) {\n        Objects.requireNonNull(keyExtractor);\n        return (Comparator<T> & Serializable)\n            (c1, c2) -> Double.compare(keyExtractor.applyAsDouble(c1), keyExtractor.applyAsDouble(c2));\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n\n\njava.io.FileFilter\n\n下面两个接口虽然只有一个抽象方法，但是没有标识@FuncationInterface注解\n\njava.lang.Comparable<T>\n\n点击查看\n\npublic interface Comparable<T> {\n    public int compareTo(T o);\n}\n\n\n1\n2\n3\n\n\njava.lang.Iterable<T>\n\n点击查看\n\npublic interface Iterable<T> {\n    default void forEach(Consumer<? super T> action) {\n        Objects.requireNonNull(action);\n        for (T t : this) {\n            action.accept(t);\n        }\n    }\n    default Spliterator<T> spliterator() {\n        return Spliterators.spliteratorUnknownSize(iterator(), 0);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 函数式接口四大代表\n\nJDK1.8中新增加了很多函数式接口给我们使用，在java.util.function包中\n\nConsumer<T> Supplier<T> Predicate<T> Funcation<T,R>\n\n\n# Consumer<T> 消费型接口\n\n抽象方法：\n\n> void accept(T t)\n\n特点：\n\n> 有参无返回值，调用这个方法，需要给他传递实参，但是得不到返回值，“有去无回”，因此称为消费型接口\n\n\n# Supplier<T> 供给型接口\n\n抽象方法：\n\n> T get()\n\n特点：\n\n> 无参有返回值，调用者方法，不需要传递参数，但是可以得到一个返回值，“空手套白狼”，因此称为供给型接口\n\n\n# Predicate<T> 判断型接口\n\n抽象方法：\n\n> boolean test(T t)\n\n特点：\n\n> 有参有返回值，但是返回值类型是boolean 调用这个方法，需要传递参数，这个参数传递进去之后，在test方法肯定是用于条件判断，满足xx条件返回true，否则返回false。\n\n\n# Function<T,R> 功能型接口\n\n抽象方法：\n\n> R apply(T t)\n\n特点：\n\n> 有参有返回值，参数的类型和返回值的类型不确定，并且可能不一样\n> \n> 调用这个方法，需要传递参数，也可以得到一个返回值，但是参数的类型和返回值的类型，需要在使用时才能确定，什么都有可能。所以这个方法相当于只是完成一个功能。\n\n\n# 函数式接口拓展\n\n\n# (1)Consumer<T>，消费型接口\n\n接口名                    抽象方法                             描述\nConsumer<T>            void accept(T t)                 接收一个对象用于完成功能\nBiConsumer<T,U>        void accept(T t, U u)            接收两个对象用于完成功能\nDoubleConsumer         void accept(double value)        接收一个double值\nIntConsumer            void accept(int value)           接收一个int值\nLongConsumer           void accept(long value)          接收一个long值\nObjDoubleConsumer<T>   void accept(T t, double value)   接收一个对象和一个double值\nObjIntConsumer<T>      void accept(T t, int value)      接收一个对象和一个int值\nObjLongConsumer<T>     void accept(T t, long value)     接收一个对象和一个long值\n\n> bi：binary二元的，两个的\n\n\n# (2)Supplier<T>，供给型接口\n\n接口名               抽象方法                     描述\nSupplier<T>       T get()                  返回一个对象\nBooleanSupplier   boolean getAsBoolean()   返回一个boolean值\nDoubleSupplier    double getAsDouble()     返回一个double值\nIntSupplier       int getAsInt()           返回一个int值\nLongSupplier      long getAsLong()         返回一个long值\n\n\n# (3)Predicate<T>，判断型接口，断定型接口\n\n接口名                抽象方法                         描述\nPredicate<T>       boolean test(T t)            接收一个对象\nBiPredicate<T,U>   boolean test(T t, U u)       接收两个对象\nDoublePredicate    boolean test(double value)   接收一个double值\nIntPredicate       boolean test(int value)      接收一个int值\nLongPredicate      boolean test(long value)     接收一个long值\n\n\n# (4)Function<T,R>：功能型接口\n\n接口名                       抽象方法                                              描述\nFunction<T,R>             R apply(T t)                                      接收一个T类型对象，返回一个R类型对象结果\nUnaryOperator<T>          T apply(T t)                                      接收一个T类型对象，返回一个T类型对象结果\nDoubleFunction<R>         R apply(double value)                             接收一个double值，返回一个R类型对象\nIntFunction<R>            R apply(int value)                                接收一个int值，返回一个R类型对象\nLongFunction<R>           R apply(long value)                               接收一个long值，返回一个R类型对象\nToDoubleFunction<T>       double applyAsDouble(T value)                     接收一个T类型对象，返回一个double\nToIntFunction<T>          int applyAsInt(T value)                           接收一个T类型对象，返回一个int\nToLongFunction<T>         long applyAsLong(T value)                         接收一个T类型对象，返回一个long\nDoubleToIntFunction       int applyAsInt(double value)                      接收一个double值，返回一个int结果\nDoubleToLongFunction      long applyAsLong(double value)                    接收一个double值，返回一个long结果\nIntToDoubleFunction       double applyAsDouble(int value)                   接收一个int值，返回一个double结果\nIntToLongFunction         long applyAsLong(int value)                       接收一个int值，返回一个long结果\nLongToDoubleFunction      double applyAsDouble(long value)                  接收一个long值，返回一个double结果\nLongToIntFunction         int applyAsInt(long value)                        接收一个long值，返回一个int结果\n`DoubleUnaryOperator      double applyAsDouble(double operand)              接收一个double值，返回一个double\nIntUnaryOperator`         int applyAsInt(int operand)                       接收一个int值，返回一个int结果\nLongUnaryOperator         long applyAsLong(long operand)                    接收一个long值，返回一个long结果\n                                                                            \nBiFunction<T,U,R>         R apply(T t, U u)                                 接收一个T类型和一个U类型对象，返回一个R类型对象结果\nBinaryOperator<T>         T apply(T t, T u)                                 接收两个T类型对象，返回一个T类型对象结果\nToDoubleBiFunction<T,U>   double applyAsDouble(T t, U u)                    接收一个T类型和一个U类型对象，返回一个double\nToIntBiFunction<T,U>      int applyAsInt(T t, U u)                          接收一个T类型和一个U类型对象，返回一个int\nToLongBiFunction<T,U>     long applyAsLong(T t, U u)                        接收一个T类型和一个U类型对象，返回一个long\nDoubleBinaryOperator      double applyAsDouble(double left, double right)   接收两个double值，返回一个double结果\nIntBinaryOperator         int applyAsInt(int left, int right)               接收两个int值，返回一个int结果\nLongBinaryOperator        long applyAsLong(long left, long right)           接收两个long值，返回一个long结果\n\n> UnaryOperator：一元的，一个参数一个返回值，参数类型和返回值类型一样 BinaryOperator = Bi + UnaryOperator，有两个参数，一个返回值，参数和返回值的类型都是一样的\n\n当我们在自定义函数式接口的时候，应该优先考虑使用以上函数式接口',normalizedContent:'# 函数式接口总结\n\n建议对标有@funcationinterface的接口使用lambda表达式\n\njava.lang.runnable\n\n点击查看\n\n@functionalinterface\npublic interface runnable {\n    public abstract void run();\n}\n\n\n1\n2\n3\n4\n\n\njava.util.comparator<t>\n\n点击查看\n\n@functionalinterface\npublic interface comparator<t> {\n\n    int compare(t o1, t o2);\n\n    boolean equals(object obj);\n\n    default comparator<t> reversed() {\n        return collections.reverseorder(this);\n    }\n\n    default comparator<t> thencomparing(comparator<? super t> other) {\n        objects.requirenonnull(other);\n        return (comparator<t> & serializable) (c1, c2) -> {\n            int res = compare(c1, c2);\n            return (res != 0) ? res : other.compare(c1, c2);\n        };\n    }\n\n    default <u> comparator<t> thencomparing(\n            function<? super t, ? extends u> keyextractor,\n            comparator<? super u> keycomparator)\n    {\n        return thencomparing(comparing(keyextractor, keycomparator));\n    }\n\n    default <u extends comparable<? super u>> comparator<t> thencomparing(\n            function<? super t, ? extends u> keyextractor)\n    {\n        return thencomparing(comparing(keyextractor));\n    }\n\n    default comparator<t> thencomparingint(tointfunction<? super t> keyextractor) {\n        return thencomparing(comparingint(keyextractor));\n    }\n\n    default comparator<t> thencomparinglong(tolongfunction<? super t> keyextractor) {\n        return thencomparing(comparinglong(keyextractor));\n    }\n\n    default comparator<t> thencomparingdouble(todoublefunction<? super t> keyextractor) {\n        return thencomparing(comparingdouble(keyextractor));\n    }\n\n    public static <t extends comparable<? super t>> comparator<t> reverseorder() {\n        return collections.reverseorder();\n    }\n\n    @suppresswarnings("unchecked")\n    public static <t extends comparable<? super t>> comparator<t> naturalorder() {\n        return (comparator<t>) comparators.naturalordercomparator.instance;\n    }\n\n    public static <t> comparator<t> nullsfirst(comparator<? super t> comparator) {\n        return new comparators.nullcomparator<>(true, comparator);\n    }\n\n    public static <t, u> comparator<t> comparing(\n            function<? super t, ? extends u> keyextractor,\n            comparator<? super u> keycomparator)\n    {\n        objects.requirenonnull(keyextractor);\n        objects.requirenonnull(keycomparator);\n        return (comparator<t> & serializable)\n            (c1, c2) -> keycomparator.compare(keyextractor.apply(c1),\n                                              keyextractor.apply(c2));\n    }\n\n    public static <t, u extends comparable<? super u>> comparator<t> comparing(\n            function<? super t, ? extends u> keyextractor)\n    {\n        objects.requirenonnull(keyextractor);\n        return (comparator<t> & serializable)\n            (c1, c2) -> keyextractor.apply(c1).compareto(keyextractor.apply(c2));\n    }\n\n    public static <t> comparator<t> comparingint(tointfunction<? super t> keyextractor) {\n        objects.requirenonnull(keyextractor);\n        return (comparator<t> & serializable)\n            (c1, c2) -> integer.compare(keyextractor.applyasint(c1), keyextractor.applyasint(c2));\n    }\n\n    public static <t> comparator<t> comparinglong(tolongfunction<? super t> keyextractor) {\n        objects.requirenonnull(keyextractor);\n        return (comparator<t> & serializable)\n            (c1, c2) -> long.compare(keyextractor.applyaslong(c1), keyextractor.applyaslong(c2));\n    }\n\n    public static<t> comparator<t> comparingdouble(todoublefunction<? super t> keyextractor) {\n        objects.requirenonnull(keyextractor);\n        return (comparator<t> & serializable)\n            (c1, c2) -> double.compare(keyextractor.applyasdouble(c1), keyextractor.applyasdouble(c2));\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n\n\njava.io.filefilter\n\n下面两个接口虽然只有一个抽象方法，但是没有标识@funcationinterface注解\n\njava.lang.comparable<t>\n\n点击查看\n\npublic interface comparable<t> {\n    public int compareto(t o);\n}\n\n\n1\n2\n3\n\n\njava.lang.iterable<t>\n\n点击查看\n\npublic interface iterable<t> {\n    default void foreach(consumer<? super t> action) {\n        objects.requirenonnull(action);\n        for (t t : this) {\n            action.accept(t);\n        }\n    }\n    default spliterator<t> spliterator() {\n        return spliterators.spliteratorunknownsize(iterator(), 0);\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 函数式接口四大代表\n\njdk1.8中新增加了很多函数式接口给我们使用，在java.util.function包中\n\nconsumer<t> supplier<t> predicate<t> funcation<t,r>\n\n\n# consumer<t> 消费型接口\n\n抽象方法：\n\n> void accept(t t)\n\n特点：\n\n> 有参无返回值，调用这个方法，需要给他传递实参，但是得不到返回值，“有去无回”，因此称为消费型接口\n\n\n# supplier<t> 供给型接口\n\n抽象方法：\n\n> t get()\n\n特点：\n\n> 无参有返回值，调用者方法，不需要传递参数，但是可以得到一个返回值，“空手套白狼”，因此称为供给型接口\n\n\n# predicate<t> 判断型接口\n\n抽象方法：\n\n> boolean test(t t)\n\n特点：\n\n> 有参有返回值，但是返回值类型是boolean 调用这个方法，需要传递参数，这个参数传递进去之后，在test方法肯定是用于条件判断，满足xx条件返回true，否则返回false。\n\n\n# function<t,r> 功能型接口\n\n抽象方法：\n\n> r apply(t t)\n\n特点：\n\n> 有参有返回值，参数的类型和返回值的类型不确定，并且可能不一样\n> \n> 调用这个方法，需要传递参数，也可以得到一个返回值，但是参数的类型和返回值的类型，需要在使用时才能确定，什么都有可能。所以这个方法相当于只是完成一个功能。\n\n\n# 函数式接口拓展\n\n\n# (1)consumer<t>，消费型接口\n\n接口名                    抽象方法                             描述\nconsumer<t>            void accept(t t)                 接收一个对象用于完成功能\nbiconsumer<t,u>        void accept(t t, u u)            接收两个对象用于完成功能\ndoubleconsumer         void accept(double value)        接收一个double值\nintconsumer            void accept(int value)           接收一个int值\nlongconsumer           void accept(long value)          接收一个long值\nobjdoubleconsumer<t>   void accept(t t, double value)   接收一个对象和一个double值\nobjintconsumer<t>      void accept(t t, int value)      接收一个对象和一个int值\nobjlongconsumer<t>     void accept(t t, long value)     接收一个对象和一个long值\n\n> bi：binary二元的，两个的\n\n\n# (2)supplier<t>，供给型接口\n\n接口名               抽象方法                     描述\nsupplier<t>       t get()                  返回一个对象\nbooleansupplier   boolean getasboolean()   返回一个boolean值\ndoublesupplier    double getasdouble()     返回一个double值\nintsupplier       int getasint()           返回一个int值\nlongsupplier      long getaslong()         返回一个long值\n\n\n# (3)predicate<t>，判断型接口，断定型接口\n\n接口名                抽象方法                         描述\npredicate<t>       boolean test(t t)            接收一个对象\nbipredicate<t,u>   boolean test(t t, u u)       接收两个对象\ndoublepredicate    boolean test(double value)   接收一个double值\nintpredicate       boolean test(int value)      接收一个int值\nlongpredicate      boolean test(long value)     接收一个long值\n\n\n# (4)function<t,r>：功能型接口\n\n接口名                       抽象方法                                              描述\nfunction<t,r>             r apply(t t)                                      接收一个t类型对象，返回一个r类型对象结果\nunaryoperator<t>          t apply(t t)                                      接收一个t类型对象，返回一个t类型对象结果\ndoublefunction<r>         r apply(double value)                             接收一个double值，返回一个r类型对象\nintfunction<r>            r apply(int value)                                接收一个int值，返回一个r类型对象\nlongfunction<r>           r apply(long value)                               接收一个long值，返回一个r类型对象\ntodoublefunction<t>       double applyasdouble(t value)                     接收一个t类型对象，返回一个double\ntointfunction<t>          int applyasint(t value)                           接收一个t类型对象，返回一个int\ntolongfunction<t>         long applyaslong(t value)                         接收一个t类型对象，返回一个long\ndoubletointfunction       int applyasint(double value)                      接收一个double值，返回一个int结果\ndoubletolongfunction      long applyaslong(double value)                    接收一个double值，返回一个long结果\ninttodoublefunction       double applyasdouble(int value)                   接收一个int值，返回一个double结果\ninttolongfunction         long applyaslong(int value)                       接收一个int值，返回一个long结果\nlongtodoublefunction      double applyasdouble(long value)                  接收一个long值，返回一个double结果\nlongtointfunction         int applyasint(long value)                        接收一个long值，返回一个int结果\n`doubleunaryoperator      double applyasdouble(double operand)              接收一个double值，返回一个double\nintunaryoperator`         int applyasint(int operand)                       接收一个int值，返回一个int结果\nlongunaryoperator         long applyaslong(long operand)                    接收一个long值，返回一个long结果\n                                                                            \nbifunction<t,u,r>         r apply(t t, u u)                                 接收一个t类型和一个u类型对象，返回一个r类型对象结果\nbinaryoperator<t>         t apply(t t, t u)                                 接收两个t类型对象，返回一个t类型对象结果\ntodoublebifunction<t,u>   double applyasdouble(t t, u u)                    接收一个t类型和一个u类型对象，返回一个double\ntointbifunction<t,u>      int applyasint(t t, u u)                          接收一个t类型和一个u类型对象，返回一个int\ntolongbifunction<t,u>     long applyaslong(t t, u u)                        接收一个t类型和一个u类型对象，返回一个long\ndoublebinaryoperator      double applyasdouble(double left, double right)   接收两个double值，返回一个double结果\nintbinaryoperator         int applyasint(int left, int right)               接收两个int值，返回一个int结果\nlongbinaryoperator        long applyaslong(long left, long right)           接收两个long值，返回一个long结果\n\n> unaryoperator：一元的，一个参数一个返回值，参数类型和返回值类型一样 binaryoperator = bi + unaryoperator，有两个参数，一个返回值，参数和返回值的类型都是一样的\n\n当我们在自定义函数式接口的时候，应该优先考虑使用以上函数式接口',charsets:{cjk:!0}},{title:"GoHW",frontmatter:{title:"GoHW",date:"2022-02-10T14:55:14.000Z",permalink:"/pages/c1c484/",categories:["Go"],tags:[null]},regularPath:"/23.Go/10.GoHW.html",relativePath:"23.Go/10.GoHW.md",key:"v-64e809bf",path:"/pages/c1c484/",headers:[{level:2,title:"Goland创建Go工程",slug:"goland创建go工程",normalizedTitle:"goland创建go工程",charIndex:2},{level:2,title:"Go 基础语法快速上手",slug:"go-基础语法快速上手",normalizedTitle:"go 基础语法快速上手",charIndex:29}],headersStr:"Goland创建Go工程 Go 基础语法快速上手",content:"# Goland创建Go工程\n\n创建一个Go工程\n\n\n# Go 基础语法快速上手\n\n8小时转职Golang",normalizedContent:"# goland创建go工程\n\n创建一个go工程\n\n\n# go 基础语法快速上手\n\n8小时转职golang",charsets:{cjk:!0}},{title:"字符串相关",frontmatter:{title:"字符串相关",date:"2022-02-11T21:14:32.000Z",permalink:"/pages/b19c02/",categories:["Java","源码记录"],tags:[null]},regularPath:"/20.Java/60.Java%E6%BA%90%E7%A0%81%E8%AE%B0%E5%BD%95/10.%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%85%B3.html",relativePath:"20.Java/60.Java源码记录/10.字符串相关.md",key:"v-069e0ca2",path:"/pages/b19c02/",headers:[{level:2,title:"toString()源码",slug:"tostring-源码",normalizedTitle:"tostring()源码",charIndex:2}],headersStr:"toString()源码",content:'# toString()源码\n\nArrays数组工具类的toString()方法源码\n\n点击查看\n\npublic static String toString(Object[] a) {\n    if (a == null)\n        return "null";\n\n    int iMax = a.length - 1;\n    if (iMax == -1)\n        return "[]";\n\n    StringBuilder b = new StringBuilder();\n    b.append(\'[\');\n    for (int i = 0; ; i++) {\n        b.append(String.valueOf(a[i]));\n        if (i == iMax)\n            return b.append(\']\').toString();\n        b.append(", ");\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',normalizedContent:'# tostring()源码\n\narrays数组工具类的tostring()方法源码\n\n点击查看\n\npublic static string tostring(object[] a) {\n    if (a == null)\n        return "null";\n\n    int imax = a.length - 1;\n    if (imax == -1)\n        return "[]";\n\n    stringbuilder b = new stringbuilder();\n    b.append(\'[\');\n    for (int i = 0; ; i++) {\n        b.append(string.valueof(a[i]));\n        if (i == imax)\n            return b.append(\']\').tostring();\n        b.append(", ");\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n',charsets:{cjk:!0}},{title:"MySQL基础",frontmatter:{title:"MySQL基础",date:"2022-01-15T16:09:18.000Z",permalink:"/pages/fd06c0/",categories:["数据库","MySQL"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/10.MySQL/10.MySQL%E5%9F%BA%E7%A1%80.html",relativePath:"25.数据库/10.MySQL/10.MySQL基础.md",key:"v-5bee6a51",path:"/pages/fd06c0/",headersStr:null,content:"# CRUD基础语法",normalizedContent:"# crud基础语法",charsets:{cjk:!0}},{title:"数据库设计规范",frontmatter:{title:"数据库设计规范",date:"2022-01-28T12:16:50.000Z",permalink:"/pages/2b5d14/",categories:["数据库","MySQL"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/10.MySQL/40.%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E8%A7%84%E8%8C%83.html",relativePath:"25.数据库/10.MySQL/40.数据库设计规范.md",key:"v-5fd909e1",path:"/pages/2b5d14/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Stream",frontmatter:{title:"Stream",date:"2022-02-12T13:22:36.000Z",permalink:"/pages/ff7d53/",categories:["Java","Java源码记录"],tags:[null]},regularPath:"/20.Java/60.Java%E6%BA%90%E7%A0%81%E8%AE%B0%E5%BD%95/20.Stream.html",relativePath:"20.Java/60.Java源码记录/20.Stream.md",key:"v-bcb67630",path:"/pages/ff7d53/",headers:[{level:2,title:"Stream接口",slug:"stream接口",normalizedTitle:"stream接口",charIndex:2},{level:3,title:"静态方法 of()",slug:"静态方法-of",normalizedTitle:"静态方法 of()",charIndex:15}],headersStr:"Stream接口 静态方法 of()",content:'# Stream接口\n\n\n# 静态方法 of()\n\npublic static<T> Stream<T> of(T t) {\n    return StreamSupport.stream(new Streams.StreamBuilderImpl<>(t), false);\n}\n\n@SafeVarargs\n@SuppressWarnings("varargs") // Creating a stream from an array is safe\npublic static<T> Stream<T> of(T... values) {\n    return Arrays.stream(values);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',normalizedContent:'# stream接口\n\n\n# 静态方法 of()\n\npublic static<t> stream<t> of(t t) {\n    return streamsupport.stream(new streams.streambuilderimpl<>(t), false);\n}\n\n@safevarargs\n@suppresswarnings("varargs") // creating a stream from an array is safe\npublic static<t> stream<t> of(t... values) {\n    return arrays.stream(values);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n',charsets:{cjk:!0}},{title:"MySQL进阶",frontmatter:{title:"MySQL进阶",date:"2022-01-15T16:09:18.000Z",permalink:"/pages/659d0f/",categories:["数据库","MySQL"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/10.MySQL/20.MySQL%E8%BF%9B%E9%98%B6.html",relativePath:"25.数据库/10.MySQL/20.MySQL进阶.md",key:"v-7ee600f6",path:"/pages/659d0f/",headers:[{level:2,title:"安装使用",slug:"安装使用",normalizedTitle:"安装使用",charIndex:16},{level:3,title:"1.清理环境",slug:"_1-清理环境",normalizedTitle:"1.清理环境",charIndex:25},{level:3,title:"2.安装+初始化",slug:"_2-安装-初始化",normalizedTitle:"2.安装+初始化",charIndex:1041},{level:3,title:"3.自启动+临时密码",slug:"_3-自启动-临时密码",normalizedTitle:"3.自启动+临时密码",charIndex:1940},{level:3,title:"4.字符集问题",slug:"_4-字符集问题",normalizedTitle:"4.字符集问题",charIndex:2527},{level:3,title:"5.目录结构",slug:"_5-目录结构",normalizedTitle:"5.目录结构",charIndex:3059},{level:2,title:"用户权限",slug:"用户权限",normalizedTitle:"用户权限",charIndex:4093},{level:3,title:"1.查看权限表",slug:"_1-查看权限表",normalizedTitle:"1.查看权限表",charIndex:4398},{level:3,title:"2.创建用户",slug:"_2-创建用户",normalizedTitle:"2.创建用户",charIndex:4558},{level:3,title:"3.修改密码",slug:"_3-修改密码",normalizedTitle:"3.修改密码",charIndex:5157},{level:3,title:"4.修改用户名",slug:"_4-修改用户名",normalizedTitle:"4.修改用户名",charIndex:5354},{level:3,title:"5.删除用户",slug:"_5-删除用户",normalizedTitle:"5.删除用户",charIndex:5475},{level:3,title:"6.分配权限",slug:"_6-分配权限",normalizedTitle:"6.分配权限",charIndex:5629},{level:3,title:"7.撤销权限",slug:"_7-撤销权限",normalizedTitle:"7.撤销权限",charIndex:6138},{level:3,title:"8.查看权限",slug:"_8-查看权限",normalizedTitle:"8.查看权限",charIndex:6382},{level:2,title:"存储引擎",slug:"存储引擎",normalizedTitle:"存储引擎",charIndex:95},{level:3,title:"1.MySQL架构图",slug:"_1-mysql架构图",normalizedTitle:"1.mysql架构图",charIndex:6573},{level:3,title:"2.开启MySQL缓存",slug:"_2-开启mysql缓存",normalizedTitle:"2.开启mysql缓存",charIndex:6590},{level:3,title:"3.缓存小栗子",slug:"_3-缓存小栗子",normalizedTitle:"3.缓存小栗子",charIndex:10912},{level:3,title:"4.InnoDB",slug:"_4-innodb",normalizedTitle:"4.innodb",charIndex:15759},{level:3,title:"5.MyISAM",slug:"_5-myisam",normalizedTitle:"5.myisam",charIndex:16187},{level:3,title:"6.其他存储引擎",slug:"_6-其他存储引擎",normalizedTitle:"6.其他存储引擎",charIndex:16593},{level:2,title:"SQL执行顺序",slug:"sql执行顺序",normalizedTitle:"sql执行顺序",charIndex:17431},{level:3,title:"1.完整sql执行流程",slug:"_1-完整sql执行流程",normalizedTitle:"1.完整sql执行流程",charIndex:17443},{level:3,title:"2.再探join",slug:"_2-再探join",normalizedTitle:"2.再探join",charIndex:19146}],headersStr:"安装使用 1.清理环境 2.安装+初始化 3.自启动+临时密码 4.字符集问题 5.目录结构 用户权限 1.查看权限表 2.创建用户 3.修改密码 4.修改用户名 5.删除用户 6.分配权限 7.撤销权限 8.查看权限 存储引擎 1.MySQL架构图 2.开启MySQL缓存 3.缓存小栗子 4.InnoDB 5.MyISAM 6.其他存储引擎 SQL执行顺序 1.完整sql执行流程 2.再探join",content:"# MySQL常用总结\n\n\n# 安装使用\n\n\n# 1.清理环境\n\n卸载MariaDB\n\n> 因为一些Linux上会自带MariaDB，它是MySQL的二次开发版本\n> \n> MariaDB的存储引擎使用XtraDB\n\n#是否存在MariaDB\nrpm -qa|grep mariadb\n\n#卸载MariaDB\nrpm -e --nodeps mariadb-libs\n\n\n1\n2\n3\n4\n5\n\n\n卸载MySQL5.5\n\n> 若以前安装过MySQL5.5\n\n#查看要卸载的MySQL名称 -i表示不区分大小写\nrpm -qa|grep -i mysql\n\n#关闭MySQL服务\nservice msyql stop\n\n#卸载客户端\nrpm -e MySQL-client-5.5.54-1.linux2.6.x86_64\n\n#卸载服务端\nrpm -e MySQL-server-5.5.54-1.linux2.6.x86_64\n\n#查看是否有卸载残留\nwhereis mysql \n\n#删除卸载残留 尤其其中/var/lib/mysql一定要确保删除\nfind / -iname 'mysql'\n\n#删除/etc/my.cnf文件\nrm /etc/my.cnf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n卸载MySQL5.7\n\n#关闭服务\nsystemctl stop mysqld\n\n#和安装相反的顺序删除rpm\nrpm -e mysql-community-server-5.7.28-1.el7.x86_64\nrpm -e mysql-community-client-5.7.28-1.el7.x86_64\nrpm -e mysql-community-libs-5.7.28-1.el7.x86_64\nrpm -e mysql-community-common-5.7.28-1.el7.x86_64\n\n#查看是否有卸载残留\nwhereis mysql\nrm -rvf xxx\n\n#删除/etc/my.cnf\nrm /etc/my.cnf\n\n#查询是否还有什么残留信息  尤其其中/var/lib/mysql一定要确保删除\nfind / -iname mysql\nrm -rvf xxx\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 2.安装+初始化\n\nMySQL下载\n\nMySQL官网 https://www.mysql.com\n\n下载所需要的包\n\nrpm -ivh mysql-community-common-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nMySQL Linux中安装\n\n拷贝包到/opt目录下\n\n执行rpm安装命令\n\nrpm -ivh mysql-community-common-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n查看是否安装成功\n\n#查看MySQL版本\nmysqladmin --version\n\n#查看软件包是否安装成功\nrpm -qa|grep mysql\n\n\n1\n2\n3\n4\n5\n\n\n初始化MySQL\n\n#root身份运行，初始化MySQL生成临时密码\nmysqld --initialize --user=mysql\n\n\n1\n2\n\n\n> --initialize 选项默认以“安全”模式来初始化，会为 root 用户生成一个密码并将该密码标记为过期，登录后你要设置一个新的密码\n\n#查看生成的临时密码\ncat /var/log/mysqld.log\n\n\n1\n2\n\n\n> root@localhost: 后面就是初始化的密码\n\n\n# 3.自启动+临时密码\n\nMySQL服务管理命令\n\n#查看状态\nsystemctl status mysqld.service\n\n#启动\nsystemctl start mysqld.service\n\n#关闭\nsystemctl stop mysqld.service\n\n#重启\nsystemctl restart mysqld.service\n\n#是否自启动查询\nsystemctl list-unit-files|grep mysqld.service\n\n#开启自启动\nsystemctl enable mysqld.service\n\n#关闭自启动\nsystemctl disable mysqld.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n登录MySQL修改临时密码\n\n#登录MySQL,输入临时密码\nmysql -uroot -p\n\n#修改临时密码\nALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password';\n\nALTER USER 'root'@'localhost' IDENTIFIED BY '123456';\n\n#quit退出，使用新密码登录即可\nquit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 4.字符集问题\n\n查看字符集\n\nshow variables like 'character%'; \n\nshow variables like '%char%';\n\n\n1\n2\n3\n\n\n修改字符集\n\n#编辑配置文件\nvim /etc/my.cnf\n\n#添加默认字符集设置\n[client]\ndefault-character-set=utf8 # 客户端字符集\n[mysqld]\ncharacter-set-server=utf8 # 必选 服务器端字符集\ncollation-server=utf8_general_ci # 服务器端校对规则\n\n#重启MySQL\nsystemctl restart mysqld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n修改以前库的字符集\n\nalter database mydb character set 'utf8';\n\n\n1\n\n\n修改以前表的字符集\n\nalter table dept convert to character set 'utf8';\n\n\n1\n\n\n> 但是原有的数据如果是用非'utf8'编码的话，数据本身编码不会发生改变。\n> \n> 已有数据需要导出或删除，然后重新插入。\n\n\n# 5.目录结构\n\n参数             路径                                                           解释                  备注\n--basedir      /usr/bin                                                     相关命令目录              mysqladmin mysqldump等命令\n--datadir      /var/lib/mysql/                                              mysql数据库文件的存放路径     \n--plugin-dir   /usr/lib64/mysql/plugin                                      mysql插件存放路径         \n--log-error    /var/log/mysqld.log                                          mysql错误日志路径         \n--pid-file     /var/run/mysqld/mysqld.pid                                   进程pid文件             \n--socket       /var/lib/mysql/mysql.sock                                    本地连接时用的unix套接字文 件   \n               /usr/share/mysql                                             配置文件目录              mysql脚本及配置文件\n               /etc/systemd/system/multi-user.target.wants/mysqld.service   服务启停相关脚本            \n               /etc/my.cnf                                                  mysql配置文件           cat /etc/my.cnf\n\n\n# 用户权限\n\n> MySQL的权限管理通过四张表实现 user,db,tables_priv,columns_priv\n\n> 全局权限表user,实现root的权限设置\n> \n> 库级权限表db,实现当个库的权限设置\n> \n> 表级权限表tables_priv，实现单张表的权限设置\n> \n> 列级权限表columns_priv，实现单个字段的权限设置\n\n当MySQL用户通过身份认证后，进行权限分配，分别按照user表，db表，tables_pirv表，columns_priv表的顺序验证加载权限\n\n> 如果查询权限为N，则继续往下查询，查询都为Y，则停止查询，否则查到最后column_priv表\n\n\n# 1.查看权限表\n\nuse mysql;\n\n#查看user表结构\ndesc user;\n\n#查看用户权限信息\nselect * from user \\G;\n\nselect user,host,authentication_string,plugin from user;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 2.创建用户\n\n> username：你将创建的用户名\n> \n> host：指定登录主机，不指定，默认为'%'\n> \n>  * % --表示所有远程通过TCP方式连接\n>  * IP --地址 如 (192.168.1.2,127.0.0.1) 通过制定ip地址进行的TCP方式的连接\n>  * 机器名 --通过制定网络中的机器名进行的TCP方式的连接\n>  * ::1 --IPv6的本地ip地址，等同于IPv4的 127.0.0.1\n>  * localhost --本地方式通过命令行方式连接 ，如mysql -u xxx -p xxx 方式的连接。\n\n#用户创建命令\n# --\x3e CREATE USER 'username'@'host' IDENTIFIED BY 'password';\n\ncreate user viki1@'localhost' identified by '123456';\n\n#查看user表\nselect host,user,authentication_string,plugin from user;\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n> 注意：密码相同，使用mysql_native_password插件加密后密文相同,加密算法为MYSQLSHA1\n> \n> MySQL5.7密码保存在 authentication_string 字段中\n\n\n# 3.修改密码\n\n#修改当前用户密码\nset password = password('111111');\n\n#修改指定用户密码\nupdate msyql.user set authentication_string = password('666666') where user='viki1';\n\n#刷新权限\nflush privileges;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 4.修改用户名\n\n#修改指定用户名，单表操作\nupdate mysql.user set user='kimi2' where user='viki1';\n\n#刷新权限\nflush privileges; \n\n\n1\n2\n3\n4\n5\n\n\n\n# 5.删除用户\n\n#删除用户用drop\ndrop user kimi@'localhost'\n#如果登录方式为%，可以省略不写\ndrop user viki1\n\n\n1\n2\n3\n4\n\n\n> 不能通过delete from user u where user='li4' 进行删除，系统会有残留信息保留。\n\n\n# 6.分配权限\n\n使用grant命令分配指定权限，用户如果不存在则创建\n\n#给viki1分配testdb这个库下的所有表的CRUD权限(用户名@主机名)\ngrant select,insert,delete,update on testdb.* to viki1@'%';\n\n#给Viki1分配可以给别人设置权限,后加（with grant option）\ngrant select,insert,delete,update on testdb.* to viki1@'%' with grant option;\n\n#刷新一下\nflush privileges;\n\n#查看刚刚给viki1分配的权限,查看db表是因为分配的是testdb库\nselect * from db where user='viki1' \\G;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n使用grant命令分配所有库表权限\n\n#创建一个用户并分配所有库表的权限\ngrant all privileges on *.* to coco@'localhost' identified by '123456';\n\n\n1\n2\n\n\n\n# 7.撤销权限\n\n使用revoke撤销权限\n\n# revoke 权限1,权限2,…权限n on 数据库名称.表名称 from 用户名@用户地址 ;\n\n#撤销所有库表的权限\nrevoke all privileges on *.* from coco@'localhost';\n\n#撤销对应库下的所有表的CRUD权限\nrevoke select,insert,update,delete on testdb.* from viki1@'%';\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 8.查看权限\n\n#查看当前用户权限\nshow grants;\n\n#查看某个用户的全局权限\nselect * from mysql.user where user = 'viki1' \\G;\n\n#查看某个用户某个表的权限\nselect * from mysql.tables_priv where = 'coco' ;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 存储引擎\n\n\n# 1.MySQL架构图\n\n\n\n\n# 2.开启MySQL缓存\n\n修改/etc/my.cnf配置文件\n\n#新增一行\nquery_cache_tpye = 1\n\n#重启MySQL服务\nsystemctl restart mysqld\n\n\n1\n2\n3\n4\n5\n\n\n再开启查询执行计划\n\n> 可以查询SQL语句底层的执行过程\n\n#查看缓存是否成功开启\nshow variables like '%cache%';\n>>>\n+--------------------------------+----------------------+\n| Variable_name                  | Value                |\n+--------------------------------+----------------------+\n| binlog_cache_size              | 32768                |\n| binlog_stmt_cache_size         | 32768                |\n| have_query_cache               | YES                  |\n| host_cache_size                | 279                  |\n| innodb_disable_sort_file_cache | OFF                  |\n| innodb_ft_cache_size           | 8000000              |\n| innodb_ft_result_cache_limit   | 2000000000           |\n| innodb_ft_total_cache_size     | 640000000            |\n| key_cache_age_threshold        | 300                  |\n| key_cache_block_size           | 1024                 |\n| key_cache_division_limit       | 100                  |\n| max_binlog_cache_size          | 18446744073709547520 |\n| max_binlog_stmt_cache_size     | 18446744073709547520 |\n| metadata_locks_cache_size      | 1024                 |\n| query_cache_limit              | 1048576              |\n| query_cache_min_res_unit       | 4096                 |\n| query_cache_size               | 1048576              |\n| query_cache_type               | OFF                  |\n| query_cache_wlock_invalidate   | OFF                  |\n| stored_program_cache           | 256                  |\n| table_definition_cache         | 1400                 |\n| table_open_cache               | 2000                 |\n| table_open_cache_instances     | 16                   |\n| thread_cache_size              | 9                    |\n+--------------------------------+----------------------+\n24 rows in set (0.00 sec)\n>>>\n\n#query_cache_tpye 为ON时缓存开启成功\n+--------------------------------+----------------------+\n| Variable_name                  | Value                |\n+--------------------------------+----------------------+\n| binlog_cache_size              | 32768                |\n| binlog_stmt_cache_size         | 32768                |\n| have_query_cache               | YES                  |\n| host_cache_size                | 279                  |\n| innodb_disable_sort_file_cache | OFF                  |\n| innodb_ft_cache_size           | 8000000              |\n| innodb_ft_result_cache_limit   | 2000000000           |\n| innodb_ft_total_cache_size     | 640000000            |\n| key_cache_age_threshold        | 300                  |\n| key_cache_block_size           | 1024                 |\n| key_cache_division_limit       | 100                  |\n| max_binlog_cache_size          | 18446744073709547520 |\n| max_binlog_stmt_cache_size     | 18446744073709547520 |\n| metadata_locks_cache_size      | 1024                 |\n| query_cache_limit              | 1048576              |\n| query_cache_min_res_unit       | 4096                 |\n| query_cache_size               | 1048576              |\n| query_cache_type               | ON                   |\n| query_cache_wlock_invalidate   | OFF                  |\n| stored_program_cache           | 256                  |\n| table_definition_cache         | 1400                 |\n| table_open_cache               | 2000                 |\n| table_open_cache_instances     | 16                   |\n| thread_cache_size              | 9                    |\n+--------------------------------+----------------------+\n24 rows in set (0.04 sec)\n\n#查看查询计划是否开启，0关闭，1开启\nselect @@profiling\n>>>\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\n\n#等价于select @@profiling\nshow variables like '%profiling%';\n>>>\n+------------------------+-------+\n| Variable_name          | Value |\n+------------------------+-------+\n| have_profiling         | YES   |\n| profiling              | OFF   |\n| profiling_history_size | 15    |\n+------------------------+-------+\n3 rows in set (0.05 sec)\n\n#要想看到查询过程，需要开启查询计划\nset profiling = 1;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n\n\n\n# 3.缓存小栗子\n\n执行同一条sql语句多次，查看执行过程\n\n执行相同sql，关键字大小写不同，不会命中缓存\n\n> 注意：SQL必须是一致的，否则，不能命中缓存。\n\n#执行任意一条sql\nselect * from student;\n\n#再重复执行一次\nselect * from student;\n\n\n1\n2\n3\n4\n5\n\n\n#查看最近执行语句\nshow profiles;\nmysql> show profiles;\n>>>\n+----------+------------+---------------------------------------------------------+\n| Query_ID | Duration   | Query                                                   |\n+----------+------------+---------------------------------------------------------+\n|        1 | 0.00017300 | select @@profiling                                      |\n|        2 | 0.00160700 | show variables like '%profiling%'                       |\n|        3 | 0.00044025 | select * from student;                                  |\n|        4 | 0.00025700 | select * from student;                                  |\n|        5 | 0.00025700 | SELECT * FROM student;                                  |\n+----------+------------+---------------------------------------------------------+\n4 rows in set, 1 warning (0.00 sec)\n\n\n#查看语句执行计划（过程）select * from student;\nshow profile cpu,block io for query 3;\n>>>对应逻辑架构的流程\n+--------------------------------+----------+\n| Status                         | Duration |\n+--------------------------------+----------+\n| starting                       | 0.000023 |\n| Waiting for query cache lock   | 0.000002 |\n| starting                       | 0.000003 |\n| checking query cache for query | 0.000028 |\n| checking permissions           | 0.000006 |\n| Opening tables                 | 0.000013 |\n| init                           | 0.000012 |\n| System lock                    | 0.000006 |\n| Waiting for query cache lock   | 0.000002 |\n| System lock                    | 0.000013 |\n| optimizing                     | 0.000004 |\n| statistics                     | 0.000009 |\n| preparing                      | 0.000007 |\n| executing                      | 0.000002 |\n| Sending data                   | 0.000030 |\n| end                            | 0.000003 |\n| query end                      | 0.000033 |\n| closing tables                 | 0.000008 |\n| freeing items                  | 0.000005 |\n| Waiting for query cache lock   | 0.000002 |\n| freeing items                  | 0.000019 |\n| Waiting for query cache lock   | 0.000004 |\n| freeing items                  | 0.000002 |\n| storing result in query cache  | 0.000003 |\n| cleaning up                    | 0.000009 |\n+--------------------------------+----------+\n\n#第二次查询同一条sql，走缓存 select * from student;\nshow profile cpu,block io for query 4;\n>>>\n+--------------------------------+----------+\n| Status                         | Duration |\n+--------------------------------+----------+\n| starting                       | 0.000021 |\n| Waiting for query cache lock   | 0.000002 |\n| starting                       | 0.000002 |\n| checking query cache for query | 0.000005 |\n| checking privileges on cached  | 0.000003 |\n| checking permissions           | 0.000009 |\n| sending cached result to clien | 0.000022 |\n| cleaning up                    | 0.000006 |\n+--------------------------------+----------+\n\n#只要sql不同，缓存就不会命中 SELECT * FROM student;\nshow profile cpu,block io for query 5;\n>>>\n+--------------------------------+----------+\n| Status                         | Duration |\n+--------------------------------+----------+\n| starting                       | 0.000019 |\n| Waiting for query cache lock   | 0.000003 |\n| starting                       | 0.000003 |\n| checking query cache for query | 0.000029 |\n| checking permissions           | 0.000007 |\n| Opening tables                 | 0.000031 |\n| init                           | 0.000014 |\n| System lock                    | 0.000006 |\n| Waiting for query cache lock   | 0.000002 |\n| System lock                    | 0.000011 |\n| optimizing                     | 0.000003 |\n| statistics                     | 0.000008 |\n| preparing                      | 0.000007 |\n| executing                      | 0.000002 |\n| Sending data                   | 0.000032 |\n| end                            | 0.000003 |\n| query end                      | 0.000006 |\n| closing tables                 | 0.000005 |\n| freeing items                  | 0.000004 |\n| Waiting for query cache lock   | 0.000002 |\n| freeing items                  | 0.000006 |\n| Waiting for query cache lock   | 0.000002 |\n| freeing items                  | 0.000002 |\n| storing result in query cache  | 0.000002 |\n| cleaning up                    | 0.000007 |\n+--------------------------------+----------+\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n\n\n查看存储引擎\n\nshow engines;\n\nshow variables like '%storage_engine%'; \n\n\n1\n2\n3\n\n\n\n# 4.InnoDB\n\n> MySQL5.5开始默认使用InnoDB存储引擎\n\n特点\n\n> 行级锁 支持事务，适合处理大量短期事务 读写阻塞与事务隔离级别相关 可缓存数据和索引 支持聚簇索引 崩溃恢复性好 支持MVCC高并发 从MySQL5.5后支持全文索引 从MySQL5.5开始为默认的数据库引擎\n\n适用场景\n\n> InnoDB是MySQL的默认事务型引擎，被设计用来处理大量的短期(short-lived)事务。可以确保事务的完整提交(Commit)和回滚(Rollback)。\n> \n> 除了增加和查询外，还需要更新，删除操作，那么，应优选选择InnoDB存储引擎。\n> \n> 除非有非常特别的原因需要使用其他的存储引擎，否则应该优先考虑InnoDB引擎。\n\nInnoDB引擎文件结构\n\n> .frm 表格式定义，存放每个表自己的定义\n> \n> .ibd 数据文件，存储数据和索引\n> \n> ibdata1 位于上一级目录，所有表都集中在这里\n\n\n# 5.MyISAM\n\n> MySQL5.5前默认使用MyISAM存储引擎\n\n特点\n\n> 不支持事务和行级锁 表级锁定 读写相互阻塞，写入不能读，读时不能写 只缓存索引 不支持外键索引 不支持聚簇索引 读取数据较快，占用资源较少 不支持MVCC（多版本并发控制机制）高并发 崩溃后无法安全恢复 MySQL5.5前默认的数据库引擎\n\n适用场景\n\n> 只读（或者写较少）、表较少（可以接受长时间进行修复操作）\n\nMyISAM引擎文件结构\n\n> .frm 存储定义表\n> \n> .MYD 存储数据\n> \n> .MYI 存储索引\n\n\n\n> 表格来源：https://docs.oracle.com/cd/E17952_01/mysql-5.5-en/storage-engines.html\n> \n> InnoDB、MyISAM部分参考：https://www.jianshu.com/p/cf4e34fb999f\n\n\n# 6.其他存储引擎\n\nArchive\n\n> Archive档案存储引擎只支持INSERT和SELECT操作，在MySQL5.1之前不支持索引。\n> \n> Archive表**适合日志和数据采集（档案）**类应用。\n> \n> 根据英文的测试结论来看，Archive表比MyISAM表要小大约75%，比支持事务处理的InnoDB表小大约83%。\n\nBlackhole\n\n> Blackhole引擎没有实现任何存储机制，它会丢弃所有插入的数据，不做任何保存。\n> \n> 但服务器会记录Blackhole表的日志，所以可以用于复制数据到备库，或者简单地记录到日志。但这种应用方式会碰到很多问题，因此并不推荐。\n> \n> ???\n\nCSV\n\n> CSV引擎可以将普通的CSV文件作为MySQL的表来处理，但不支持索引。\n> \n> CSV引擎可以作为一种数据交换的机制，非常有用。\n> \n> CSV存储的数据直接可以在操作系统里，用文本编辑器，或者excel读取。\n\nMemory\n\n> 如果需要快速地访问数据，并且这些数据不会被修改，重启以后丢失也没有关系，那么使用Memory表是非常有用。\n> \n> Memory表至少比MyISAM表要快一个数量级。\n\nFederated\n\n> Federated引擎是访问其他MySQL服务器的一个代理，尽管该引擎看起来提供了一种很好的跨服务器的灵活性，但也经常带来问题，因此默认是禁用的。\n\nPercona*\n\n> Percona 为 MySQL 数据库服务器进行了改进，在功能和性能上较 MySQL 有很显著的提升。该版本提升了在高负载情况下的 InnoDB 的性能、为 DBA 提供一些非常有用的性能诊断工具；另外有更多的参数和命令来控制服务器行为。 存储引擎为Xtradb，完全替代Innodb,并且在性能和并发上做得更好。\n> \n> 阿里大部分mysql数据库使用的是percona的原型加以修改。AliSql+AliRedis\n\n\n# SQL执行顺序\n\n\n# 1.完整sql执行流程\n\n\n\n笛卡尔积\n\n> https://zh.wikipedia.org/wiki/%E7%AC%9B%E5%8D%A1%E5%84%BF%E7%A7%AF\n> \n> 数据库中就表示多表组合的所有情况\n\n比如一个较完整的多表连接查询语句\n\n第一步\n\n> 首先对from子句中的前两个表执行一个笛卡尔乘积，生成虚拟表 vt1（选择相对小的表做基础表）\n\n第二步\n\n> 接下来应用on筛选器，on中的逻辑表达式将应用到 vt1 中的各个行，筛选出满足on逻辑表达式的行，生成虚拟表 vt2\n\n第三步\n\n> 如果是outer join 那么这一步就将添加外部行，left outer jion 就把左表在第二步中过滤的添加进来，如果是right outer join 那么就将右表在第二步中过滤掉的行添加进来，这样生成虚拟表 vt3\n> \n> ？？？\n\n第四步\n\n> 如果 from 子句中的表数目多余两个表，那么就将vt3和第三个表连接从而计算笛卡尔乘积，生成虚拟表，该过程就是一个重复1-3的步骤，最终得到一个新的虚拟表 vt3\n\n第五步\n\n> 应用where筛选器，对上一步生产的虚拟表引用where筛选器，过滤条件，生成虚拟表vt4\n\n注意\n\n> 注意:对于包含outer join子句的查询，到底在on筛选器还是用where筛选器指定逻辑表达式呢？ on和where的最大区别在于，如果在on应用逻辑表达式那么在第三步outer join中还可以把移除的行再次添加回来，而where的移除的最终的。 举个简单的例子: 有一个学生表（班级,姓名）和一个成绩表(姓名,成绩)，我现在需要返回一个x班级的全体同学的成绩，但是这个班级有几个学生缺考，也就是说在成绩表中没有记录。 为了得到我们预期的结果我们就需要在on子句指定学生和成绩表的关系（学生.姓名=成绩.姓名） 那么我们是否发现在执行第二步的时候，对于没有参加考试的学生记录就不会出现在vt2中，因为他们被on的逻辑表达式过滤掉了 但是我们用left outer join就可以把左表（学生）中没有参加考试的学生找回来，因为我们想返回的是x班级的所有学生 如果在on中应用学生.班级='x'的话，left outer join会把x班级的所有学生记录找回 所以只能在where筛选器中应用学生.班级='x' 因为它的过滤是最终的。 总结: 最终过滤条件放在where语句中,on语句做数据匹配不要做筛选!!!\n\n第六步\n\n> group by 子句将中的唯一的值组合成为一组，得到虚拟表vt5。如果应用了group by，那么后面的所有步骤都只能得到的vt5的列或者是聚合函数（count、sum、avg等）。原因在于最终的结果集中只为每个组包含一行,这一点请牢记。\n> \n> 注意：一般group by和聚合函数一起使用，例如group_concat()\n\n第七步\n\n> 应用cube或者rollup选项，为vt5生成超组，生成vt6\n\n第八步\n\n> 应用having筛选器，生成vt7。having筛选器是第一个也是为唯一一个应用到已分组数据的筛选器\n\n第九步\n\n> 处理select子句。将vt7中的在select中出现的列筛选出来。生成vt8\n\n第十步\n\n> 应用distinct子句，vt8中移除相同的行，生成vt9\n\n第十一步\n\n> 应用order by子句。按照order_by_condition排序vt9，此时返回的一个游标，而不是虚拟表\n\n游标\n\n> sql是基于集合的理论的，集合不会预先对他的行排序，它只是成员的逻辑集合，成员的顺序是无关紧要的。对表进行排序的查询可以返回一个对象，这个对象包含特定的物理顺序的逻辑组织。这个对象就叫游标。正因为返回值是游标，那么使用order by 子句查询不能应用于表表达式。排序是很需要成本的，除非你必须要排序，否则最好不要指定order by，最后，在这一步中是第一个也是唯一一个可以使用select列表中别名的步骤。\n\n第十二步\n\n> 返回结果给请求者\n\n\n# 2.再探join",normalizedContent:"# mysql常用总结\n\n\n# 安装使用\n\n\n# 1.清理环境\n\n卸载mariadb\n\n> 因为一些linux上会自带mariadb，它是mysql的二次开发版本\n> \n> mariadb的存储引擎使用xtradb\n\n#是否存在mariadb\nrpm -qa|grep mariadb\n\n#卸载mariadb\nrpm -e --nodeps mariadb-libs\n\n\n1\n2\n3\n4\n5\n\n\n卸载mysql5.5\n\n> 若以前安装过mysql5.5\n\n#查看要卸载的mysql名称 -i表示不区分大小写\nrpm -qa|grep -i mysql\n\n#关闭mysql服务\nservice msyql stop\n\n#卸载客户端\nrpm -e mysql-client-5.5.54-1.linux2.6.x86_64\n\n#卸载服务端\nrpm -e mysql-server-5.5.54-1.linux2.6.x86_64\n\n#查看是否有卸载残留\nwhereis mysql \n\n#删除卸载残留 尤其其中/var/lib/mysql一定要确保删除\nfind / -iname 'mysql'\n\n#删除/etc/my.cnf文件\nrm /etc/my.cnf\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n卸载mysql5.7\n\n#关闭服务\nsystemctl stop mysqld\n\n#和安装相反的顺序删除rpm\nrpm -e mysql-community-server-5.7.28-1.el7.x86_64\nrpm -e mysql-community-client-5.7.28-1.el7.x86_64\nrpm -e mysql-community-libs-5.7.28-1.el7.x86_64\nrpm -e mysql-community-common-5.7.28-1.el7.x86_64\n\n#查看是否有卸载残留\nwhereis mysql\nrm -rvf xxx\n\n#删除/etc/my.cnf\nrm /etc/my.cnf\n\n#查询是否还有什么残留信息  尤其其中/var/lib/mysql一定要确保删除\nfind / -iname mysql\nrm -rvf xxx\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 2.安装+初始化\n\nmysql下载\n\nmysql官网 https://www.mysql.com\n\n下载所需要的包\n\nrpm -ivh mysql-community-common-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\nmysql linux中安装\n\n拷贝包到/opt目录下\n\n执行rpm安装命令\n\nrpm -ivh mysql-community-common-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm\n\nrpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n查看是否安装成功\n\n#查看mysql版本\nmysqladmin --version\n\n#查看软件包是否安装成功\nrpm -qa|grep mysql\n\n\n1\n2\n3\n4\n5\n\n\n初始化mysql\n\n#root身份运行，初始化mysql生成临时密码\nmysqld --initialize --user=mysql\n\n\n1\n2\n\n\n> --initialize 选项默认以“安全”模式来初始化，会为 root 用户生成一个密码并将该密码标记为过期，登录后你要设置一个新的密码\n\n#查看生成的临时密码\ncat /var/log/mysqld.log\n\n\n1\n2\n\n\n> root@localhost: 后面就是初始化的密码\n\n\n# 3.自启动+临时密码\n\nmysql服务管理命令\n\n#查看状态\nsystemctl status mysqld.service\n\n#启动\nsystemctl start mysqld.service\n\n#关闭\nsystemctl stop mysqld.service\n\n#重启\nsystemctl restart mysqld.service\n\n#是否自启动查询\nsystemctl list-unit-files|grep mysqld.service\n\n#开启自启动\nsystemctl enable mysqld.service\n\n#关闭自启动\nsystemctl disable mysqld.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n登录mysql修改临时密码\n\n#登录mysql,输入临时密码\nmysql -uroot -p\n\n#修改临时密码\nalter user 'root'@'localhost' identified by 'new_password';\n\nalter user 'root'@'localhost' identified by '123456';\n\n#quit退出，使用新密码登录即可\nquit\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 4.字符集问题\n\n查看字符集\n\nshow variables like 'character%'; \n\nshow variables like '%char%';\n\n\n1\n2\n3\n\n\n修改字符集\n\n#编辑配置文件\nvim /etc/my.cnf\n\n#添加默认字符集设置\n[client]\ndefault-character-set=utf8 # 客户端字符集\n[mysqld]\ncharacter-set-server=utf8 # 必选 服务器端字符集\ncollation-server=utf8_general_ci # 服务器端校对规则\n\n#重启mysql\nsystemctl restart mysqld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n修改以前库的字符集\n\nalter database mydb character set 'utf8';\n\n\n1\n\n\n修改以前表的字符集\n\nalter table dept convert to character set 'utf8';\n\n\n1\n\n\n> 但是原有的数据如果是用非'utf8'编码的话，数据本身编码不会发生改变。\n> \n> 已有数据需要导出或删除，然后重新插入。\n\n\n# 5.目录结构\n\n参数             路径                                                           解释                  备注\n--basedir      /usr/bin                                                     相关命令目录              mysqladmin mysqldump等命令\n--datadir      /var/lib/mysql/                                              mysql数据库文件的存放路径     \n--plugin-dir   /usr/lib64/mysql/plugin                                      mysql插件存放路径         \n--log-error    /var/log/mysqld.log                                          mysql错误日志路径         \n--pid-file     /var/run/mysqld/mysqld.pid                                   进程pid文件             \n--socket       /var/lib/mysql/mysql.sock                                    本地连接时用的unix套接字文 件   \n               /usr/share/mysql                                             配置文件目录              mysql脚本及配置文件\n               /etc/systemd/system/multi-user.target.wants/mysqld.service   服务启停相关脚本            \n               /etc/my.cnf                                                  mysql配置文件           cat /etc/my.cnf\n\n\n# 用户权限\n\n> mysql的权限管理通过四张表实现 user,db,tables_priv,columns_priv\n\n> 全局权限表user,实现root的权限设置\n> \n> 库级权限表db,实现当个库的权限设置\n> \n> 表级权限表tables_priv，实现单张表的权限设置\n> \n> 列级权限表columns_priv，实现单个字段的权限设置\n\n当mysql用户通过身份认证后，进行权限分配，分别按照user表，db表，tables_pirv表，columns_priv表的顺序验证加载权限\n\n> 如果查询权限为n，则继续往下查询，查询都为y，则停止查询，否则查到最后column_priv表\n\n\n# 1.查看权限表\n\nuse mysql;\n\n#查看user表结构\ndesc user;\n\n#查看用户权限信息\nselect * from user \\g;\n\nselect user,host,authentication_string,plugin from user;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 2.创建用户\n\n> username：你将创建的用户名\n> \n> host：指定登录主机，不指定，默认为'%'\n> \n>  * % --表示所有远程通过tcp方式连接\n>  * ip --地址 如 (192.168.1.2,127.0.0.1) 通过制定ip地址进行的tcp方式的连接\n>  * 机器名 --通过制定网络中的机器名进行的tcp方式的连接\n>  * ::1 --ipv6的本地ip地址，等同于ipv4的 127.0.0.1\n>  * localhost --本地方式通过命令行方式连接 ，如mysql -u xxx -p xxx 方式的连接。\n\n#用户创建命令\n# --\x3e create user 'username'@'host' identified by 'password';\n\ncreate user viki1@'localhost' identified by '123456';\n\n#查看user表\nselect host,user,authentication_string,plugin from user;\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n> 注意：密码相同，使用mysql_native_password插件加密后密文相同,加密算法为mysqlsha1\n> \n> mysql5.7密码保存在 authentication_string 字段中\n\n\n# 3.修改密码\n\n#修改当前用户密码\nset password = password('111111');\n\n#修改指定用户密码\nupdate msyql.user set authentication_string = password('666666') where user='viki1';\n\n#刷新权限\nflush privileges;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 4.修改用户名\n\n#修改指定用户名，单表操作\nupdate mysql.user set user='kimi2' where user='viki1';\n\n#刷新权限\nflush privileges; \n\n\n1\n2\n3\n4\n5\n\n\n\n# 5.删除用户\n\n#删除用户用drop\ndrop user kimi@'localhost'\n#如果登录方式为%，可以省略不写\ndrop user viki1\n\n\n1\n2\n3\n4\n\n\n> 不能通过delete from user u where user='li4' 进行删除，系统会有残留信息保留。\n\n\n# 6.分配权限\n\n使用grant命令分配指定权限，用户如果不存在则创建\n\n#给viki1分配testdb这个库下的所有表的crud权限(用户名@主机名)\ngrant select,insert,delete,update on testdb.* to viki1@'%';\n\n#给viki1分配可以给别人设置权限,后加（with grant option）\ngrant select,insert,delete,update on testdb.* to viki1@'%' with grant option;\n\n#刷新一下\nflush privileges;\n\n#查看刚刚给viki1分配的权限,查看db表是因为分配的是testdb库\nselect * from db where user='viki1' \\g;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n\n使用grant命令分配所有库表权限\n\n#创建一个用户并分配所有库表的权限\ngrant all privileges on *.* to coco@'localhost' identified by '123456';\n\n\n1\n2\n\n\n\n# 7.撤销权限\n\n使用revoke撤销权限\n\n# revoke 权限1,权限2,…权限n on 数据库名称.表名称 from 用户名@用户地址 ;\n\n#撤销所有库表的权限\nrevoke all privileges on *.* from coco@'localhost';\n\n#撤销对应库下的所有表的crud权限\nrevoke select,insert,update,delete on testdb.* from viki1@'%';\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 8.查看权限\n\n#查看当前用户权限\nshow grants;\n\n#查看某个用户的全局权限\nselect * from mysql.user where user = 'viki1' \\g;\n\n#查看某个用户某个表的权限\nselect * from mysql.tables_priv where = 'coco' ;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n\n# 存储引擎\n\n\n# 1.mysql架构图\n\n\n\n\n# 2.开启mysql缓存\n\n修改/etc/my.cnf配置文件\n\n#新增一行\nquery_cache_tpye = 1\n\n#重启mysql服务\nsystemctl restart mysqld\n\n\n1\n2\n3\n4\n5\n\n\n再开启查询执行计划\n\n> 可以查询sql语句底层的执行过程\n\n#查看缓存是否成功开启\nshow variables like '%cache%';\n>>>\n+--------------------------------+----------------------+\n| variable_name                  | value                |\n+--------------------------------+----------------------+\n| binlog_cache_size              | 32768                |\n| binlog_stmt_cache_size         | 32768                |\n| have_query_cache               | yes                  |\n| host_cache_size                | 279                  |\n| innodb_disable_sort_file_cache | off                  |\n| innodb_ft_cache_size           | 8000000              |\n| innodb_ft_result_cache_limit   | 2000000000           |\n| innodb_ft_total_cache_size     | 640000000            |\n| key_cache_age_threshold        | 300                  |\n| key_cache_block_size           | 1024                 |\n| key_cache_division_limit       | 100                  |\n| max_binlog_cache_size          | 18446744073709547520 |\n| max_binlog_stmt_cache_size     | 18446744073709547520 |\n| metadata_locks_cache_size      | 1024                 |\n| query_cache_limit              | 1048576              |\n| query_cache_min_res_unit       | 4096                 |\n| query_cache_size               | 1048576              |\n| query_cache_type               | off                  |\n| query_cache_wlock_invalidate   | off                  |\n| stored_program_cache           | 256                  |\n| table_definition_cache         | 1400                 |\n| table_open_cache               | 2000                 |\n| table_open_cache_instances     | 16                   |\n| thread_cache_size              | 9                    |\n+--------------------------------+----------------------+\n24 rows in set (0.00 sec)\n>>>\n\n#query_cache_tpye 为on时缓存开启成功\n+--------------------------------+----------------------+\n| variable_name                  | value                |\n+--------------------------------+----------------------+\n| binlog_cache_size              | 32768                |\n| binlog_stmt_cache_size         | 32768                |\n| have_query_cache               | yes                  |\n| host_cache_size                | 279                  |\n| innodb_disable_sort_file_cache | off                  |\n| innodb_ft_cache_size           | 8000000              |\n| innodb_ft_result_cache_limit   | 2000000000           |\n| innodb_ft_total_cache_size     | 640000000            |\n| key_cache_age_threshold        | 300                  |\n| key_cache_block_size           | 1024                 |\n| key_cache_division_limit       | 100                  |\n| max_binlog_cache_size          | 18446744073709547520 |\n| max_binlog_stmt_cache_size     | 18446744073709547520 |\n| metadata_locks_cache_size      | 1024                 |\n| query_cache_limit              | 1048576              |\n| query_cache_min_res_unit       | 4096                 |\n| query_cache_size               | 1048576              |\n| query_cache_type               | on                   |\n| query_cache_wlock_invalidate   | off                  |\n| stored_program_cache           | 256                  |\n| table_definition_cache         | 1400                 |\n| table_open_cache               | 2000                 |\n| table_open_cache_instances     | 16                   |\n| thread_cache_size              | 9                    |\n+--------------------------------+----------------------+\n24 rows in set (0.04 sec)\n\n#查看查询计划是否开启，0关闭，1开启\nselect @@profiling\n>>>\n+-------------+\n| @@profiling |\n+-------------+\n|           0 |\n+-------------+\n1 row in set, 1 warning (0.00 sec)\n\n\n#等价于select @@profiling\nshow variables like '%profiling%';\n>>>\n+------------------------+-------+\n| variable_name          | value |\n+------------------------+-------+\n| have_profiling         | yes   |\n| profiling              | off   |\n| profiling_history_size | 15    |\n+------------------------+-------+\n3 rows in set (0.05 sec)\n\n#要想看到查询过程，需要开启查询计划\nset profiling = 1;\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n\n\n\n# 3.缓存小栗子\n\n执行同一条sql语句多次，查看执行过程\n\n执行相同sql，关键字大小写不同，不会命中缓存\n\n> 注意：sql必须是一致的，否则，不能命中缓存。\n\n#执行任意一条sql\nselect * from student;\n\n#再重复执行一次\nselect * from student;\n\n\n1\n2\n3\n4\n5\n\n\n#查看最近执行语句\nshow profiles;\nmysql> show profiles;\n>>>\n+----------+------------+---------------------------------------------------------+\n| query_id | duration   | query                                                   |\n+----------+------------+---------------------------------------------------------+\n|        1 | 0.00017300 | select @@profiling                                      |\n|        2 | 0.00160700 | show variables like '%profiling%'                       |\n|        3 | 0.00044025 | select * from student;                                  |\n|        4 | 0.00025700 | select * from student;                                  |\n|        5 | 0.00025700 | select * from student;                                  |\n+----------+------------+---------------------------------------------------------+\n4 rows in set, 1 warning (0.00 sec)\n\n\n#查看语句执行计划（过程）select * from student;\nshow profile cpu,block io for query 3;\n>>>对应逻辑架构的流程\n+--------------------------------+----------+\n| status                         | duration |\n+--------------------------------+----------+\n| starting                       | 0.000023 |\n| waiting for query cache lock   | 0.000002 |\n| starting                       | 0.000003 |\n| checking query cache for query | 0.000028 |\n| checking permissions           | 0.000006 |\n| opening tables                 | 0.000013 |\n| init                           | 0.000012 |\n| system lock                    | 0.000006 |\n| waiting for query cache lock   | 0.000002 |\n| system lock                    | 0.000013 |\n| optimizing                     | 0.000004 |\n| statistics                     | 0.000009 |\n| preparing                      | 0.000007 |\n| executing                      | 0.000002 |\n| sending data                   | 0.000030 |\n| end                            | 0.000003 |\n| query end                      | 0.000033 |\n| closing tables                 | 0.000008 |\n| freeing items                  | 0.000005 |\n| waiting for query cache lock   | 0.000002 |\n| freeing items                  | 0.000019 |\n| waiting for query cache lock   | 0.000004 |\n| freeing items                  | 0.000002 |\n| storing result in query cache  | 0.000003 |\n| cleaning up                    | 0.000009 |\n+--------------------------------+----------+\n\n#第二次查询同一条sql，走缓存 select * from student;\nshow profile cpu,block io for query 4;\n>>>\n+--------------------------------+----------+\n| status                         | duration |\n+--------------------------------+----------+\n| starting                       | 0.000021 |\n| waiting for query cache lock   | 0.000002 |\n| starting                       | 0.000002 |\n| checking query cache for query | 0.000005 |\n| checking privileges on cached  | 0.000003 |\n| checking permissions           | 0.000009 |\n| sending cached result to clien | 0.000022 |\n| cleaning up                    | 0.000006 |\n+--------------------------------+----------+\n\n#只要sql不同，缓存就不会命中 select * from student;\nshow profile cpu,block io for query 5;\n>>>\n+--------------------------------+----------+\n| status                         | duration |\n+--------------------------------+----------+\n| starting                       | 0.000019 |\n| waiting for query cache lock   | 0.000003 |\n| starting                       | 0.000003 |\n| checking query cache for query | 0.000029 |\n| checking permissions           | 0.000007 |\n| opening tables                 | 0.000031 |\n| init                           | 0.000014 |\n| system lock                    | 0.000006 |\n| waiting for query cache lock   | 0.000002 |\n| system lock                    | 0.000011 |\n| optimizing                     | 0.000003 |\n| statistics                     | 0.000008 |\n| preparing                      | 0.000007 |\n| executing                      | 0.000002 |\n| sending data                   | 0.000032 |\n| end                            | 0.000003 |\n| query end                      | 0.000006 |\n| closing tables                 | 0.000005 |\n| freeing items                  | 0.000004 |\n| waiting for query cache lock   | 0.000002 |\n| freeing items                  | 0.000006 |\n| waiting for query cache lock   | 0.000002 |\n| freeing items                  | 0.000002 |\n| storing result in query cache  | 0.000002 |\n| cleaning up                    | 0.000007 |\n+--------------------------------+----------+\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n\n\n查看存储引擎\n\nshow engines;\n\nshow variables like '%storage_engine%'; \n\n\n1\n2\n3\n\n\n\n# 4.innodb\n\n> mysql5.5开始默认使用innodb存储引擎\n\n特点\n\n> 行级锁 支持事务，适合处理大量短期事务 读写阻塞与事务隔离级别相关 可缓存数据和索引 支持聚簇索引 崩溃恢复性好 支持mvcc高并发 从mysql5.5后支持全文索引 从mysql5.5开始为默认的数据库引擎\n\n适用场景\n\n> innodb是mysql的默认事务型引擎，被设计用来处理大量的短期(short-lived)事务。可以确保事务的完整提交(commit)和回滚(rollback)。\n> \n> 除了增加和查询外，还需要更新，删除操作，那么，应优选选择innodb存储引擎。\n> \n> 除非有非常特别的原因需要使用其他的存储引擎，否则应该优先考虑innodb引擎。\n\ninnodb引擎文件结构\n\n> .frm 表格式定义，存放每个表自己的定义\n> \n> .ibd 数据文件，存储数据和索引\n> \n> ibdata1 位于上一级目录，所有表都集中在这里\n\n\n# 5.myisam\n\n> mysql5.5前默认使用myisam存储引擎\n\n特点\n\n> 不支持事务和行级锁 表级锁定 读写相互阻塞，写入不能读，读时不能写 只缓存索引 不支持外键索引 不支持聚簇索引 读取数据较快，占用资源较少 不支持mvcc（多版本并发控制机制）高并发 崩溃后无法安全恢复 mysql5.5前默认的数据库引擎\n\n适用场景\n\n> 只读（或者写较少）、表较少（可以接受长时间进行修复操作）\n\nmyisam引擎文件结构\n\n> .frm 存储定义表\n> \n> .myd 存储数据\n> \n> .myi 存储索引\n\n\n\n> 表格来源：https://docs.oracle.com/cd/e17952_01/mysql-5.5-en/storage-engines.html\n> \n> innodb、myisam部分参考：https://www.jianshu.com/p/cf4e34fb999f\n\n\n# 6.其他存储引擎\n\narchive\n\n> archive档案存储引擎只支持insert和select操作，在mysql5.1之前不支持索引。\n> \n> archive表**适合日志和数据采集（档案）**类应用。\n> \n> 根据英文的测试结论来看，archive表比myisam表要小大约75%，比支持事务处理的innodb表小大约83%。\n\nblackhole\n\n> blackhole引擎没有实现任何存储机制，它会丢弃所有插入的数据，不做任何保存。\n> \n> 但服务器会记录blackhole表的日志，所以可以用于复制数据到备库，或者简单地记录到日志。但这种应用方式会碰到很多问题，因此并不推荐。\n> \n> ???\n\ncsv\n\n> csv引擎可以将普通的csv文件作为mysql的表来处理，但不支持索引。\n> \n> csv引擎可以作为一种数据交换的机制，非常有用。\n> \n> csv存储的数据直接可以在操作系统里，用文本编辑器，或者excel读取。\n\nmemory\n\n> 如果需要快速地访问数据，并且这些数据不会被修改，重启以后丢失也没有关系，那么使用memory表是非常有用。\n> \n> memory表至少比myisam表要快一个数量级。\n\nfederated\n\n> federated引擎是访问其他mysql服务器的一个代理，尽管该引擎看起来提供了一种很好的跨服务器的灵活性，但也经常带来问题，因此默认是禁用的。\n\npercona*\n\n> percona 为 mysql 数据库服务器进行了改进，在功能和性能上较 mysql 有很显著的提升。该版本提升了在高负载情况下的 innodb 的性能、为 dba 提供一些非常有用的性能诊断工具；另外有更多的参数和命令来控制服务器行为。 存储引擎为xtradb，完全替代innodb,并且在性能和并发上做得更好。\n> \n> 阿里大部分mysql数据库使用的是percona的原型加以修改。alisql+aliredis\n\n\n# sql执行顺序\n\n\n# 1.完整sql执行流程\n\n\n\n笛卡尔积\n\n> https://zh.wikipedia.org/wiki/%e7%ac%9b%e5%8d%a1%e5%84%bf%e7%a7%af\n> \n> 数据库中就表示多表组合的所有情况\n\n比如一个较完整的多表连接查询语句\n\n第一步\n\n> 首先对from子句中的前两个表执行一个笛卡尔乘积，生成虚拟表 vt1（选择相对小的表做基础表）\n\n第二步\n\n> 接下来应用on筛选器，on中的逻辑表达式将应用到 vt1 中的各个行，筛选出满足on逻辑表达式的行，生成虚拟表 vt2\n\n第三步\n\n> 如果是outer join 那么这一步就将添加外部行，left outer jion 就把左表在第二步中过滤的添加进来，如果是right outer join 那么就将右表在第二步中过滤掉的行添加进来，这样生成虚拟表 vt3\n> \n> ？？？\n\n第四步\n\n> 如果 from 子句中的表数目多余两个表，那么就将vt3和第三个表连接从而计算笛卡尔乘积，生成虚拟表，该过程就是一个重复1-3的步骤，最终得到一个新的虚拟表 vt3\n\n第五步\n\n> 应用where筛选器，对上一步生产的虚拟表引用where筛选器，过滤条件，生成虚拟表vt4\n\n注意\n\n> 注意:对于包含outer join子句的查询，到底在on筛选器还是用where筛选器指定逻辑表达式呢？ on和where的最大区别在于，如果在on应用逻辑表达式那么在第三步outer join中还可以把移除的行再次添加回来，而where的移除的最终的。 举个简单的例子: 有一个学生表（班级,姓名）和一个成绩表(姓名,成绩)，我现在需要返回一个x班级的全体同学的成绩，但是这个班级有几个学生缺考，也就是说在成绩表中没有记录。 为了得到我们预期的结果我们就需要在on子句指定学生和成绩表的关系（学生.姓名=成绩.姓名） 那么我们是否发现在执行第二步的时候，对于没有参加考试的学生记录就不会出现在vt2中，因为他们被on的逻辑表达式过滤掉了 但是我们用left outer join就可以把左表（学生）中没有参加考试的学生找回来，因为我们想返回的是x班级的所有学生 如果在on中应用学生.班级='x'的话，left outer join会把x班级的所有学生记录找回 所以只能在where筛选器中应用学生.班级='x' 因为它的过滤是最终的。 总结: 最终过滤条件放在where语句中,on语句做数据匹配不要做筛选!!!\n\n第六步\n\n> group by 子句将中的唯一的值组合成为一组，得到虚拟表vt5。如果应用了group by，那么后面的所有步骤都只能得到的vt5的列或者是聚合函数（count、sum、avg等）。原因在于最终的结果集中只为每个组包含一行,这一点请牢记。\n> \n> 注意：一般group by和聚合函数一起使用，例如group_concat()\n\n第七步\n\n> 应用cube或者rollup选项，为vt5生成超组，生成vt6\n\n第八步\n\n> 应用having筛选器，生成vt7。having筛选器是第一个也是为唯一一个应用到已分组数据的筛选器\n\n第九步\n\n> 处理select子句。将vt7中的在select中出现的列筛选出来。生成vt8\n\n第十步\n\n> 应用distinct子句，vt8中移除相同的行，生成vt9\n\n第十一步\n\n> 应用order by子句。按照order_by_condition排序vt9，此时返回的一个游标，而不是虚拟表\n\n游标\n\n> sql是基于集合的理论的，集合不会预先对他的行排序，它只是成员的逻辑集合，成员的顺序是无关紧要的。对表进行排序的查询可以返回一个对象，这个对象包含特定的物理顺序的逻辑组织。这个对象就叫游标。正因为返回值是游标，那么使用order by 子句查询不能应用于表表达式。排序是很需要成本的，除非你必须要排序，否则最好不要指定order by，最后，在这一步中是第一个也是唯一一个可以使用select列表中别名的步骤。\n\n第十二步\n\n> 返回结果给请求者\n\n\n# 2.再探join",charsets:{cjk:!0}},{title:"索引失效",frontmatter:{title:"索引失效",date:"2022-01-28T12:11:59.000Z",permalink:"/pages/454bc7/",categories:["数据库","MySQL"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/10.MySQL/30.%E7%B4%A2%E5%BC%95%E5%A4%B1%E6%95%88.html",relativePath:"25.数据库/10.MySQL/30.索引失效.md",key:"v-84907370",path:"/pages/454bc7/",headers:[{level:3,title:"索引存储结构长什么样？",slug:"索引存储结构长什么样",normalizedTitle:"索引存储结构长什么样？",charIndex:2},{level:3,title:"对索引使用左或者左右模糊匹配",slug:"对索引使用左或者左右模糊匹配",normalizedTitle:"对索引使用左或者左右模糊匹配",charIndex:1620},{level:3,title:"对索引使用函数",slug:"对索引使用函数",normalizedTitle:"对索引使用函数",charIndex:2534},{level:3,title:"对索引进行表达式计算",slug:"对索引进行表达式计算",normalizedTitle:"对索引进行表达式计算",charIndex:3055},{level:3,title:"对索引隐式类型转换",slug:"对索引隐式类型转换",normalizedTitle:"对索引隐式类型转换",charIndex:3612},{level:3,title:"联合索引非最左匹配",slug:"联合索引非最左匹配",normalizedTitle:"联合索引非最左匹配",charIndex:5026},{level:3,title:"WHERE 子句中的 OR",slug:"where-子句中的-or",normalizedTitle:"where 子句中的 or",charIndex:6070},{level:3,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:6438}],headersStr:"索引存储结构长什么样？ 对索引使用左或者左右模糊匹配 对索引使用函数 对索引进行表达式计算 对索引隐式类型转换 联合索引非最左匹配 WHERE 子句中的 OR 总结",content:'# 索引存储结构长什么样？\n\n我们先来看看索引存储结构长什么样？因为只有知道索引的存储结构，才能更好的理解索引失效的问题。\n\n索引的存储结构跟 MySQL 使用哪种存储引擎有关，因为存储引擎就是负责将数据持久化在磁盘中，而不同的存储引擎采用的索引数据结构也会不相同。\n\nMySQL 默认的存储引擎是 InnoDB，它采用 B+Tree 作为索引的数据结构，至于为什么选择 B+ 树作为索引的数据结构 ，详细的分析可以看我这篇文章：为什么 MySQL 喜欢 B+ 树？\n\n在创建表时，InnoDB 存储引擎默认会创建一个主键索引，也就是聚簇索引，其它索引都属于二级索引。\n\nMySQL 的 MyISAM 存储引擎支持多种索引数据结构，比如 B+ 树索引、R 树索引、Full-Text 索引。MyISAM 存储引擎在创建表时，创建的主键索引默认使用的是 B+ 树索引。\n\n虽然，InnoDB 和 MyISAM 都支持 B+ 树索引，但是它们数据的存储结构实现方式不同。不同之处在于：\n\n * InnoDB 存储引擎：B+ 树索引的叶子节点保存数据本身；\n * MyISAM 存储引擎：B+ 树索引的叶子节点保存数据的物理地址；\n\n接下来，我举个例子，给大家展示下这两种存储引擎的索引存储结构的区别。\n\n这里有一张 t_user 表，其中 id 字段为主键索引，其他都是普通字段。\n\n\n\n如果使用的是 MyISAM 存储引擎，B+ 树索引的叶子节点保存数据的物理地址，即用户数据的指针，如下图：\n\n\n\n如果使用的是 InnoDB 存储引擎， B+ 树索引的叶子节点保存数据本身，如下图所示：\n\n\n\nInnoDB 存储引擎根据索引类型不同，分为聚簇索引（上图就是聚簇索引）和二级索引。它们区别在于，聚簇索引的叶子节点存放的是实际数据，所有完整的用户数据都存放在聚簇索引的叶子节点，而二级索引的叶子节点存放的是主键值，而不是实际数据。\n\n如果将 name 字段设置为普通索引，那么这个二级索引长下图这样，叶子节点仅存放主键值。\n\n\n\n知道了 InnoDB 存储引擎的聚簇索引和二级索引的存储结构后，接下来举几个查询语句，说下查询过程是怎么选择用哪个索引类型的。\n\n在我们使用「主键索引」字段作为条件查询的时候，如果要查询的数据都在「聚簇索引」的叶子节点里，那么就会在「聚簇索引」中的 B+ 树检索到对应的叶子节点，然后直接读取要查询的数据。如下面这条语句：\n\n// id 字段为主键索引\nselect * from t_user where id=1;\n\n\n1\n2\n\n\n在我们使用「二级索引」字段作为条件查询的时候，如果要查询的数据都在「聚簇索引」的叶子节点里，那么需要检索两颗B+树：\n\n * 先在「二级索引」的 B+ 树找到对应的叶子节点，获取主键值；\n * 然后用上一步获取的主键值，在「聚簇索引」中的 B+ 树检索到对应的叶子节点，然后获取要查询的数据。\n\n上面这个过程叫做回表，如下面这条语句：\n\n// name 字段为二级索引\nselect * from t_user where name="林某";\n\n\n1\n2\n\n\n在我们使用「二级索引」字段作为条件查询的时候，如果要查询的数据在「二级索引」的叶子节点，那么只需要在「二级索引」的 B+ 树找到对应的叶子节点，然后读取要查询的数据，这个过程叫做覆盖索引。如下面这条语句：\n\n// name 字段为二级索引\nselect id from t_user where name="林某";\n\n\n1\n2\n\n\n上面这些查询语句的条件都用到了索引列，所以在查询过程都用上了索引。\n\n但是并不意味着，查询条件用上了索引列，就查询过程就一定都用上索引，接下来我们再一起看看哪些情况会导致索引实现，而发生全表扫描。\n\n首先说明下，下面的实验案例，我使用的 MySQL 版本为 8.0.26。\n\n\n# 对索引使用左或者左右模糊匹配\n\n当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx% 这两种方式都会造成索引失效。\n\n比如下面的 like 语句，查询 name 后缀为「林」的用户，执行计划中的 type=ALL 就代表了全表扫描，而没有走索引。\n\n// name 字段为二级索引\nselect * from t_user where name like \'%林\';\n\n\n1\n2\n\n\n\n\n如果是查询 name 前缀为林的用户，那么就会走索引扫描，执行计划中的 type=range 表示走索引扫描，key=index_name 看到实际走了 index_name 索引：\n\n// name 字段为二级索引\nselect * from t_user where name like \'林%\';\n\n\n1\n2\n\n\n\n\n> 为什么 like 关键字左或者左右模糊匹配无法走索引呢？\n\n因为索引 B+ 树是按照「索引值」有序排列存储的，只能根据前缀进行比较。\n\n举个例子，下面这张二级索引图，是以 name 字段有序排列存储的。\n\n\n\n假设我们要查询 name 字段前缀为「林」的数据，也就是 name like \'林%\'，扫描索引的过程：\n\n * 首节点查询比较：林这个字的拼音大小比首节点的第一个索引值中的陈字大，但是比首节点的第二个索引值中的周字小，所以选择去节点2继续查询；\n * 节点 2 查询比较：节点2的第一个索引值中的陈字的拼音大小比林字小，所以继续看下一个索引值，发现节点2有与林字前缀匹配的索引值，于是就往叶子节点查询，即叶子节点4；\n * 节点 4 查询比较：节点4的第一个索引值的前缀符合林字，于是就读取该行数据，接着继续往右匹配，直到匹配不到前缀为林的索引值。\n\n如果使用 name like \'%林\' 方式来查询，因为查询的结果可能是「陈林、张林、周林」等之类的，所以不知道从哪个索引值开始比较，于是就只能通过全表扫描的方式来查询。\n\n想要更详细了解 InnoDB 的 B+ 树查询过程，可以看我写的这篇：B+ 树里的节点里存放的是什么呢？查询数据的过程又是怎样的？\n\n\n# 对索引使用函数\n\n有时候我们会用一些 MySQL 自带的函数来得到我们想要的结果，这时候要注意了，如果查询条件中对索引字段使用函数，就会导致索引失效。\n\n比如下面这条语句查询条件中对 name 字段使用了 LENGTH 函数，执行计划中的 type=ALL，代表了全表扫描：\n\n// name 为二级索引\nselect * from t_user where length(name)=6;\n\n\n1\n2\n\n\n\n\n> 为什么对索引使用函数，就无法走索引了呢？\n\n因为索引保存的是索引字段的原始值，而不是经过函数计算后的值，自然就没办法走索引了。\n\n不过，从 MySQL 8.0 开始，索引特性增加了函数索引，即可以针对函数计算后的值建立一个索引，也就是说该索引的值是函数计算后的值，所以就可以通过扫描索引来查询数据。\n\n举个例子，我通过下面这条语句，对 length(name) 的计算结果建立一个名为 idx_name_length 的索引。\n\nalter table t_user add key idx_name_length ((length(name)));\n\n\n1\n\n\n然后我再用下面这条查询语句，这时候就会走索引了。\n\n\n\n\n# 对索引进行表达式计算\n\n在查询条件中对索引进行表达式计算，也是无法走索引的。\n\n比如，下面这条查询语句，执行计划中 type = ALL，说明是通过全表扫描的方式查询数据的：\n\nselect * from t_user where id + 1 = 10;\n\n\n1\n\n\n\n\n但是，如果把查询语句的条件改成 where id = 10 - 1，这样就不是在索引字段进行表达式计算了，于是就可以走索引查询了。\n\n\n\n> 为什么对索引进行表达式计算，就无法走索引了呢？\n\n原因跟对索引使用函数差不多。\n\n因为索引保存的是索引字段的原始值，而不是 id + 1 表达式计算后的值，所以无法走索引，只能通过把索引字段的取值都取出来，然后依次进行表达式的计算来进行条件判断，因此采用的就是全表扫描的方式。\n\n有的同学可能会说，这种对索引进行简单的表达式计算，在代码特殊处理下，应该是可以做到索引扫描的，比方将 id + 1 = 10 变成 id = 10 - 1。\n\n是的，是能够实现，但是 MySQL 还是偷了这个懒，没有实现。\n\n我的想法是，可能也是因为，表达式计算的情况多种多样，每种都要考虑的话，代码可能会很臃肿，所以干脆将这种索引失效的场景告诉程序员，让程序员自己保证在查询条件中不要对索引进行表达式计算。\n\n\n# 对索引隐式类型转换\n\n如果索引字段是字符串类型，但是在条件查询中，输入的参数是整型的话，你会在执行计划的结果发现这条语句会走全表扫描。\n\n我在原本的 t_user 表增加了 phone 字段，是二级索引且类型是 varchar。\n\n\n\n然后我在条件查询中，用整型作为输入参数，此时执行计划中 type = ALL，所以是通过全表扫描来查询数据的。\n\nselect * from t_user where phone = 1300000001;\n\n\n1\n\n\n\n\n但是如果索引字段是整型类型，查询条件中的输入参数即使字符串，是不会导致索引失效，还是可以走索引扫描。\n\n我们再看第二个例子，id 是整型，但是下面这条语句还是走了索引扫描的。\n\n explain select * from t_user where id = \'1\';\n\n\n1\n\n\n\n\n> 为什么第一个例子会导致索引失效，而第二例子不会呢？\n\n要明白这个原因，首先我们要知道 MySQL 的数据类型转换规则是什么？就是看 MySQL 是会将字符串转成数字处理，还是将数字转换成字符串处理。\n\n我在看《mysql45讲的时候》看到一个简单的测试方式，就是通过 select “10” > 9 的结果来知道MySQL 的数据类型转换规则是什么：\n\n * 如果规则是 MySQL 会将自动「字符串」转换成「数字」，就相当于 select 10 > 9，这个就是数字比较，所以结果应该是 1；\n * 如果规则是 MySQL 会将自动「数字」转换成「字符串」，就相当于 select "10" > "9"，这个是字符串比较，字符串比较大小是逐位从高位到低位逐个比较（按ascii码） ，那么"10"字符串相当于 “1”和“0”字符的组合，所以先是拿 “1” 字符和 “9” 字符比较，因为 “1” 字符比 “9” 字符小，所以结果应该是 0。\n\n在 MySQL 中，执行的结果如下图：\n\n\n\n上面的结果为 1，说明 MySQL 在遇到字符串和数字比较的时候，会自动把字符串转为数字，然后再进行比较。\n\n前面的例子一中的查询语句，我也跟大家说了是会走全表扫描：\n\n//例子一的查询语句\nselect * from t_user where phone = 1300000001;\n\n\n1\n2\n\n\n这是因为 phone 字段为字符串，所以 MySQL 要会自动把字符串转为数字，所以这条语句相当于：\n\nselect * from t_user where CAST(phone AS signed int) = 1300000001;\n\n\n1\n\n\n可以看到，CAST 函数是作用在了 phone 字段，而 phone 字段是索引，也就是对索引使用了函数！而前面我们也说了，对索引使用函数是会导致索引失效的。\n\n例子二中的查询语句，我跟大家说了是会走索引扫描：\n\n//例子二的查询语句\nselect * from t_user where id = "1";\n\n\n1\n2\n\n\n这时因为字符串部分是输入参数，也就需要将字符串转为数字，所以这条语句相当于：\n\nselect * from t_user where id = CAST("1" AS signed int);\n\n\n1\n\n\n可以看到，索引字段并没有用任何函数，CAST 函数是用在了输入参数，因此是可以走索引扫描的。\n\n\n# 联合索引非最左匹配\n\n对主键字段建立的索引叫做聚簇索引，对普通字段建立的索引叫做二级索引。\n\n那么多个普通字段组合在一起创建的索引就叫做联合索引，也叫组合索引。\n\n创建联合索引时，我们需要注意创建时的顺序问题，因为联合索引 (a, b, c) 和 (c, b, a) 在使用的时候会存在差别。\n\n联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配。\n\n比如，如果创建了一个 (a, b, c) 联合索引，如果查询条件是以下这几种，就可以匹配上联合索引：\n\n * where a=1；\n * where a=1 and b=2 and c=3；\n * where a=1 and b=2；\n\n需要注意的是，因为有查询优化器，所以 a 字段在 where 子句的顺序并不重要。\n\n但是，如果查询条件是以下这几种，因为不符合最左匹配原则，所以就无法匹配上联合索引，联合索引就会失效:\n\n * where b=2；\n * where c=3；\n * where b=2 and c=3；\n\n有一个比较特殊的查询条件：where a = 1 and c = 3 ，符合最左匹配吗？\n\n这种其实严格意义上来说是属于索引截断，不同版本处理方式也不一样。\n\nMySQL 5.5 的话，前面 a 会走索引，在联合索引找到主键值后，开始回表，到主键索引读取数据行，然后再比对 c 字段的值。\n\n从 MySQL5.6 之后，有一个索引下推功能，可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。\n\n大概原理是：截断的字段会被下推到存储引擎层进行条件判断（因为 c 字段的值是在 (a, b, c) 联合索引里的），然后过滤出符合条件的数据后再返回给 Server 层。由于在引擎层就过滤掉大量的数据，无需再回表读取数据来进行判断，减少回表次数，从而提升了性能。\n\n比如下面这条 where a = 1 and c = 0 语句，我们可以从执行计划中的 Extra=Using index condition 使用了索引下推功能。\n\n\n\n> 为什么联合索引不遵循最左匹配原则就会失效？\n\n原因是，在联合索引的情况下，数据是按照索引第一列排序，第一列数据相同时才会按照第二列排序。\n\n也就是说，如果我们想使用联合索引中尽可能多的列，查询条件中的各个列必须是联合索引中从最左边开始连续的列。如果我们仅仅按照第二列搜索，肯定无法走索引。\n\n\n# WHERE 子句中的 OR\n\n在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列，那么索引会失效。\n\n举个例子，比如下面的查询语句，id 是主键，age 是普通列，从执行计划的结果看，是走了全表扫描。\n\nselect * from t_user where id = 1 or age = 18;\n\n\n1\n\n\n\n\n这是因为 OR 的含义就是两个只要满足一个即可，因此只有一个条件列是索引列是没有意义的，只要有条件列不是索引列，就会进行全表扫描。\n\n要解决办法很简单，将 age 字段设置为索引即可。\n\n\n\n可以看到 type=index merge， index merge 的意思就是对 id 和 age 分别进行了扫描，然后将这两个结果集进行了合并，这样做的好处就是避免了全表扫描。\n\n\n# 总结\n\n今天给大家介绍了 6 种会发生索引失效的情况：\n\n * 当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx%这两种方式都会造成索引失效；\n * 当我们在查询条件中对索引列使用函数，就会导致索引失效。\n * 当我们在查询条件中对索引列进行表达式计算，也是无法走索引的。\n * MySQL 在遇到字符串和数字比较的时候，会自动把字符串转为数字，然后再进行比较。如果字符串是索引列，而条件语句中的输入参数是数字的话，那么索引列会发生隐式类型转换，由于隐式类型转换是通过 CAST 函数实现的，等同于对索引列使用了函数，所以就会导致索引失效。\n * 联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配，否则就会导致索引失效。\n * 在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列，那么索引会失效。\n\n原文连接',normalizedContent:'# 索引存储结构长什么样？\n\n我们先来看看索引存储结构长什么样？因为只有知道索引的存储结构，才能更好的理解索引失效的问题。\n\n索引的存储结构跟 mysql 使用哪种存储引擎有关，因为存储引擎就是负责将数据持久化在磁盘中，而不同的存储引擎采用的索引数据结构也会不相同。\n\nmysql 默认的存储引擎是 innodb，它采用 b+tree 作为索引的数据结构，至于为什么选择 b+ 树作为索引的数据结构 ，详细的分析可以看我这篇文章：为什么 mysql 喜欢 b+ 树？\n\n在创建表时，innodb 存储引擎默认会创建一个主键索引，也就是聚簇索引，其它索引都属于二级索引。\n\nmysql 的 myisam 存储引擎支持多种索引数据结构，比如 b+ 树索引、r 树索引、full-text 索引。myisam 存储引擎在创建表时，创建的主键索引默认使用的是 b+ 树索引。\n\n虽然，innodb 和 myisam 都支持 b+ 树索引，但是它们数据的存储结构实现方式不同。不同之处在于：\n\n * innodb 存储引擎：b+ 树索引的叶子节点保存数据本身；\n * myisam 存储引擎：b+ 树索引的叶子节点保存数据的物理地址；\n\n接下来，我举个例子，给大家展示下这两种存储引擎的索引存储结构的区别。\n\n这里有一张 t_user 表，其中 id 字段为主键索引，其他都是普通字段。\n\n\n\n如果使用的是 myisam 存储引擎，b+ 树索引的叶子节点保存数据的物理地址，即用户数据的指针，如下图：\n\n\n\n如果使用的是 innodb 存储引擎， b+ 树索引的叶子节点保存数据本身，如下图所示：\n\n\n\ninnodb 存储引擎根据索引类型不同，分为聚簇索引（上图就是聚簇索引）和二级索引。它们区别在于，聚簇索引的叶子节点存放的是实际数据，所有完整的用户数据都存放在聚簇索引的叶子节点，而二级索引的叶子节点存放的是主键值，而不是实际数据。\n\n如果将 name 字段设置为普通索引，那么这个二级索引长下图这样，叶子节点仅存放主键值。\n\n\n\n知道了 innodb 存储引擎的聚簇索引和二级索引的存储结构后，接下来举几个查询语句，说下查询过程是怎么选择用哪个索引类型的。\n\n在我们使用「主键索引」字段作为条件查询的时候，如果要查询的数据都在「聚簇索引」的叶子节点里，那么就会在「聚簇索引」中的 b+ 树检索到对应的叶子节点，然后直接读取要查询的数据。如下面这条语句：\n\n// id 字段为主键索引\nselect * from t_user where id=1;\n\n\n1\n2\n\n\n在我们使用「二级索引」字段作为条件查询的时候，如果要查询的数据都在「聚簇索引」的叶子节点里，那么需要检索两颗b+树：\n\n * 先在「二级索引」的 b+ 树找到对应的叶子节点，获取主键值；\n * 然后用上一步获取的主键值，在「聚簇索引」中的 b+ 树检索到对应的叶子节点，然后获取要查询的数据。\n\n上面这个过程叫做回表，如下面这条语句：\n\n// name 字段为二级索引\nselect * from t_user where name="林某";\n\n\n1\n2\n\n\n在我们使用「二级索引」字段作为条件查询的时候，如果要查询的数据在「二级索引」的叶子节点，那么只需要在「二级索引」的 b+ 树找到对应的叶子节点，然后读取要查询的数据，这个过程叫做覆盖索引。如下面这条语句：\n\n// name 字段为二级索引\nselect id from t_user where name="林某";\n\n\n1\n2\n\n\n上面这些查询语句的条件都用到了索引列，所以在查询过程都用上了索引。\n\n但是并不意味着，查询条件用上了索引列，就查询过程就一定都用上索引，接下来我们再一起看看哪些情况会导致索引实现，而发生全表扫描。\n\n首先说明下，下面的实验案例，我使用的 mysql 版本为 8.0.26。\n\n\n# 对索引使用左或者左右模糊匹配\n\n当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx% 这两种方式都会造成索引失效。\n\n比如下面的 like 语句，查询 name 后缀为「林」的用户，执行计划中的 type=all 就代表了全表扫描，而没有走索引。\n\n// name 字段为二级索引\nselect * from t_user where name like \'%林\';\n\n\n1\n2\n\n\n\n\n如果是查询 name 前缀为林的用户，那么就会走索引扫描，执行计划中的 type=range 表示走索引扫描，key=index_name 看到实际走了 index_name 索引：\n\n// name 字段为二级索引\nselect * from t_user where name like \'林%\';\n\n\n1\n2\n\n\n\n\n> 为什么 like 关键字左或者左右模糊匹配无法走索引呢？\n\n因为索引 b+ 树是按照「索引值」有序排列存储的，只能根据前缀进行比较。\n\n举个例子，下面这张二级索引图，是以 name 字段有序排列存储的。\n\n\n\n假设我们要查询 name 字段前缀为「林」的数据，也就是 name like \'林%\'，扫描索引的过程：\n\n * 首节点查询比较：林这个字的拼音大小比首节点的第一个索引值中的陈字大，但是比首节点的第二个索引值中的周字小，所以选择去节点2继续查询；\n * 节点 2 查询比较：节点2的第一个索引值中的陈字的拼音大小比林字小，所以继续看下一个索引值，发现节点2有与林字前缀匹配的索引值，于是就往叶子节点查询，即叶子节点4；\n * 节点 4 查询比较：节点4的第一个索引值的前缀符合林字，于是就读取该行数据，接着继续往右匹配，直到匹配不到前缀为林的索引值。\n\n如果使用 name like \'%林\' 方式来查询，因为查询的结果可能是「陈林、张林、周林」等之类的，所以不知道从哪个索引值开始比较，于是就只能通过全表扫描的方式来查询。\n\n想要更详细了解 innodb 的 b+ 树查询过程，可以看我写的这篇：b+ 树里的节点里存放的是什么呢？查询数据的过程又是怎样的？\n\n\n# 对索引使用函数\n\n有时候我们会用一些 mysql 自带的函数来得到我们想要的结果，这时候要注意了，如果查询条件中对索引字段使用函数，就会导致索引失效。\n\n比如下面这条语句查询条件中对 name 字段使用了 length 函数，执行计划中的 type=all，代表了全表扫描：\n\n// name 为二级索引\nselect * from t_user where length(name)=6;\n\n\n1\n2\n\n\n\n\n> 为什么对索引使用函数，就无法走索引了呢？\n\n因为索引保存的是索引字段的原始值，而不是经过函数计算后的值，自然就没办法走索引了。\n\n不过，从 mysql 8.0 开始，索引特性增加了函数索引，即可以针对函数计算后的值建立一个索引，也就是说该索引的值是函数计算后的值，所以就可以通过扫描索引来查询数据。\n\n举个例子，我通过下面这条语句，对 length(name) 的计算结果建立一个名为 idx_name_length 的索引。\n\nalter table t_user add key idx_name_length ((length(name)));\n\n\n1\n\n\n然后我再用下面这条查询语句，这时候就会走索引了。\n\n\n\n\n# 对索引进行表达式计算\n\n在查询条件中对索引进行表达式计算，也是无法走索引的。\n\n比如，下面这条查询语句，执行计划中 type = all，说明是通过全表扫描的方式查询数据的：\n\nselect * from t_user where id + 1 = 10;\n\n\n1\n\n\n\n\n但是，如果把查询语句的条件改成 where id = 10 - 1，这样就不是在索引字段进行表达式计算了，于是就可以走索引查询了。\n\n\n\n> 为什么对索引进行表达式计算，就无法走索引了呢？\n\n原因跟对索引使用函数差不多。\n\n因为索引保存的是索引字段的原始值，而不是 id + 1 表达式计算后的值，所以无法走索引，只能通过把索引字段的取值都取出来，然后依次进行表达式的计算来进行条件判断，因此采用的就是全表扫描的方式。\n\n有的同学可能会说，这种对索引进行简单的表达式计算，在代码特殊处理下，应该是可以做到索引扫描的，比方将 id + 1 = 10 变成 id = 10 - 1。\n\n是的，是能够实现，但是 mysql 还是偷了这个懒，没有实现。\n\n我的想法是，可能也是因为，表达式计算的情况多种多样，每种都要考虑的话，代码可能会很臃肿，所以干脆将这种索引失效的场景告诉程序员，让程序员自己保证在查询条件中不要对索引进行表达式计算。\n\n\n# 对索引隐式类型转换\n\n如果索引字段是字符串类型，但是在条件查询中，输入的参数是整型的话，你会在执行计划的结果发现这条语句会走全表扫描。\n\n我在原本的 t_user 表增加了 phone 字段，是二级索引且类型是 varchar。\n\n\n\n然后我在条件查询中，用整型作为输入参数，此时执行计划中 type = all，所以是通过全表扫描来查询数据的。\n\nselect * from t_user where phone = 1300000001;\n\n\n1\n\n\n\n\n但是如果索引字段是整型类型，查询条件中的输入参数即使字符串，是不会导致索引失效，还是可以走索引扫描。\n\n我们再看第二个例子，id 是整型，但是下面这条语句还是走了索引扫描的。\n\n explain select * from t_user where id = \'1\';\n\n\n1\n\n\n\n\n> 为什么第一个例子会导致索引失效，而第二例子不会呢？\n\n要明白这个原因，首先我们要知道 mysql 的数据类型转换规则是什么？就是看 mysql 是会将字符串转成数字处理，还是将数字转换成字符串处理。\n\n我在看《mysql45讲的时候》看到一个简单的测试方式，就是通过 select “10” > 9 的结果来知道mysql 的数据类型转换规则是什么：\n\n * 如果规则是 mysql 会将自动「字符串」转换成「数字」，就相当于 select 10 > 9，这个就是数字比较，所以结果应该是 1；\n * 如果规则是 mysql 会将自动「数字」转换成「字符串」，就相当于 select "10" > "9"，这个是字符串比较，字符串比较大小是逐位从高位到低位逐个比较（按ascii码） ，那么"10"字符串相当于 “1”和“0”字符的组合，所以先是拿 “1” 字符和 “9” 字符比较，因为 “1” 字符比 “9” 字符小，所以结果应该是 0。\n\n在 mysql 中，执行的结果如下图：\n\n\n\n上面的结果为 1，说明 mysql 在遇到字符串和数字比较的时候，会自动把字符串转为数字，然后再进行比较。\n\n前面的例子一中的查询语句，我也跟大家说了是会走全表扫描：\n\n//例子一的查询语句\nselect * from t_user where phone = 1300000001;\n\n\n1\n2\n\n\n这是因为 phone 字段为字符串，所以 mysql 要会自动把字符串转为数字，所以这条语句相当于：\n\nselect * from t_user where cast(phone as signed int) = 1300000001;\n\n\n1\n\n\n可以看到，cast 函数是作用在了 phone 字段，而 phone 字段是索引，也就是对索引使用了函数！而前面我们也说了，对索引使用函数是会导致索引失效的。\n\n例子二中的查询语句，我跟大家说了是会走索引扫描：\n\n//例子二的查询语句\nselect * from t_user where id = "1";\n\n\n1\n2\n\n\n这时因为字符串部分是输入参数，也就需要将字符串转为数字，所以这条语句相当于：\n\nselect * from t_user where id = cast("1" as signed int);\n\n\n1\n\n\n可以看到，索引字段并没有用任何函数，cast 函数是用在了输入参数，因此是可以走索引扫描的。\n\n\n# 联合索引非最左匹配\n\n对主键字段建立的索引叫做聚簇索引，对普通字段建立的索引叫做二级索引。\n\n那么多个普通字段组合在一起创建的索引就叫做联合索引，也叫组合索引。\n\n创建联合索引时，我们需要注意创建时的顺序问题，因为联合索引 (a, b, c) 和 (c, b, a) 在使用的时候会存在差别。\n\n联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配。\n\n比如，如果创建了一个 (a, b, c) 联合索引，如果查询条件是以下这几种，就可以匹配上联合索引：\n\n * where a=1；\n * where a=1 and b=2 and c=3；\n * where a=1 and b=2；\n\n需要注意的是，因为有查询优化器，所以 a 字段在 where 子句的顺序并不重要。\n\n但是，如果查询条件是以下这几种，因为不符合最左匹配原则，所以就无法匹配上联合索引，联合索引就会失效:\n\n * where b=2；\n * where c=3；\n * where b=2 and c=3；\n\n有一个比较特殊的查询条件：where a = 1 and c = 3 ，符合最左匹配吗？\n\n这种其实严格意义上来说是属于索引截断，不同版本处理方式也不一样。\n\nmysql 5.5 的话，前面 a 会走索引，在联合索引找到主键值后，开始回表，到主键索引读取数据行，然后再比对 c 字段的值。\n\n从 mysql5.6 之后，有一个索引下推功能，可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。\n\n大概原理是：截断的字段会被下推到存储引擎层进行条件判断（因为 c 字段的值是在 (a, b, c) 联合索引里的），然后过滤出符合条件的数据后再返回给 server 层。由于在引擎层就过滤掉大量的数据，无需再回表读取数据来进行判断，减少回表次数，从而提升了性能。\n\n比如下面这条 where a = 1 and c = 0 语句，我们可以从执行计划中的 extra=using index condition 使用了索引下推功能。\n\n\n\n> 为什么联合索引不遵循最左匹配原则就会失效？\n\n原因是，在联合索引的情况下，数据是按照索引第一列排序，第一列数据相同时才会按照第二列排序。\n\n也就是说，如果我们想使用联合索引中尽可能多的列，查询条件中的各个列必须是联合索引中从最左边开始连续的列。如果我们仅仅按照第二列搜索，肯定无法走索引。\n\n\n# where 子句中的 or\n\n在 where 子句中，如果在 or 前的条件列是索引列，而在 or 后的条件列不是索引列，那么索引会失效。\n\n举个例子，比如下面的查询语句，id 是主键，age 是普通列，从执行计划的结果看，是走了全表扫描。\n\nselect * from t_user where id = 1 or age = 18;\n\n\n1\n\n\n\n\n这是因为 or 的含义就是两个只要满足一个即可，因此只有一个条件列是索引列是没有意义的，只要有条件列不是索引列，就会进行全表扫描。\n\n要解决办法很简单，将 age 字段设置为索引即可。\n\n\n\n可以看到 type=index merge， index merge 的意思就是对 id 和 age 分别进行了扫描，然后将这两个结果集进行了合并，这样做的好处就是避免了全表扫描。\n\n\n# 总结\n\n今天给大家介绍了 6 种会发生索引失效的情况：\n\n * 当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx%这两种方式都会造成索引失效；\n * 当我们在查询条件中对索引列使用函数，就会导致索引失效。\n * 当我们在查询条件中对索引列进行表达式计算，也是无法走索引的。\n * mysql 在遇到字符串和数字比较的时候，会自动把字符串转为数字，然后再进行比较。如果字符串是索引列，而条件语句中的输入参数是数字的话，那么索引列会发生隐式类型转换，由于隐式类型转换是通过 cast 函数实现的，等同于对索引列使用了函数，所以就会导致索引失效。\n * 联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配，否则就会导致索引失效。\n * 在 where 子句中，如果在 or 前的条件列是索引列，而在 or 后的条件列不是索引列，那么索引会失效。\n\n原文连接',charsets:{cjk:!0}},{title:"MySQL事务",frontmatter:{title:"MySQL事务",date:"2022-01-28T12:17:57.000Z",permalink:"/pages/79ebd4/",categories:["数据库","MySQL"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/10.MySQL/50.MySQL%E4%BA%8B%E5%8A%A1.html",relativePath:"25.数据库/10.MySQL/50.MySQL事务.md",key:"v-29b94478",path:"/pages/79ebd4/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"redis安装启动",frontmatter:{title:"redis安装启动",date:"2022-01-27T14:46:08.000Z",permalink:"/pages/7e8569/",categories:["数据库","Redis"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/20.Redis/10.redis%E5%AE%89%E8%A3%85%E5%90%AF%E5%8A%A8.html",relativePath:"25.数据库/20.Redis/10.redis安装启动.md",key:"v-3fa1c972",path:"/pages/7e8569/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:2},{level:2,title:"安装",slug:"安装",normalizedTitle:"安装",charIndex:292},{level:3,title:"启动",slug:"启动",normalizedTitle:"启动",charIndex:732},{level:2,title:"Docker安装",slug:"docker安装",normalizedTitle:"docker安装",charIndex:1280}],headersStr:"简介 安装 启动 Docker安装",content:"# 简介\n\n> Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache, and message broker. Redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams.\n\n官网\n\n\n# 安装\n\n安装C语言环境\n\nyum -y install gcc\n\n#测试\ngcc --verison\n\n\n1\n2\n3\n4\n\n\n解压redis-6.2.1.tar.gz\n\ntar -zxvf redis-6.2.1.tar.gz\n\ncd redis-6.2.1\n\n#编译redis\nmake\n\n#若编译失败，执行make distclean，再进行make\n\n#跳过make test,执行make install\nmake install\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n默认安装目录\n\n#测试是否安装成功\nredis-cli\n\nredis-benchmark:性能测试工具，可以在自己本子运行，看看自己本子性能如何\nredis-check-aof：修复有问题的AOF文件，rdb和aof后面讲\nredis-check-dump：修复有问题的dump.rdb文件\nredis-sentinel：Redis集群使用\nredis-server：Redis服务器启动命令\nredis-cli：客户端，操作入口\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 启动\n\n不推荐前台启动\n\n> 前台启动，命令行窗口不能关闭，否则服务器停止\n\n推荐后台启动\n\n#备份reids.conf\ncp  /opt/redis-6.2.1/redis.conf  /root/myredis\n\n#修改配置文件\n#注释掉 bind 127.0.0.1 ::1 ，不然只能本机（linux）连接，不支持远程连接\n#protect-mode yes 改成 no，用于无密码登录，并允许连接\n#daemonize no 改成 yes，允许服务在后天运行\n\n#redis启动\nredis-server /root/myredis/redis.conf\n\n#客户端访问\nredis-cli\n\n#redis单实例关闭（无集群）\nredis-cli shutdown\n#或者使用kill -9杀掉进程\nps -ef|grep redis\nkill -9 7420\n\n#redis多实例关闭（集群）使用端口号\nredis-cli -p 6379 shutdown\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# Docker安装\n\nDocker安装配置redis",normalizedContent:"# 简介\n\n> redis is an open source (bsd licensed), in-memory data structure store, used as a database, cache, and message broker. redis provides data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs, geospatial indexes, and streams.\n\n官网\n\n\n# 安装\n\n安装c语言环境\n\nyum -y install gcc\n\n#测试\ngcc --verison\n\n\n1\n2\n3\n4\n\n\n解压redis-6.2.1.tar.gz\n\ntar -zxvf redis-6.2.1.tar.gz\n\ncd redis-6.2.1\n\n#编译redis\nmake\n\n#若编译失败，执行make distclean，再进行make\n\n#跳过make test,执行make install\nmake install\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n默认安装目录\n\n#测试是否安装成功\nredis-cli\n\nredis-benchmark:性能测试工具，可以在自己本子运行，看看自己本子性能如何\nredis-check-aof：修复有问题的aof文件，rdb和aof后面讲\nredis-check-dump：修复有问题的dump.rdb文件\nredis-sentinel：redis集群使用\nredis-server：redis服务器启动命令\nredis-cli：客户端，操作入口\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 启动\n\n不推荐前台启动\n\n> 前台启动，命令行窗口不能关闭，否则服务器停止\n\n推荐后台启动\n\n#备份reids.conf\ncp  /opt/redis-6.2.1/redis.conf  /root/myredis\n\n#修改配置文件\n#注释掉 bind 127.0.0.1 ::1 ，不然只能本机（linux）连接，不支持远程连接\n#protect-mode yes 改成 no，用于无密码登录，并允许连接\n#daemonize no 改成 yes，允许服务在后天运行\n\n#redis启动\nredis-server /root/myredis/redis.conf\n\n#客户端访问\nredis-cli\n\n#redis单实例关闭（无集群）\nredis-cli shutdown\n#或者使用kill -9杀掉进程\nps -ef|grep redis\nkill -9 7420\n\n#redis多实例关闭（集群）使用端口号\nredis-cli -p 6379 shutdown\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n\n\n\n# docker安装\n\ndocker安装配置redis",charsets:{cjk:!0}},{title:"redis知识点",frontmatter:{title:"redis知识点",date:"2022-01-27T15:08:50.000Z",permalink:"/pages/77a99b/",categories:["数据库","Redis"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/20.Redis/20.redis%E7%9F%A5%E8%AF%86%E7%82%B9.html",relativePath:"25.数据库/20.Redis/20.redis知识点.md",key:"v-aa7a79d0",path:"/pages/77a99b/",headers:[{level:2,title:"redis是什么？",slug:"redis是什么",normalizedTitle:"redis是什么？",charIndex:2},{level:2,title:"redis使用场景",slug:"redis使用场景",normalizedTitle:"redis使用场景",charIndex:76},{level:2,title:"redis的数据类型有哪些？",slug:"redis的数据类型有哪些",normalizedTitle:"redis的数据类型有哪些？",charIndex:190},{level:2,title:"什么是单线程，IO多路复用？",slug:"什么是单线程-io多路复用",normalizedTitle:"什么是单线程，io多路复用？",charIndex:302},{level:2,title:"redis的特点？",slug:"redis的特点",normalizedTitle:"redis的特点？",charIndex:567},{level:2,title:"redis的原子性是如何保证的？",slug:"redis的原子性是如何保证的",normalizedTitle:"redis的原子性是如何保证的？",charIndex:637},{level:3,title:"介绍一下reids的事务",slug:"介绍一下reids的事务",normalizedTitle:"介绍一下reids的事务",charIndex:704},{level:2,title:"什么是延迟双删策略？",slug:"什么是延迟双删策略",normalizedTitle:"什么是延迟双删策略？",charIndex:721},{level:2,title:"缓存击穿，缓存穿透，缓存雪崩及污染的原因和解决方案？",slug:"缓存击穿-缓存穿透-缓存雪崩及污染的原因和解决方案",normalizedTitle:"缓存击穿，缓存穿透，缓存雪崩及污染的原因和解决方案？",charIndex:762},{level:2,title:"什么是哨兵模式？",slug:"什么是哨兵模式",normalizedTitle:"什么是哨兵模式？",charIndex:793},{level:2,title:"介绍一下RDB和AOF机制？",slug:"介绍一下rdb和aof机制",normalizedTitle:"介绍一下rdb和aof机制？",charIndex:806},{level:2,title:"redis的发布订阅模式怎么做到的？",slug:"redis的发布订阅模式怎么做到的",normalizedTitle:"redis的发布订阅模式怎么做到的？",charIndex:825},{level:2,title:"redis集群如何实现？",slug:"redis集群如何实现",normalizedTitle:"redis集群如何实现？",charIndex:848}],headersStr:"redis是什么？ redis使用场景 redis的数据类型有哪些？ 什么是单线程，IO多路复用？ redis的特点？ redis的原子性是如何保证的？ 介绍一下reids的事务 什么是延迟双删策略？ 缓存击穿，缓存穿透，缓存雪崩及污染的原因和解决方案？ 什么是哨兵模式？ 介绍一下RDB和AOF机制？ redis的发布订阅模式怎么做到的？ redis集群如何实现？",content:"# redis是什么？\n\nRedis是一款基于内存的高速缓存数据库，使用C语言编写，Redis是一个key-value存储系统（键值存储系统）\n\n\n# redis使用场景\n\n * 热点数据的缓存\n * 限时业务\n * 秒杀业务\n * 分布式锁[秒杀]\n * 延时操作[发布订阅]\n * 排行榜业务\n * 点赞、好友等相互关系的存储\n * 简单队列[当然RabbitMQ]\n\n\n# redis的数据类型有哪些？\n\nString字符串,List列表，Set集合，Hash散列，Zset有序集合，geospatial地理位置，Bitmaps位图，HyperLogLogs基数统计，Stream消息队列\n\n\n# 什么是单线程，IO多路复用？\n\nRedis是单线程+多路IO复用技术\n\n多路复用是指使用一个线程来检查多个文件描述符（Socket）的就绪状态，比如调用select和poll函数，传入多个文件描述符，如果有一个文件描述符就绪，则返回，否则阻塞直到超时。得到就绪状态后进行真正的操作可以在同一个线程里执行，也可以启动线程执行（比如使用线程池）\n\n串行 vs 多线程+锁（memcached） vs 单线程+多路IO复用(Redis)\n\n（与Memcache三点不同: 支持多数据类型，支持持久化，单线程+多路IO复用）\n\n\n\n\n# redis的特点？\n\n要更新redis，直接清空缓存，再往里面添加\n\n> 因为redis做查询非常非常快，修改反而没有全删再加入快\n\n\n# redis的原子性是如何保证的？\n\nredis本身单线程的，所以就保证了原子性\n\nredis的事务功能保证了批量操作的原子性\n\n\n# 介绍一下reids的事务\n\n\n# 什么是延迟双删策略？\n\n> 保证Redis数据和MySQL数据库的一致性\n\n\n# 缓存击穿，缓存穿透，缓存雪崩及污染的原因和解决方案？\n\n\n# 什么是哨兵模式？\n\n\n# 介绍一下RDB和AOF机制？\n\n\n# redis的发布订阅模式怎么做到的？\n\n\n# redis集群如何实现？",normalizedContent:"# redis是什么？\n\nredis是一款基于内存的高速缓存数据库，使用c语言编写，redis是一个key-value存储系统（键值存储系统）\n\n\n# redis使用场景\n\n * 热点数据的缓存\n * 限时业务\n * 秒杀业务\n * 分布式锁[秒杀]\n * 延时操作[发布订阅]\n * 排行榜业务\n * 点赞、好友等相互关系的存储\n * 简单队列[当然rabbitmq]\n\n\n# redis的数据类型有哪些？\n\nstring字符串,list列表，set集合，hash散列，zset有序集合，geospatial地理位置，bitmaps位图，hyperloglogs基数统计，stream消息队列\n\n\n# 什么是单线程，io多路复用？\n\nredis是单线程+多路io复用技术\n\n多路复用是指使用一个线程来检查多个文件描述符（socket）的就绪状态，比如调用select和poll函数，传入多个文件描述符，如果有一个文件描述符就绪，则返回，否则阻塞直到超时。得到就绪状态后进行真正的操作可以在同一个线程里执行，也可以启动线程执行（比如使用线程池）\n\n串行 vs 多线程+锁（memcached） vs 单线程+多路io复用(redis)\n\n（与memcache三点不同: 支持多数据类型，支持持久化，单线程+多路io复用）\n\n\n\n\n# redis的特点？\n\n要更新redis，直接清空缓存，再往里面添加\n\n> 因为redis做查询非常非常快，修改反而没有全删再加入快\n\n\n# redis的原子性是如何保证的？\n\nredis本身单线程的，所以就保证了原子性\n\nredis的事务功能保证了批量操作的原子性\n\n\n# 介绍一下reids的事务\n\n\n# 什么是延迟双删策略？\n\n> 保证redis数据和mysql数据库的一致性\n\n\n# 缓存击穿，缓存穿透，缓存雪崩及污染的原因和解决方案？\n\n\n# 什么是哨兵模式？\n\n\n# 介绍一下rdb和aof机制？\n\n\n# redis的发布订阅模式怎么做到的？\n\n\n# redis集群如何实现？",charsets:{cjk:!0}},{title:"redis整合Springboot",frontmatter:{title:"redis整合Springboot",date:"2022-01-27T15:28:04.000Z",permalink:"/pages/179208/",categories:["数据库","Redis"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/20.Redis/30.redis%E6%95%B4%E5%90%88Springboot.html",relativePath:"25.数据库/20.Redis/30.redis整合Springboot.md",key:"v-383ff026",path:"/pages/179208/",headers:[{level:2,title:"SpringBoot集成redis",slug:"springboot集成redis",normalizedTitle:"springboot集成redis",charIndex:2},{level:3,title:"1.添加依赖",slug:"_1-添加依赖",normalizedTitle:"1.添加依赖",charIndex:24},{level:3,title:"2.添加配置类",slug:"_2-添加配置类",normalizedTitle:"2.添加配置类",charIndex:402},{level:3,title:"3.添加配置",slug:"_3-添加配置",normalizedTitle:"3.添加配置",charIndex:4337},{level:2,title:"使用注解",slug:"使用注解",normalizedTitle:"使用注解",charIndex:4655},{level:3,title:"@Cacheable",slug:"cacheable",normalizedTitle:"@cacheable",charIndex:4664},{level:3,title:"@CacheEvict",slug:"cacheevict",normalizedTitle:"@cacheevict",charIndex:4902},{level:3,title:"@CachePut",slug:"cacheput",normalizedTitle:"@cacheput",charIndex:5139}],headersStr:"SpringBoot集成redis 1.添加依赖 2.添加配置类 3.添加配置 使用注解 @Cacheable @CacheEvict @CachePut",content:"# SpringBoot集成redis\n\n\n# 1.添加依赖\n\n\x3c!-- redis --\x3e\n<dependency>\n     <groupId>org.springframework.boot</groupId>\n     <artifactId>spring-boot-starter-data-redis</artifactId>\n</dependency>\n\n\x3c!-- spring2.X集成redis所需common-pool2--\x3e\n<dependency>\n     <groupId>org.apache.commons</groupId>\n     <artifactId>commons-pool2</artifactId>\n     <version>2.6.0</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 2.添加配置类\n\n两个注解\n\n> @Configuration\n> \n> @EnableCaching //开启缓存使用\n\npackage com.viki.yygh.common.config;\n\nimport com.fasterxml.jackson.annotation.JsonAutoDetect;\nimport com.fasterxml.jackson.annotation.PropertyAccessor;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.springframework.cache.CacheManager;\nimport org.springframework.cache.annotation.EnableCaching;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.cache.RedisCacheConfiguration;\nimport org.springframework.data.redis.cache.RedisCacheManager;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;\nimport org.springframework.data.redis.serializer.RedisSerializationContext;\nimport org.springframework.data.redis.serializer.RedisSerializer;\nimport org.springframework.data.redis.serializer.StringRedisSerializer;\n\nimport java.time.Duration;\n\n@Configuration\n@EnableCaching  //开启缓存使用\npublic class RedisConfig {\n\n    /**\n     * 设置RedisTemplate规则\n     *\n     * @param redisConnectionFactory\n     * @return\n     */\n    @Bean\n    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory) {\n        RedisTemplate<Object, Object> redisTemplate = new RedisTemplate<>();\n        redisTemplate.setConnectionFactory(redisConnectionFactory);\n        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);\n\n        //解决查询缓存转换异常的问题\n        ObjectMapper om = new ObjectMapper();\n        // 指定要序列化的域，field,get和set,以及修饰符范围，ANY是都有包括private和public\n        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n        // 指定序列化输入的类型，类必须是非final修饰的，final修饰的类，比如String,Integer等会跑出异常\n        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);\n        jackson2JsonRedisSerializer.setObjectMapper(om);\n\n        //序列号key value\n        redisTemplate.setKeySerializer(new StringRedisSerializer());\n        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);\n        redisTemplate.setHashKeySerializer(new StringRedisSerializer());\n        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);\n\n        redisTemplate.afterPropertiesSet();\n        return redisTemplate;\n    }\n\n    /**\n     * 设置CacheManager缓存规则\n     *\n     * @param factory\n     * @return\n     */\n    @Bean\n    public CacheManager cacheManager(RedisConnectionFactory factory) {\n        RedisSerializer<String> redisSerializer = new StringRedisSerializer();\n        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);\n\n        //解决查询缓存转换异常的问题\n        ObjectMapper om = new ObjectMapper();\n        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);\n        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);\n        jackson2JsonRedisSerializer.setObjectMapper(om);\n\n        // 配置序列化（解决乱码的问题）,过期时间600秒\n        RedisCacheConfiguration config = RedisCacheConfiguration.defaultCacheConfig()\n                .entryTtl(Duration.ofSeconds(600))\n                .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))\n                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer))\n                .disableCachingNullValues();\n\n        RedisCacheManager cacheManager = RedisCacheManager.builder(factory)\n                .cacheDefaults(config)\n                .build();\n        return cacheManager;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n\n\n\n# 3.添加配置\n\nspring.redis.host=192.168.44.165\nspring.redis.port=6379\nspring.redis.database= 0\nspring.redis.timeout=1800000\n\nspring.redis.lettuce.pool.max-active=20\nspring.redis.lettuce.pool.max-wait=-1\n#最大阻塞等待时间(负数表示没限制)\nspring.redis.lettuce.pool.max-idle=5\nspring.redis.lettuce.pool.min-idle=0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 使用注解\n\n\n# @Cacheable\n\n用途\n\n> 根据方法对其返回结果进行缓存，下次请求时，如果缓存存在，则直接读取缓存数据返回；如果缓存不存在，则执行方法，并把返回的结果存入缓存中。一般用在查询方法上。\n\n参数\n\n> 参数名          解释\n> value        缓存名，必填，它指定了你的缓存存放在哪块命名空间\n> cacheNames   与 value 差不多，二选一即可\n> key          可选属性，可以使用 SpEL 标签自定义缓存的key\n\n\n# @CacheEvict\n\n用途\n\n> 使用该注解标志的方法，每次都会执行，并将结果存入指定的缓存中。其他方法可以直接从响应的缓存中读取缓存数据，而不需要再去查询数据库。一般用在新增方法上。\n\n参数\n\n> 参数名          解释\n> value        缓存名，必填，它指定了你的缓存存放在哪块命名空间\n> cacheNames   与 value 差不多，二选一即可\n> key          可选属性，可以使用 SpEL 标签自定义缓存的key\n\n\n# @CachePut\n\n用途\n\n> 使用该注解标志的方法，会清空指定的缓存。一般用在更新或者删除方法上\n\n参数\n\n> 属性                 解释\n> value              缓存名，必填，它指定了你的缓存存放在哪块命名空间\n> cacheNames         与 value 差不多，二选一即可\n> key                可选属性，可以使用 SpEL 标签自定义缓存的key\n> allEntries         是否清空所有缓存，默认为 false。如果指定为 true，则方法调用后将立即清空所有的缓存\n> beforeInvocation   是否在方法执行前就清空，默认为 false。如果指定为 true，则在方法执行前就会清空缓存",normalizedContent:"# springboot集成redis\n\n\n# 1.添加依赖\n\n\x3c!-- redis --\x3e\n<dependency>\n     <groupid>org.springframework.boot</groupid>\n     <artifactid>spring-boot-starter-data-redis</artifactid>\n</dependency>\n\n\x3c!-- spring2.x集成redis所需common-pool2--\x3e\n<dependency>\n     <groupid>org.apache.commons</groupid>\n     <artifactid>commons-pool2</artifactid>\n     <version>2.6.0</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 2.添加配置类\n\n两个注解\n\n> @configuration\n> \n> @enablecaching //开启缓存使用\n\npackage com.viki.yygh.common.config;\n\nimport com.fasterxml.jackson.annotation.jsonautodetect;\nimport com.fasterxml.jackson.annotation.propertyaccessor;\nimport com.fasterxml.jackson.databind.objectmapper;\nimport org.springframework.cache.cachemanager;\nimport org.springframework.cache.annotation.enablecaching;\nimport org.springframework.context.annotation.bean;\nimport org.springframework.context.annotation.configuration;\nimport org.springframework.data.redis.cache.rediscacheconfiguration;\nimport org.springframework.data.redis.cache.rediscachemanager;\nimport org.springframework.data.redis.connection.redisconnectionfactory;\nimport org.springframework.data.redis.core.redistemplate;\nimport org.springframework.data.redis.serializer.jackson2jsonredisserializer;\nimport org.springframework.data.redis.serializer.redisserializationcontext;\nimport org.springframework.data.redis.serializer.redisserializer;\nimport org.springframework.data.redis.serializer.stringredisserializer;\n\nimport java.time.duration;\n\n@configuration\n@enablecaching  //开启缓存使用\npublic class redisconfig {\n\n    /**\n     * 设置redistemplate规则\n     *\n     * @param redisconnectionfactory\n     * @return\n     */\n    @bean\n    public redistemplate<object, object> redistemplate(redisconnectionfactory redisconnectionfactory) {\n        redistemplate<object, object> redistemplate = new redistemplate<>();\n        redistemplate.setconnectionfactory(redisconnectionfactory);\n        jackson2jsonredisserializer jackson2jsonredisserializer = new jackson2jsonredisserializer(object.class);\n\n        //解决查询缓存转换异常的问题\n        objectmapper om = new objectmapper();\n        // 指定要序列化的域，field,get和set,以及修饰符范围，any是都有包括private和public\n        om.setvisibility(propertyaccessor.all, jsonautodetect.visibility.any);\n        // 指定序列化输入的类型，类必须是非final修饰的，final修饰的类，比如string,integer等会跑出异常\n        om.enabledefaulttyping(objectmapper.defaulttyping.non_final);\n        jackson2jsonredisserializer.setobjectmapper(om);\n\n        //序列号key value\n        redistemplate.setkeyserializer(new stringredisserializer());\n        redistemplate.setvalueserializer(jackson2jsonredisserializer);\n        redistemplate.sethashkeyserializer(new stringredisserializer());\n        redistemplate.sethashvalueserializer(jackson2jsonredisserializer);\n\n        redistemplate.afterpropertiesset();\n        return redistemplate;\n    }\n\n    /**\n     * 设置cachemanager缓存规则\n     *\n     * @param factory\n     * @return\n     */\n    @bean\n    public cachemanager cachemanager(redisconnectionfactory factory) {\n        redisserializer<string> redisserializer = new stringredisserializer();\n        jackson2jsonredisserializer jackson2jsonredisserializer = new jackson2jsonredisserializer(object.class);\n\n        //解决查询缓存转换异常的问题\n        objectmapper om = new objectmapper();\n        om.setvisibility(propertyaccessor.all, jsonautodetect.visibility.any);\n        om.enabledefaulttyping(objectmapper.defaulttyping.non_final);\n        jackson2jsonredisserializer.setobjectmapper(om);\n\n        // 配置序列化（解决乱码的问题）,过期时间600秒\n        rediscacheconfiguration config = rediscacheconfiguration.defaultcacheconfig()\n                .entryttl(duration.ofseconds(600))\n                .serializekeyswith(redisserializationcontext.serializationpair.fromserializer(redisserializer))\n                .serializevalueswith(redisserializationcontext.serializationpair.fromserializer(jackson2jsonredisserializer))\n                .disablecachingnullvalues();\n\n        rediscachemanager cachemanager = rediscachemanager.builder(factory)\n                .cachedefaults(config)\n                .build();\n        return cachemanager;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n\n\n\n# 3.添加配置\n\nspring.redis.host=192.168.44.165\nspring.redis.port=6379\nspring.redis.database= 0\nspring.redis.timeout=1800000\n\nspring.redis.lettuce.pool.max-active=20\nspring.redis.lettuce.pool.max-wait=-1\n#最大阻塞等待时间(负数表示没限制)\nspring.redis.lettuce.pool.max-idle=5\nspring.redis.lettuce.pool.min-idle=0\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 使用注解\n\n\n# @cacheable\n\n用途\n\n> 根据方法对其返回结果进行缓存，下次请求时，如果缓存存在，则直接读取缓存数据返回；如果缓存不存在，则执行方法，并把返回的结果存入缓存中。一般用在查询方法上。\n\n参数\n\n> 参数名          解释\n> value        缓存名，必填，它指定了你的缓存存放在哪块命名空间\n> cachenames   与 value 差不多，二选一即可\n> key          可选属性，可以使用 spel 标签自定义缓存的key\n\n\n# @cacheevict\n\n用途\n\n> 使用该注解标志的方法，每次都会执行，并将结果存入指定的缓存中。其他方法可以直接从响应的缓存中读取缓存数据，而不需要再去查询数据库。一般用在新增方法上。\n\n参数\n\n> 参数名          解释\n> value        缓存名，必填，它指定了你的缓存存放在哪块命名空间\n> cachenames   与 value 差不多，二选一即可\n> key          可选属性，可以使用 spel 标签自定义缓存的key\n\n\n# @cacheput\n\n用途\n\n> 使用该注解标志的方法，会清空指定的缓存。一般用在更新或者删除方法上\n\n参数\n\n> 属性                 解释\n> value              缓存名，必填，它指定了你的缓存存放在哪块命名空间\n> cachenames         与 value 差不多，二选一即可\n> key                可选属性，可以使用 spel 标签自定义缓存的key\n> allentries         是否清空所有缓存，默认为 false。如果指定为 true，则方法调用后将立即清空所有的缓存\n> beforeinvocation   是否在方法执行前就清空，默认为 false。如果指定为 true，则在方法执行前就会清空缓存",charsets:{cjk:!0}},{title:"MongoDB",frontmatter:{title:"MongoDB",date:"2022-01-16T20:13:57.000Z",permalink:"/pages/7c9b4b/",categories:["数据库","MongoDB"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/30.MongoDB/10.MongoDB.html",relativePath:"25.数据库/30.MongoDB/10.MongoDB.md",key:"v-69e8ae2a",path:"/pages/7c9b4b/",headers:[{level:2,title:"什么是MongoDB",slug:"什么是mongodb",normalizedTitle:"什么是mongodb",charIndex:191},{level:2,title:"MangoDB特点",slug:"mangodb特点",normalizedTitle:"mangodb特点",charIndex:562},{level:2,title:"Docker安装MongoDB",slug:"docker安装mongodb",normalizedTitle:"docker安装mongodb",charIndex:1283},{level:2,title:"MongoDB常用命令",slug:"mongodb常用命令",normalizedTitle:"mongodb常用命令",charIndex:1656},{level:3,title:"数据库的相关操作",slug:"数据库的相关操作",normalizedTitle:"数据库的相关操作",charIndex:1799},{level:3,title:"文档的数据操作",slug:"文档的数据操作",normalizedTitle:"文档的数据操作",charIndex:1988}],headersStr:"什么是MongoDB MangoDB特点 Docker安装MongoDB MongoDB常用命令 数据库的相关操作 文档的数据操作",content:'# MongoDB简介和安装\n\n官方网站\n\nhttps://www.mongodb.com/\n\n官方文档\n\nhttps://docs.mongodb.com/guides/\n\nhttps://docs.docker.com/get-started/overview/\n\n可视化交互工具文档\n\nhttps://docs.mongodb.com/compass/master/\n\n\n# 什么是MongoDB\n\nMongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。\n\n> 分布式文件存储，一个文件拆分称多个文件，分机器存储，再错开备份，宕一台或一分文件损坏，都能恢复完整文件\n> \n> 就是 分片，复制 {elastic search}\n> \n> 文件类型是以key-value存储，类似json格式存储，称为bson\n> \n> 支持索引，支持复杂查询，和关系型数据库最像的noSQL数据库\n\n在高负载的情况下，添加更多的节点，可以保证服务器性能。\n\nMongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。\n\nMongoDB 将数据存储为一个文档，数据结构由键值(key=>value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。\n\n\n# MangoDB特点\n\n1、MongoDB 是一个面向文档存储的数据库，操作起来比较简单和容易。\n\n2、你可以在MongoDB记录中设置任何属性的索引 (如：FirstName="Sameer",Address="8 Gandhi Road")来实现更快的排序。\n\n3、你可以通过本地或者网络创建数据镜像，这使得MongoDB有更强的扩展性。\n\n4、如果负载的增加（需要更多的存储空间和更强的处理能力），它可以分布在计算机网络中的其他节点上这就是所谓的分片。\n\n5、Mongo支持丰富的查询表达式。查询指令使用JSON形式的标记，可轻易查询文档中内嵌的对象及数组。\n\n6、MongoDb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段。\n\n7、Mongodb中的Map/reduce主要是用来对数据进行批量处理和聚合操作。\n\n8、Map和Reduce。Map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给Reduce函数进行处理。\n\n9、Map函数和Reduce函数是使用Javascript编写的，并可以通过db.runCommand或mapreduce命令来执行MapReduce操作。\n\n10、GridFS是MongoDB中的一个内置功能，可以用于存放大量小文件。\n\n11、MongoDB允许在服务端执行脚本，可以用Javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。\n\n12、MongoDB支持各种编程语言:RUBY，PYTHON，JAVA，C++，PHP，C#等多种语言。\n\n13、MongoDB安装简单。\n\n\n# Docker安装MongoDB\n\n1.拉取镜像\n\ndocker pull mongo:4.4.8\n\n\n1\n\n\n2.创建并启动容器\n\n//对data目录授权\nchmod 777 data\n\ndocker run -d --restart=always -p 27017:27017 --name mymongo -v /data/db:/data/db -d mongo:4.4.8\n\n# -d 表示创建守护式容器在后台运行\n# --restart 表示\n# -p 表示宿主机和容器之间的端口映射\n# -v 表示目录映射关系[直接在宿主机上修改文件]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n3.进入容器\n\ndocker exec -it mymongo /bin/bash\n\n\n1\n\n\n4.登录mongoDB\n\nmongo\n\n\n1\n\n\n\n# MongoDB常用命令\n\n> MongoDB的主键默认是 _id 其类型默认是 ObjectId类型\n\n> Objectld使用12字节的存储空间，每个字节二位十六进制数字，是一个24位的字符串\n\n\n\nMongDB中的文档就是json格式的数据，字段就相当于json中的键\n\n\n\n\n# 数据库的相关操作\n\n#查询命令帮助\ndb.help();\n\n#查询所有数据库\nshow dbs;\n\n#使用/切换/创建数据库[use test 若数据库不存在则创建]\nuse test;\n\n#查看当前所在库\ndb.getName();\n\n#删除当前使用数据库\ndb.dropDatabase();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 文档的数据操作\n\n文档是一组键值(key-value)对(即BSON)。MongoDB 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 MongoDB 非常突出的特点。\n\n\n\n# 插入操作\n\n#insert User集合名\ndb.User.save({name:"liu",age:21,sex:true});\n\n\n1\n2\n\n\n# 查询操作\n\n#查询所有\ndb.User.find();\n\n#字段/域条件查询\ndb.User.find({name:"liu"});\n\n#字段/域条件查询，指定字段显示\ndb.User.find({name:"liu"},{\'name\':1,\'age\':1})\n\n#排序查询，使用sort()方法，1表示升序排序，-1表示降序排序\ndb.User.find().sort({age:1})\n#条件查询，指定指端显示，按年龄排序\ndb.User.find({name:"liu"},{\'name\':1,\'age\':1}).sort({age:1})\n\n\n#分页查询实现，读取指定量的数据\n#查询跳过第m行开始后面的n条数据\ndb.User.find().skip(m).limit(n);\ndb.User.find().skip(0).limit(3);\n\n\n#多条件查询{$in:[xx,xx,xx]}\ndb.User.find({age:{$in:[22,21,12]}});\n\n#计数查询,使用count()函数进行查询\t{$gt:xx}大于>\ndb.User.find({age:{$gt:20}}).count();\n\n#多条件查询{$or:[{条件一},{条件二}]}\ndb.User.find({$or:[{age:20},{age:21}]})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n# 聚合查询\n\n> 参考如下两个链接，就类似于Linux中的管道操作\n\n聚合查询入门 https://www.runoob.com/mongodb/mongodb-aggregate.html\n\n聚合查询高级操作 https://www.cnblogs.com/zhoujie/p/mongo1.html\n\n\n\n#聚合查询使用aggregate，MySQL对比栗子\n# select by_user, count(*) from article group by by_user\n\ndb.article.aggregate([{$group : {_id : "$by_user", num_tutorial : {$sum : 1}}}])\n\n\n1\n2\n3\n4\n\n\n# 更新操作\n\n#按条件更新某个文档中域的值\tupdate({更新条件},{$set{更新的值}})\n#upsert:如FI标记录不存在，是否插入新文档。\n#multi:是否更新多个文档\ndb.User.update({name:"liu"},{$set:{age:100,sex:0}});\n\n\n1\n2\n3\n4\n\n\n# 删除操作\n\n> remove()用于删除单个或全部文档，删除后的文档无法恢复\n\ndb.User.remove()\n\n\n1\n\n\nremove()方法已经过时\n\n\n\nhttps://www.runoob.com/mongodb/mongodb-remove.html',normalizedContent:'# mongodb简介和安装\n\n官方网站\n\nhttps://www.mongodb.com/\n\n官方文档\n\nhttps://docs.mongodb.com/guides/\n\nhttps://docs.docker.com/get-started/overview/\n\n可视化交互工具文档\n\nhttps://docs.mongodb.com/compass/master/\n\n\n# 什么是mongodb\n\nmongodb 是由c++语言编写的，是一个基于分布式文件存储的开源数据库系统。\n\n> 分布式文件存储，一个文件拆分称多个文件，分机器存储，再错开备份，宕一台或一分文件损坏，都能恢复完整文件\n> \n> 就是 分片，复制 {elastic search}\n> \n> 文件类型是以key-value存储，类似json格式存储，称为bson\n> \n> 支持索引，支持复杂查询，和关系型数据库最像的nosql数据库\n\n在高负载的情况下，添加更多的节点，可以保证服务器性能。\n\nmongodb 旨在为web应用提供可扩展的高性能数据存储解决方案。\n\nmongodb 将数据存储为一个文档，数据结构由键值(key=>value)对组成。mongodb 文档类似于 json 对象。字段值可以包含其他文档，数组及文档数组。\n\n\n# mangodb特点\n\n1、mongodb 是一个面向文档存储的数据库，操作起来比较简单和容易。\n\n2、你可以在mongodb记录中设置任何属性的索引 (如：firstname="sameer",address="8 gandhi road")来实现更快的排序。\n\n3、你可以通过本地或者网络创建数据镜像，这使得mongodb有更强的扩展性。\n\n4、如果负载的增加（需要更多的存储空间和更强的处理能力），它可以分布在计算机网络中的其他节点上这就是所谓的分片。\n\n5、mongo支持丰富的查询表达式。查询指令使用json形式的标记，可轻易查询文档中内嵌的对象及数组。\n\n6、mongodb 使用update()命令可以实现替换完成的文档（数据）或者一些指定的数据字段。\n\n7、mongodb中的map/reduce主要是用来对数据进行批量处理和聚合操作。\n\n8、map和reduce。map函数调用emit(key,value)遍历集合中所有的记录，将key与value传给reduce函数进行处理。\n\n9、map函数和reduce函数是使用javascript编写的，并可以通过db.runcommand或mapreduce命令来执行mapreduce操作。\n\n10、gridfs是mongodb中的一个内置功能，可以用于存放大量小文件。\n\n11、mongodb允许在服务端执行脚本，可以用javascript编写某个函数，直接在服务端执行，也可以把函数的定义存储在服务端，下次直接调用即可。\n\n12、mongodb支持各种编程语言:ruby，python，java，c++，php，c#等多种语言。\n\n13、mongodb安装简单。\n\n\n# docker安装mongodb\n\n1.拉取镜像\n\ndocker pull mongo:4.4.8\n\n\n1\n\n\n2.创建并启动容器\n\n//对data目录授权\nchmod 777 data\n\ndocker run -d --restart=always -p 27017:27017 --name mymongo -v /data/db:/data/db -d mongo:4.4.8\n\n# -d 表示创建守护式容器在后台运行\n# --restart 表示\n# -p 表示宿主机和容器之间的端口映射\n# -v 表示目录映射关系[直接在宿主机上修改文件]\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n3.进入容器\n\ndocker exec -it mymongo /bin/bash\n\n\n1\n\n\n4.登录mongodb\n\nmongo\n\n\n1\n\n\n\n# mongodb常用命令\n\n> mongodb的主键默认是 _id 其类型默认是 objectid类型\n\n> objectld使用12字节的存储空间，每个字节二位十六进制数字，是一个24位的字符串\n\n\n\nmongdb中的文档就是json格式的数据，字段就相当于json中的键\n\n\n\n\n# 数据库的相关操作\n\n#查询命令帮助\ndb.help();\n\n#查询所有数据库\nshow dbs;\n\n#使用/切换/创建数据库[use test 若数据库不存在则创建]\nuse test;\n\n#查看当前所在库\ndb.getname();\n\n#删除当前使用数据库\ndb.dropdatabase();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n\n# 文档的数据操作\n\n文档是一组键值(key-value)对(即bson)。mongodb 的文档不需要设置相同的字段，并且相同的字段不需要相同的数据类型，这与关系型数据库有很大的区别，也是 mongodb 非常突出的特点。\n\n\n\n# 插入操作\n\n#insert user集合名\ndb.user.save({name:"liu",age:21,sex:true});\n\n\n1\n2\n\n\n# 查询操作\n\n#查询所有\ndb.user.find();\n\n#字段/域条件查询\ndb.user.find({name:"liu"});\n\n#字段/域条件查询，指定字段显示\ndb.user.find({name:"liu"},{\'name\':1,\'age\':1})\n\n#排序查询，使用sort()方法，1表示升序排序，-1表示降序排序\ndb.user.find().sort({age:1})\n#条件查询，指定指端显示，按年龄排序\ndb.user.find({name:"liu"},{\'name\':1,\'age\':1}).sort({age:1})\n\n\n#分页查询实现，读取指定量的数据\n#查询跳过第m行开始后面的n条数据\ndb.user.find().skip(m).limit(n);\ndb.user.find().skip(0).limit(3);\n\n\n#多条件查询{$in:[xx,xx,xx]}\ndb.user.find({age:{$in:[22,21,12]}});\n\n#计数查询,使用count()函数进行查询\t{$gt:xx}大于>\ndb.user.find({age:{$gt:20}}).count();\n\n#多条件查询{$or:[{条件一},{条件二}]}\ndb.user.find({$or:[{age:20},{age:21}]})\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n\n\n# 聚合查询\n\n> 参考如下两个链接，就类似于linux中的管道操作\n\n聚合查询入门 https://www.runoob.com/mongodb/mongodb-aggregate.html\n\n聚合查询高级操作 https://www.cnblogs.com/zhoujie/p/mongo1.html\n\n\n\n#聚合查询使用aggregate，mysql对比栗子\n# select by_user, count(*) from article group by by_user\n\ndb.article.aggregate([{$group : {_id : "$by_user", num_tutorial : {$sum : 1}}}])\n\n\n1\n2\n3\n4\n\n\n# 更新操作\n\n#按条件更新某个文档中域的值\tupdate({更新条件},{$set{更新的值}})\n#upsert:如fi标记录不存在，是否插入新文档。\n#multi:是否更新多个文档\ndb.user.update({name:"liu"},{$set:{age:100,sex:0}});\n\n\n1\n2\n3\n4\n\n\n# 删除操作\n\n> remove()用于删除单个或全部文档，删除后的文档无法恢复\n\ndb.user.remove()\n\n\n1\n\n\nremove()方法已经过时\n\n\n\nhttps://www.runoob.com/mongodb/mongodb-remove.html',charsets:{cjk:!0}},{title:"redis常用命令",frontmatter:{title:"redis常用命令",date:"2022-01-30T13:58:29.000Z",permalink:"/pages/2fef79/",categories:["数据库","Redis"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/20.Redis/40.redis%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",relativePath:"25.数据库/20.Redis/40.redis常用命令.md",key:"v-0a14c254",path:"/pages/2fef79/",headersStr:null,content:"# redis 常用命令\n\n# 登录启动切换等...\n\n#配置文件后台启动redis\nredis-server /xxx/xxx/redis.conf\n\n#查看redis启动进程 6379\nps -ef|grep redis\n\n#客户端访问redis【当有多个redis时，需要指定端口号】\nredis-cli -p 6379\n\n#关闭redis【当有多个redis时，需要指定端口号】\nredis-cli -p 6379 shutdown\n\n#关闭redis【当在登录状态时】\nshutdown\nexit\n\n#切换redis数据库\nselect 8<dbID>\t\t\t\n\n#查看当前数据库的key的数量\ndbsize\n\n#清空当前数据库\nflushdb\n\n#通杀全部库\nflushall\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n# key\n\n#查看当前库的所有key【支持模糊匹配】\nkeys *\t\t[keys *1]\n\n#判断某个key k1 是否存在\nexits <k1>\n\n#获取某个key k1 的值\nget <k1>\n\n#查看某个key k1 属性值的类型\ntype <k1>\n\n#删除某个key k1，阻塞式删除【等k1删除完了，采取做其他事】\ndel k1\n\n#删除某个key k1，非阻塞式删除【若有其他事务，可以晾在那儿，等会儿删,异步操作】\nunlink k1\n\n#设置过期时间【k2 10s expire】\nexpire k2 10\n\n#查看key过期时间【返回-2则过期】全程：time to life\nttl k2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n# string\n\n#关联键和值【只能一个一个设置】【覆盖】\nset <key> <value>\n\n#关联键和值【只能一个一个设置】【不覆盖，原子操作】全称：set if no exists\nsetnx <key> <value>\n\n#批量设置键和值【设置多个】【覆盖】全称：multi set\nmset <key> <value> <key> <value> <key> <value> ...\n\n#批量设置键和值【设置多个】【不覆盖，原子操作，一个失败全失败】全称：multi set if no exists\nmsetnx <key> <value> <key> <value> <key> <value> ...\n\n#批量获取键的值 全称：multi set\nmget <key> <key> <key> ...\n\n#设置键值对的过期时间 全称：set expiration\nsetex <key> <seconds/ <value>\n\n#获取键对应值的部分/全部\ngetrange <key> <startIndex> <endIndex>\n\n#在value中指定位置插入值\nsetrange <key> <startIndex> <endIndex>\n\n#在value中追加值\nappend <key> <value>\n\n#数值型value +1 全称：increment key\nincr key\n\n#数值型value -1 全称：decrement key\ndecr key\n\n#在指定数值基础上增加or减少\nincrby key num\ndecrby key num \n\n#得到该字符串的长度 全称：string length key\nstrlen key\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n# list\n\n#链表已经初始化ok，直接使用命令插值就行\n\n#从左边开始进入队列【->】全称：left push\nlpush key value value value ...\n\n#从右边开始进入队列【<-】全称：right push\nrpush key value value value ...\n\n#从队列右边弹出一个值【>-,值在键在，值亡键亡】全称：right pop\nrpop key\n\n#从队列左边弹出一个值【>-,值在键在，值亡键亡】全称：left pop\nlpop key\n\n#从①号队列【右边】弹出一个值，左边插入到②号队列中\nrpoplpush key1 key2\nrpoprpush key1 key2\nlpoplpush key1 key2\nlpoprpush key1 key2\n\n#获取索引下标的值\nlindex key[listname] index\n\n#按索引下表获取元素的值 全称：listname range\nlrange key startIndex endIndex\n\n#获取链表队列的长度【元素的个数】 全称：listname length\nllen key\n\n#在链表队列value值的后面插入一个newvalue值 全称：listname insert\nlinsert key before value newvalue\n\n# n>0 从左向右删除n个元素。\n# n<0 从右向左删除n个元素。\n# n=0 删除所有值为指定值的值。\nlrem key[listname] n z指定值\n\n#设置替换值【将listname的index处的值替换位value】\nlset key index value\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n# set\n\n# hash\n\n# Zset",normalizedContent:"# redis 常用命令\n\n# 登录启动切换等...\n\n#配置文件后台启动redis\nredis-server /xxx/xxx/redis.conf\n\n#查看redis启动进程 6379\nps -ef|grep redis\n\n#客户端访问redis【当有多个redis时，需要指定端口号】\nredis-cli -p 6379\n\n#关闭redis【当有多个redis时，需要指定端口号】\nredis-cli -p 6379 shutdown\n\n#关闭redis【当在登录状态时】\nshutdown\nexit\n\n#切换redis数据库\nselect 8<dbid>\t\t\t\n\n#查看当前数据库的key的数量\ndbsize\n\n#清空当前数据库\nflushdb\n\n#通杀全部库\nflushall\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\n\n# key\n\n#查看当前库的所有key【支持模糊匹配】\nkeys *\t\t[keys *1]\n\n#判断某个key k1 是否存在\nexits <k1>\n\n#获取某个key k1 的值\nget <k1>\n\n#查看某个key k1 属性值的类型\ntype <k1>\n\n#删除某个key k1，阻塞式删除【等k1删除完了，采取做其他事】\ndel k1\n\n#删除某个key k1，非阻塞式删除【若有其他事务，可以晾在那儿，等会儿删,异步操作】\nunlink k1\n\n#设置过期时间【k2 10s expire】\nexpire k2 10\n\n#查看key过期时间【返回-2则过期】全程：time to life\nttl k2\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n\n\n# string\n\n#关联键和值【只能一个一个设置】【覆盖】\nset <key> <value>\n\n#关联键和值【只能一个一个设置】【不覆盖，原子操作】全称：set if no exists\nsetnx <key> <value>\n\n#批量设置键和值【设置多个】【覆盖】全称：multi set\nmset <key> <value> <key> <value> <key> <value> ...\n\n#批量设置键和值【设置多个】【不覆盖，原子操作，一个失败全失败】全称：multi set if no exists\nmsetnx <key> <value> <key> <value> <key> <value> ...\n\n#批量获取键的值 全称：multi set\nmget <key> <key> <key> ...\n\n#设置键值对的过期时间 全称：set expiration\nsetex <key> <seconds/ <value>\n\n#获取键对应值的部分/全部\ngetrange <key> <startindex> <endindex>\n\n#在value中指定位置插入值\nsetrange <key> <startindex> <endindex>\n\n#在value中追加值\nappend <key> <value>\n\n#数值型value +1 全称：increment key\nincr key\n\n#数值型value -1 全称：decrement key\ndecr key\n\n#在指定数值基础上增加or减少\nincrby key num\ndecrby key num \n\n#得到该字符串的长度 全称：string length key\nstrlen key\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n\n\n# list\n\n#链表已经初始化ok，直接使用命令插值就行\n\n#从左边开始进入队列【->】全称：left push\nlpush key value value value ...\n\n#从右边开始进入队列【<-】全称：right push\nrpush key value value value ...\n\n#从队列右边弹出一个值【>-,值在键在，值亡键亡】全称：right pop\nrpop key\n\n#从队列左边弹出一个值【>-,值在键在，值亡键亡】全称：left pop\nlpop key\n\n#从①号队列【右边】弹出一个值，左边插入到②号队列中\nrpoplpush key1 key2\nrpoprpush key1 key2\nlpoplpush key1 key2\nlpoprpush key1 key2\n\n#获取索引下标的值\nlindex key[listname] index\n\n#按索引下表获取元素的值 全称：listname range\nlrange key startindex endindex\n\n#获取链表队列的长度【元素的个数】 全称：listname length\nllen key\n\n#在链表队列value值的后面插入一个newvalue值 全称：listname insert\nlinsert key before value newvalue\n\n# n>0 从左向右删除n个元素。\n# n<0 从右向左删除n个元素。\n# n=0 删除所有值为指定值的值。\nlrem key[listname] n z指定值\n\n#设置替换值【将listname的index处的值替换位value】\nlset key index value\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n\n\n# set\n\n# hash\n\n# zset",charsets:{cjk:!0}},{title:"MongoDB整合SpringBoot",frontmatter:{title:"MongoDB整合SpringBoot",date:"2022-01-16T20:15:31.000Z",permalink:"/pages/3bb24f/",categories:["数据库","MongoDB"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/30.MongoDB/20.MongoDB%E6%95%B4%E5%90%88SpringBoot.html",relativePath:"25.数据库/30.MongoDB/20.MongoDB整合SpringBoot.md",key:"v-b51269ae",path:"/pages/3bb24f/",headers:[{level:2,title:"官方参考文档",slug:"官方参考文档",normalizedTitle:"官方参考文档",charIndex:26},{level:2,title:"两种方式操作MongoDB",slug:"两种方式操作mongodb",normalizedTitle:"两种方式操作mongodb",charIndex:171},{level:3,title:"1.引入依赖",slug:"_1-引入依赖",normalizedTitle:"1.引入依赖",charIndex:246},{level:3,title:"2.添加MongoDB配置",slug:"_2-添加mongodb配置",normalizedTitle:"2.添加mongodb配置",charIndex:457},{level:2,title:"MongoTemplate CRUD",slug:"mongotemplate-crud",normalizedTitle:"mongotemplate crud",charIndex:540},{level:3,title:"1.常用方法",slug:"_1-常用方法",normalizedTitle:"1.常用方法",charIndex:563},{level:3,title:"2.查询封装条件",slug:"_2-查询封装条件",normalizedTitle:"2.查询封装条件",charIndex:881},{level:3,title:"3.测试用例",slug:"_3-测试用例",normalizedTitle:"3.测试用例",charIndex:1448},{level:2,title:"MongoRepository CRUD",slug:"mongorepository-crud",normalizedTitle:"mongorepository crud",charIndex:5276},{level:2,title:"总结",slug:"总结",normalizedTitle:"总结",charIndex:9655}],headersStr:"官方参考文档 两种方式操作MongoDB 1.引入依赖 2.添加MongoDB配置 MongoTemplate CRUD 1.常用方法 2.查询封装条件 3.测试用例 MongoRepository CRUD 总结",content:'# MongoDB整合SpringBoot\n\n\n# 官方参考文档\n\nhttps://spring.io/projects/spring-data-mongodb\n\nhttps://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#dependencies\n\n\n# 两种方式操作MongoDB\n\n * MongoTemplate 操作灵活，但不简单\n * MongoRepository 操作简单，但不灵活\n\n\n# 1.引入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-data-mongodb</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2.添加MongoDB配置\n\nspring.data.mongodb.uri=mongodb://192.168.xxx.xxx:27017/库名\n\n\n1\n\n\n\n# MongoTemplate CRUD\n\n\n# 1.常用方法\n\nmongoTemplate.findAll(User.class): 查询User文档的全部数据\nmongoTemplate.findById(<id>, User.class): 查询User文档id为id的数据\nmongoTemplate.find(query, User.class);: 根据query内的查询条件查询\nmongoTemplate.upsert(query, update, User.class): 修改\nmongoTemplate.remove(query, User.class): 删除\nmongoTemplate.insert(User): 新增\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2.查询封装条件\n\n1.创建一个query对象（用来封装所有条件对象)，再创建一个criteria对象（用来构建条件）\n\n2.条件类型\n精准条件：criteria.and(“key”).is(“条件”)\n模糊条件：criteria.and(“key”).regex(“条件”)\n\n3.封装条件：query.addCriteria(criteria)\n\n4.大于小于条件\n大于（创建新的criteria）：Criteria gt = Criteria.where(“key”).gt（“条件”）\n小于（创建新的criteria）：Criteria lt = Criteria.where(“key”).lt（“条件”）\n\n5.\nQuery.addCriteria(new Criteria().andOperator(gt,lt));\n\n6.一个query中只能有一个andOperator()。其参数也可以是Criteria数组。\n\n7.排序 ：query.with（new Sort(Sort.Direction.ASC, "age"). and(new Sort(Sort.Direction.DESC, "date")))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 3.测试用例\n\n# 1.测试实体类 UserTest.java\n\n@Data\n@Document("User")\npublic class User {\n    @Id\n    private String id;\n    private String name;\n    private Integer age;\n    private String email;\n    private String createDate;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 2.测试类 MongoTest.java\n\n@RestController\n@RequestMapping("/mongo")\npublic class MongoTest {\n\n    @Autowired\n    private MongoTemplate mongoTemplate;\n    \n    //添加一个文档记录，存储格式为json\n    @GetMapping("create")\n    public void createUser(User user){\n        mongoTemplate.insert(user);\n    }\n    \n    /**\n     * 查询mongo库中一个文档记录所有内容\n     * 查询文档名 user\n     * 查询所有方法 .findAll()\n     */\n    @GetMapping("findAll")\n    public void findUser(String user){\n        list<User> userList = mongoTemplate.findAll(user);\n        userList.forEach(System.out::print());\n    }\n    \n   \n\n    //根据id查询\n    @GetMapping("findId")\n    public void getById() {\n        User user =\n                mongoTemplate.findById("5ffbfa2ac290f356edf9b5aa", User.class);\n        System.out.println(user);\n    }\n\n    //条件查询\n    @GetMapping("findUser")\n    public void findUserList() {\n        Query query = new Query(Criteria\n                .where("name").is("test")\n                .and("age").is(20));\n        List<User> userList = mongoTemplate.find(query, User.class);\n        System.out.println(userList);\n    }\n\n    //模糊查询\n    @GetMapping("findLike")\n    public void findUsersLikeName() {\n        String name = "est";\n        String regex = String.format("%s%s%s", "^.*", name, ".*$");\n        Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n        Query query = new Query(Criteria.where("name").regex(pattern));\n        List<User> userList = mongoTemplate.find(query, User.class);\n        System.out.println(userList);\n    }\n\n    //分页查询\n    @GetMapping("findPage")\n    public void findUsersPage() {\n        String name = "est";\n        int pageNo = 1;\n        int pageSize = 10;\n\n        Query query = new Query();\n        String regex = String.format("%s%s%s", "^.*", name, ".*$");\n        Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);\n        query.addCriteria(Criteria.where("name").regex(pattern));\n        int totalCount = (int) mongoTemplate.count(query, User.class);\n        List<User> userList = mongoTemplate.find(query.skip((pageNo - 1) * pageSize).limit(pageSize), User.class);\n\n        Map<String, Object> pageMap = new HashMap<>();\n        pageMap.put("list", userList);\n        pageMap.put("totalCount",totalCount);\n        System.out.println(pageMap);\n    }\n\n    //修改\n    @GetMapping("update")\n    public void updateUser() {\n        User user = mongoTemplate.findById("5ffbfa2ac290f356edf9b5aa", User.class);\n        user.setName("test_1");\n        user.setAge(25);\n        user.setEmail("493220990@qq.com");\n        Query query = new Query(Criteria.where("_id").is(user.getId()));\n        Update update = new Update();\n        update.set("name", user.getName());\n        update.set("age", user.getAge());\n        update.set("email", user.getEmail());\n        UpdateResult result = mongoTemplate.upsert(query, update, User.class);\n        long count = result.getModifiedCount();\n        System.out.println(count);\n    }\n\n    //删除操作\n    @GetMapping("delete")\n    public void delete() {\n        Query query =\n                new Query(Criteria.where("_id").is("5ffbfa2ac290f356edf9b5aa"));\n        DeleteResult result = mongoTemplate.remove(query, User.class);\n        long count = result.getDeletedCount();\n        System.out.println(count);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n\n\n\n# MongoRepository CRUD\n\n1.映射关系\n\n\n\n> 1、不是随便声明的，而需要符合一定的规范 2、 查询方法以find | read | get开头 3、 涉及条件查询时，条件的属性用条件关键字连接 4、 要注意的是：条件属性首字母需要大写 5、 支持属性的级联查询，但若当前类有符合条件的属性则优先使用，而不使用级联属性,若需要使用级联属性，则属性之间使用_强制进行连接\n\n// where name = ? and age = ?;\nfindUserByNameAndAge(String one,String two)\n\n\n1\n2\n\n\n# 1.引入依赖\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-data-mongodb</artifactId>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 2.添加Repository类\n\n> interface类必须要继承MongoRepository类，并写入泛型，和主键\n\n> 这里使用多态，执行时，会执行重写的方法\n\n/**\n * 参数一：泛型\n * 参数二：主键类型\n */\n@Repository\npublic interface UserRepository extends MongoRepository<User, String> {\n    //User表示实体类映射，增加可读性\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 3.测试用例\n\n@RestController\n@RequestMapping("/mongo2")\npublic class TestMongo2 {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    //添加\n    @GetMapping("create")\n    public void createUser(User user) {\n        userRepository.save(user);\n    }\n\n    //查询所有\n    @GetMapping("findAll")\n    public void findUser() {\n        List<User> userList = userRepository.findAll();\n        System.out.println(userList);\n    }\n\n    //id查询\n    @GetMapping("findId")\n    public void getById() {\n        User user = userRepository.findById("60b8d57ed539ed5b124942de").get();\n        System.out.println(user);\n    }\n\n    //条件查询\n    @GetMapping("findQuery")\n    public void findUserList() {\n        User user = new User();\n        user.setName("张三");\n        user.setAge(20);\n        Example<User> userExample = Example.of(user);\n        List<User> userList = userRepository.findAll(userExample);\n        System.out.println(userList);\n    }\n\n    //模糊查询\n    @GetMapping("findLike")\n    public void findUsersLikeName() {\n        //创建匹配器，即如何使用查询条件\n        ExampleMatcher matcher = ExampleMatcher.matching() //构建对象\n                .withStringMatcher(ExampleMatcher.StringMatcher.CONTAINING) //改变默认字符串匹配方式：模糊查询\n                .withIgnoreCase(true); //改变默认大小写忽略方式：忽略大小写\n        User user = new User();\n        user.setName("三");\n        Example<User> userExample = Example.of(user, matcher);\n        List<User> userList = userRepository.findAll(userExample);\n        System.out.println(userList);\n    }\n\n    //分页查询\n    @GetMapping("findPage")\n    public void findUsersPage() {\n        //1.设置排序\n        Sort sort = Sort.by(Sort.Direction.DESC, "age");\n\t\t//2.设置分页参数，0为第一页，10当前页记录数，排序规则\n        Pageable pageable = PageRequest.of(0, 10, sort);\n\t\t//创建匹配器，即如何使用查询条件\n        ExampleMatcher matcher = ExampleMatcher.matching() //构建对象\n            \t//改变默认字符串匹配方式：模糊查询\n                .withStringMatcher(ExampleMatcher.StringMatcher.CONTAINING) \n            \t//改变默认大小写忽略方式：忽略大小写\n                .withIgnoreCase(true); \n        //构造条件\n        User user = new User();\n        user.setName("三");\n        //创建条件实例\n        Example<User> userExample = Example.of(user, matcher);\n\t\t\n        //直接获取pages总的数据封装到R中，返回给前端\n        Page<User> pages = userRepository.findAll(example, pageable);\n    }\n\n    //修改，修改和添加都使用同一个方法\n    @GetMapping("update")\n    public void updateUser() {\n        User user = userRepository.findById("60b8d57ed539ed5b124942de").get();\n        user.setName("张三_1");\n        user.setAge(25);\n        user.setEmail("883220990@qq.com");\n        User save = userRepository.save(user);\n    }\n\n    //删除\n    @GetMapping("delete")\n    public void delete() {\n        userRepository.deleteById("60b8d57ed539ed5b124942de");\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n参考\n\nhttp://www.mydlq.club/article/85/\n\n# 4.直接使用Spring Data\n\n> 就不需要自己去写CRUD的具体操作\n\n在继承的接口中按照SpringData规范进行定义\n\n@Repository\npublic interface UserRepository extends MongoRepository<User, String> {\n\n    List<User> findByName(String name);\n\n    List<User> findByNameLike(String name);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n@GetMapping("testMethod2")\npublic void testMethod2() {\n    //这里的模糊查询不需要加%，SpringData自动帮我们添加了\n    List<User> users = userRepository.findByNameLike("张");\n    System.out.println(users);\n}\n\n@GetMapping("testMethod1")\npublic void testMethod1() {\n    List<User> users = userRepository.findByName("张三");\n    System.out.println(users);\n} \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 总结\n\nMongoTemplate 适合做聚合查询操作\n\nMongoRepository 适合做简单CRUD操作，做普通查询特别方便\n\n//MongoRepository 约定大于配置\n//findxxxBy字段名（属性名）\npublic interface HospitalRepository extends MongoRepository<Hospital,String> {\n    // 根据医院编号查询\n    Hospital findHospByHoscode(String hoscode);\n    //模拟查询\n    List<Hospital> findByHosnameLike(String hosname);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nMongoDB和Redis和MySQL的区别\n\n * MySQL 关系型数据库 基于文件存储 稳定复杂的业务\n * Redis 非关系型数据库 基于内存存储\n * MongoDB 非关系型数据库 基于文件存储 是分布式存储的【当个文件分块存储】 基于key-value 不支持索引 复杂业务复杂事务不友好',normalizedContent:'# mongodb整合springboot\n\n\n# 官方参考文档\n\nhttps://spring.io/projects/spring-data-mongodb\n\nhttps://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#dependencies\n\n\n# 两种方式操作mongodb\n\n * mongotemplate 操作灵活，但不简单\n * mongorepository 操作简单，但不灵活\n\n\n# 1.引入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-data-mongodb</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2.添加mongodb配置\n\nspring.data.mongodb.uri=mongodb://192.168.xxx.xxx:27017/库名\n\n\n1\n\n\n\n# mongotemplate crud\n\n\n# 1.常用方法\n\nmongotemplate.findall(user.class): 查询user文档的全部数据\nmongotemplate.findbyid(<id>, user.class): 查询user文档id为id的数据\nmongotemplate.find(query, user.class);: 根据query内的查询条件查询\nmongotemplate.upsert(query, update, user.class): 修改\nmongotemplate.remove(query, user.class): 删除\nmongotemplate.insert(user): 新增\n\n\n1\n2\n3\n4\n5\n6\n\n\n\n# 2.查询封装条件\n\n1.创建一个query对象（用来封装所有条件对象)，再创建一个criteria对象（用来构建条件）\n\n2.条件类型\n精准条件：criteria.and(“key”).is(“条件”)\n模糊条件：criteria.and(“key”).regex(“条件”)\n\n3.封装条件：query.addcriteria(criteria)\n\n4.大于小于条件\n大于（创建新的criteria）：criteria gt = criteria.where(“key”).gt（“条件”）\n小于（创建新的criteria）：criteria lt = criteria.where(“key”).lt（“条件”）\n\n5.\nquery.addcriteria(new criteria().andoperator(gt,lt));\n\n6.一个query中只能有一个andoperator()。其参数也可以是criteria数组。\n\n7.排序 ：query.with（new sort(sort.direction.asc, "age"). and(new sort(sort.direction.desc, "date")))\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n\n# 3.测试用例\n\n# 1.测试实体类 usertest.java\n\n@data\n@document("user")\npublic class user {\n    @id\n    private string id;\n    private string name;\n    private integer age;\n    private string email;\n    private string createdate;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n# 2.测试类 mongotest.java\n\n@restcontroller\n@requestmapping("/mongo")\npublic class mongotest {\n\n    @autowired\n    private mongotemplate mongotemplate;\n    \n    //添加一个文档记录，存储格式为json\n    @getmapping("create")\n    public void createuser(user user){\n        mongotemplate.insert(user);\n    }\n    \n    /**\n     * 查询mongo库中一个文档记录所有内容\n     * 查询文档名 user\n     * 查询所有方法 .findall()\n     */\n    @getmapping("findall")\n    public void finduser(string user){\n        list<user> userlist = mongotemplate.findall(user);\n        userlist.foreach(system.out::print());\n    }\n    \n   \n\n    //根据id查询\n    @getmapping("findid")\n    public void getbyid() {\n        user user =\n                mongotemplate.findbyid("5ffbfa2ac290f356edf9b5aa", user.class);\n        system.out.println(user);\n    }\n\n    //条件查询\n    @getmapping("finduser")\n    public void finduserlist() {\n        query query = new query(criteria\n                .where("name").is("test")\n                .and("age").is(20));\n        list<user> userlist = mongotemplate.find(query, user.class);\n        system.out.println(userlist);\n    }\n\n    //模糊查询\n    @getmapping("findlike")\n    public void finduserslikename() {\n        string name = "est";\n        string regex = string.format("%s%s%s", "^.*", name, ".*$");\n        pattern pattern = pattern.compile(regex, pattern.case_insensitive);\n        query query = new query(criteria.where("name").regex(pattern));\n        list<user> userlist = mongotemplate.find(query, user.class);\n        system.out.println(userlist);\n    }\n\n    //分页查询\n    @getmapping("findpage")\n    public void finduserspage() {\n        string name = "est";\n        int pageno = 1;\n        int pagesize = 10;\n\n        query query = new query();\n        string regex = string.format("%s%s%s", "^.*", name, ".*$");\n        pattern pattern = pattern.compile(regex, pattern.case_insensitive);\n        query.addcriteria(criteria.where("name").regex(pattern));\n        int totalcount = (int) mongotemplate.count(query, user.class);\n        list<user> userlist = mongotemplate.find(query.skip((pageno - 1) * pagesize).limit(pagesize), user.class);\n\n        map<string, object> pagemap = new hashmap<>();\n        pagemap.put("list", userlist);\n        pagemap.put("totalcount",totalcount);\n        system.out.println(pagemap);\n    }\n\n    //修改\n    @getmapping("update")\n    public void updateuser() {\n        user user = mongotemplate.findbyid("5ffbfa2ac290f356edf9b5aa", user.class);\n        user.setname("test_1");\n        user.setage(25);\n        user.setemail("493220990@qq.com");\n        query query = new query(criteria.where("_id").is(user.getid()));\n        update update = new update();\n        update.set("name", user.getname());\n        update.set("age", user.getage());\n        update.set("email", user.getemail());\n        updateresult result = mongotemplate.upsert(query, update, user.class);\n        long count = result.getmodifiedcount();\n        system.out.println(count);\n    }\n\n    //删除操作\n    @getmapping("delete")\n    public void delete() {\n        query query =\n                new query(criteria.where("_id").is("5ffbfa2ac290f356edf9b5aa"));\n        deleteresult result = mongotemplate.remove(query, user.class);\n        long count = result.getdeletedcount();\n        system.out.println(count);\n    }\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n\n\n\n# mongorepository crud\n\n1.映射关系\n\n\n\n> 1、不是随便声明的，而需要符合一定的规范 2、 查询方法以find | read | get开头 3、 涉及条件查询时，条件的属性用条件关键字连接 4、 要注意的是：条件属性首字母需要大写 5、 支持属性的级联查询，但若当前类有符合条件的属性则优先使用，而不使用级联属性,若需要使用级联属性，则属性之间使用_强制进行连接\n\n// where name = ? and age = ?;\nfinduserbynameandage(string one,string two)\n\n\n1\n2\n\n\n# 1.引入依赖\n\n<dependencies>\n    <dependency>\n        <groupid>org.springframework.boot</groupid>\n        <artifactid>spring-boot-starter-data-mongodb</artifactid>\n    </dependency>\n</dependencies>\n\n\n1\n2\n3\n4\n5\n6\n\n\n# 2.添加repository类\n\n> interface类必须要继承mongorepository类，并写入泛型，和主键\n\n> 这里使用多态，执行时，会执行重写的方法\n\n/**\n * 参数一：泛型\n * 参数二：主键类型\n */\n@repository\npublic interface userrepository extends mongorepository<user, string> {\n    //user表示实体类映射，增加可读性\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n# 3.测试用例\n\n@restcontroller\n@requestmapping("/mongo2")\npublic class testmongo2 {\n\n    @autowired\n    private userrepository userrepository;\n\n    //添加\n    @getmapping("create")\n    public void createuser(user user) {\n        userrepository.save(user);\n    }\n\n    //查询所有\n    @getmapping("findall")\n    public void finduser() {\n        list<user> userlist = userrepository.findall();\n        system.out.println(userlist);\n    }\n\n    //id查询\n    @getmapping("findid")\n    public void getbyid() {\n        user user = userrepository.findbyid("60b8d57ed539ed5b124942de").get();\n        system.out.println(user);\n    }\n\n    //条件查询\n    @getmapping("findquery")\n    public void finduserlist() {\n        user user = new user();\n        user.setname("张三");\n        user.setage(20);\n        example<user> userexample = example.of(user);\n        list<user> userlist = userrepository.findall(userexample);\n        system.out.println(userlist);\n    }\n\n    //模糊查询\n    @getmapping("findlike")\n    public void finduserslikename() {\n        //创建匹配器，即如何使用查询条件\n        examplematcher matcher = examplematcher.matching() //构建对象\n                .withstringmatcher(examplematcher.stringmatcher.containing) //改变默认字符串匹配方式：模糊查询\n                .withignorecase(true); //改变默认大小写忽略方式：忽略大小写\n        user user = new user();\n        user.setname("三");\n        example<user> userexample = example.of(user, matcher);\n        list<user> userlist = userrepository.findall(userexample);\n        system.out.println(userlist);\n    }\n\n    //分页查询\n    @getmapping("findpage")\n    public void finduserspage() {\n        //1.设置排序\n        sort sort = sort.by(sort.direction.desc, "age");\n\t\t//2.设置分页参数，0为第一页，10当前页记录数，排序规则\n        pageable pageable = pagerequest.of(0, 10, sort);\n\t\t//创建匹配器，即如何使用查询条件\n        examplematcher matcher = examplematcher.matching() //构建对象\n            \t//改变默认字符串匹配方式：模糊查询\n                .withstringmatcher(examplematcher.stringmatcher.containing) \n            \t//改变默认大小写忽略方式：忽略大小写\n                .withignorecase(true); \n        //构造条件\n        user user = new user();\n        user.setname("三");\n        //创建条件实例\n        example<user> userexample = example.of(user, matcher);\n\t\t\n        //直接获取pages总的数据封装到r中，返回给前端\n        page<user> pages = userrepository.findall(example, pageable);\n    }\n\n    //修改，修改和添加都使用同一个方法\n    @getmapping("update")\n    public void updateuser() {\n        user user = userrepository.findbyid("60b8d57ed539ed5b124942de").get();\n        user.setname("张三_1");\n        user.setage(25);\n        user.setemail("883220990@qq.com");\n        user save = userrepository.save(user);\n    }\n\n    //删除\n    @getmapping("delete")\n    public void delete() {\n        userrepository.deletebyid("60b8d57ed539ed5b124942de");\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n\n\n参考\n\nhttp://www.mydlq.club/article/85/\n\n# 4.直接使用spring data\n\n> 就不需要自己去写crud的具体操作\n\n在继承的接口中按照springdata规范进行定义\n\n@repository\npublic interface userrepository extends mongorepository<user, string> {\n\n    list<user> findbyname(string name);\n\n    list<user> findbynamelike(string name);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n@getmapping("testmethod2")\npublic void testmethod2() {\n    //这里的模糊查询不需要加%，springdata自动帮我们添加了\n    list<user> users = userrepository.findbynamelike("张");\n    system.out.println(users);\n}\n\n@getmapping("testmethod1")\npublic void testmethod1() {\n    list<user> users = userrepository.findbyname("张三");\n    system.out.println(users);\n} \n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n\n# 总结\n\nmongotemplate 适合做聚合查询操作\n\nmongorepository 适合做简单crud操作，做普通查询特别方便\n\n//mongorepository 约定大于配置\n//findxxxby字段名（属性名）\npublic interface hospitalrepository extends mongorepository<hospital,string> {\n    // 根据医院编号查询\n    hospital findhospbyhoscode(string hoscode);\n    //模拟查询\n    list<hospital> findbyhosnamelike(string hosname);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\nmongodb和redis和mysql的区别\n\n * mysql 关系型数据库 基于文件存储 稳定复杂的业务\n * redis 非关系型数据库 基于内存存储\n * mongodb 非关系型数据库 基于文件存储 是分布式存储的【当个文件分块存储】 基于key-value 不支持索引 复杂业务复杂事务不友好',charsets:{cjk:!0}},{title:"常用注解",frontmatter:{title:"常用注解",date:"2022-01-21T21:57:58.000Z",permalink:"/pages/1b0d2d/",categories:["Spring系列","Spring"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/10.Spring/20.%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html",relativePath:"35.Spring系列/10.Spring/20.常用注解.md",key:"v-28e5f514",path:"/pages/1b0d2d/",headers:[{level:2,title:"Spring常用注解归档",slug:"spring常用注解归档",normalizedTitle:"spring常用注解归档",charIndex:2},{level:3,title:"@Component",slug:"component",normalizedTitle:"@component",charIndex:37},{level:3,title:"@Repository",slug:"repository",normalizedTitle:"@repository",charIndex:80},{level:3,title:"@Service",slug:"service",normalizedTitle:"@service",charIndex:126},{level:3,title:"@Controller",slug:"controller",normalizedTitle:"@controller",charIndex:170},{level:3,title:"@Autowired",slug:"autowired",normalizedTitle:"@autowired",charIndex:218},{level:3,title:"@Qualifier",slug:"qualifier",normalizedTitle:"@qualifier",charIndex:382},{level:3,title:"@Value",slug:"value",normalizedTitle:"@value",charIndex:451},{level:3,title:"@Configuration",slug:"configuration",normalizedTitle:"@configuration",charIndex:479},{level:3,title:"@Bean",slug:"bean",normalizedTitle:"@bean",charIndex:527},{level:3,title:"@Scope",slug:"scope",normalizedTitle:"@scope",charIndex:594},{level:3,title:"@ComponentScan",slug:"componentscan",normalizedTitle:"@componentscan",charIndex:639},{level:3,title:"AOP",slug:"aop",normalizedTitle:"aop",charIndex:677},{level:3,title:"@Aspect",slug:"aspect",normalizedTitle:"@aspect",charIndex:685},{level:3,title:"@Pointcut",slug:"pointcut",normalizedTitle:"@pointcut",charIndex:712},{level:3,title:"@Before",slug:"before",normalizedTitle:"@before",charIndex:726},{level:3,title:"@AfterThrowing",slug:"afterthrowing",normalizedTitle:"@afterthrowing",charIndex:762},{level:3,title:"@After",slug:"after",normalizedTitle:"@after",charIndex:762},{level:3,title:"@AfterReturning",slug:"afterreturning",normalizedTitle:"@afterreturning",charIndex:855},{level:3,title:"@Around",slug:"around",normalizedTitle:"@around",charIndex:909},{level:3,title:"@Order",slug:"order",normalizedTitle:"@order",charIndex:972},{level:3,title:"事务",slug:"事务",normalizedTitle:"事务",charIndex:1005},{level:3,title:"@Transactional",slug:"transactional",normalizedTitle:"@transactional",charIndex:1012}],headersStr:"Spring常用注解归档 @Component @Repository @Service @Controller @Autowired @Qualifier @Value @Configuration @Bean @Scope @ComponentScan AOP @Aspect @Pointcut @Before @AfterThrowing @After @AfterReturning @Around @Order 事务 @Transactional",content:"# Spring常用注解归档\n\n需要使用注解，就必须开启组件扫描\n\n\n# @Component\n\n> 标识一个受Spring IOC容器管理的普通组件\n\n\n# @Repository\n\n> 标识一个受Spring IOC容器管理的持久化层组件\n\n\n# @Service\n\n> 标识一个受Spring IOC容器管理的业务逻辑层组件\n\n\n# @Controller\n\n> 标识一个受Spring IOC容器管理的表述层控制器组件\n\n\n# @Autowired\n\n用途\n\n> \n\n属性\n\n> required 默认值：true\n\n注意\n\n> 默认@Autowired注解书写在字段中，底层反射方式注入数值\n> \n> @Autowired注解书写在setXXX()方法中，底层使用set注入\n> \n> @Autowired注解书写在构造方法中，底层使用构造注入\n\n\n# @Qualifier\n\n用途\n\n> 将ioc容器中bean的id自动装配到指定类的属性中，一般与@Autowired注解配合使用\n\n\n# @Value\n\n用途\n\n> 自动装配字面量数值\n\n\n# @Configuration\n\n用途\n\n> 设置当前类为配置类，用来代替xml配置文件\n\n\n# @Bean\n\n用途\n\n> 通常用在@Configuration修饰的类中，注入bean的信息，替代了xml<bean>的方式\n\n\n# @Scope\n\n用途\n\n> 与@Bean搭配使用，表明是单例还是property\n\n\n# @ComponentScan\n\n用途\n\n> 为配置类，开启组件扫描\n\n\n# AOP\n\n\n# @Aspect\n\n> 将当前类标识为一个切面\n\n\n# @Pointcut\n\n\n# @Before\n\n> 在业务代码执行之前执行，如有异常也执行。\n\n\n# @AfterThrowing\n\n> 在业务代码出现异常时【后置通知之前】执行。如有异常执行，无异常不执行。\n\n\n# @After\n\n> 在业务代码执行之后执行，如有异常也执行。\n\n\n# @AfterReturning\n\n> 在业务代码返回结果后【后置通知之前】，执行。如有异常不执行。\n\n\n# @Around\n\n> 将业务代码【前置|后置|返回|异常】通知，整合一处,使用try-catch-finally实现\n\n\n# @Order\n\n> 设置切面优先级，数值越小，优先级越高\n\n\n# 事务\n\n\n# @Transactional",normalizedContent:"# spring常用注解归档\n\n需要使用注解，就必须开启组件扫描\n\n\n# @component\n\n> 标识一个受spring ioc容器管理的普通组件\n\n\n# @repository\n\n> 标识一个受spring ioc容器管理的持久化层组件\n\n\n# @service\n\n> 标识一个受spring ioc容器管理的业务逻辑层组件\n\n\n# @controller\n\n> 标识一个受spring ioc容器管理的表述层控制器组件\n\n\n# @autowired\n\n用途\n\n> \n\n属性\n\n> required 默认值：true\n\n注意\n\n> 默认@autowired注解书写在字段中，底层反射方式注入数值\n> \n> @autowired注解书写在setxxx()方法中，底层使用set注入\n> \n> @autowired注解书写在构造方法中，底层使用构造注入\n\n\n# @qualifier\n\n用途\n\n> 将ioc容器中bean的id自动装配到指定类的属性中，一般与@autowired注解配合使用\n\n\n# @value\n\n用途\n\n> 自动装配字面量数值\n\n\n# @configuration\n\n用途\n\n> 设置当前类为配置类，用来代替xml配置文件\n\n\n# @bean\n\n用途\n\n> 通常用在@configuration修饰的类中，注入bean的信息，替代了xml<bean>的方式\n\n\n# @scope\n\n用途\n\n> 与@bean搭配使用，表明是单例还是property\n\n\n# @componentscan\n\n用途\n\n> 为配置类，开启组件扫描\n\n\n# aop\n\n\n# @aspect\n\n> 将当前类标识为一个切面\n\n\n# @pointcut\n\n\n# @before\n\n> 在业务代码执行之前执行，如有异常也执行。\n\n\n# @afterthrowing\n\n> 在业务代码出现异常时【后置通知之前】执行。如有异常执行，无异常不执行。\n\n\n# @after\n\n> 在业务代码执行之后执行，如有异常也执行。\n\n\n# @afterreturning\n\n> 在业务代码返回结果后【后置通知之前】，执行。如有异常不执行。\n\n\n# @around\n\n> 将业务代码【前置|后置|返回|异常】通知，整合一处,使用try-catch-finally实现\n\n\n# @order\n\n> 设置切面优先级，数值越小，优先级越高\n\n\n# 事务\n\n\n# @transactional",charsets:{cjk:!0}},{title:"MongoDB应用场景",frontmatter:{title:"MongoDB应用场景",date:"2022-02-15T22:08:27.000Z",permalink:"/pages/a34c22/",categories:["数据库","MongoDB"],tags:[null]},regularPath:"/25.%E6%95%B0%E6%8D%AE%E5%BA%93/30.MongoDB/30.MongoDB%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF.html",relativePath:"25.数据库/30.MongoDB/30.MongoDB应用场景.md",key:"v-c61b991a",path:"/pages/a34c22/",headers:[{level:2,title:"常见应用场景",slug:"常见应用场景",normalizedTitle:"常见应用场景",charIndex:2}],headersStr:"常见应用场景",content:"# 常见应用场景\n\n[译]MongoDB 和 MySQL 使用场景分析\n\nMongoDB应用场景-知乎\n\n什么场景应该用 MongoDB ？",normalizedContent:"# 常见应用场景\n\n[译]mongodb 和 mysql 使用场景分析\n\nmongodb应用场景-知乎\n\n什么场景应该用 mongodb ？",charsets:{cjk:!0}},{title:"早期xml配置",frontmatter:{title:"早期xml配置",date:"2022-01-24T14:35:23.000Z",permalink:"/pages/7b798f/",categories:["Spring系列","Spring"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/10.Spring/30.%E6%97%A9%E6%9C%9Fxml%E9%85%8D%E7%BD%AE.html",relativePath:"35.Spring系列/10.Spring/30.早期xml配置.md",key:"v-7d1c09d6",path:"/pages/7b798f/",headers:[{level:2,title:"xml配置bean",slug:"xml配置bean",normalizedTitle:"xml配置bean",charIndex:2},{level:3,title:"set注入",slug:"set注入",normalizedTitle:"set注入",charIndex:16},{level:3,title:"构造器注入",slug:"构造器注入",normalizedTitle:"构造器注入",charIndex:317},{level:3,title:"bean级联配置",slug:"bean级联配置",normalizedTitle:"bean级联配置",charIndex:522},{level:2,title:"xml组件扫描",slug:"xml组件扫描",normalizedTitle:"xml组件扫描",charIndex:1233},{level:2,title:"xml开启AOP",slug:"xml开启aop",normalizedTitle:"xml开启aop",charIndex:2203},{level:2,title:"xml配置AOP",slug:"xml配置aop",normalizedTitle:"xml配置aop",charIndex:2427},{level:2,title:"xml配置事务",slug:"xml配置事务",normalizedTitle:"xml配置事务",charIndex:3604},{level:2,title:"xml配置SpringMVC",slug:"xml配置springmvc",normalizedTitle:"xml配置springmvc",charIndex:7111}],headersStr:"xml配置bean set注入 构造器注入 bean级联配置 xml组件扫描 xml开启AOP xml配置AOP xml配置事务 xml配置SpringMVC",content:'# xml配置bean\n\n\n# set注入\n\n\x3c!--\n  使用bean标签，装配Student\n        id:设置装配对象唯一标识\n        class:设置装配对象的全类名【类的全限定名】\n --\x3e\n<bean id="ltq" class="com.viki.pojo.Student">\n    \x3c!--为对象中的属性，注入数值--\x3e\n    <property name="id" value="1001"></property>\n    <property name="stuName" value="ltq"></property>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 构造器注入\n\n<bean id="zzq" class="com.viki.pojo.Student">\n    <constructor-arg name="id" value="102"></constructor-arg>\n    <constructor-arg name="stuName" value="zzq"></constructor-arg>\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# bean级联配置\n\n\x3c!--装配部门--\x3e\n<bean id="jxb" class="com.viki.pojo.Dept">\n    <property name="deptId" value="1001"></property>\n    <property name="deptName" value="教学部门"></property>\n    <property name="deptLoc" value="3008"></property>\n</bean>\n<bean id="cxls" class="com.viki.pojo.Emp">\n    <property name="id" value="103"></property>\n    <property name="empName" value="cxls"></property>\n    <property name="age" value="20"></property>\n    <property name="salary" value="100"></property>\n    <property name="gender" value="男"></property>\n    <property name="dept" ref="jxb"></property>\n    \x3c!-- 级联属性赋值--\x3e\n    <property name="dept.deptName" value="财务部门"></property>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# xml组件扫描\n\n\x3c!--默认开启组件扫描【扫描当前包及其子包】--\x3e\n<context:component-scan base-package="com.viki"></context:component-scan>\n\n\x3c!--排除扫描--\x3e\n<context:component-scan base-package="com.viki">\n    \x3c!--设置排除组件指定注解全限定名【全类名】--\x3e\n    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>\n    \x3c!--设置排除组件指定类全限定名【全类名】--\x3e\n    <context:exclude-filter type="assignable" expression="com.viki.service.impl.StudentServiceImpl"/>\n</context:component-scan>\n\n\x3c!--包含扫描，注意：使用包含扫描需要将默认组件扫描关闭【use-default-filters="false"】--\x3e\n<context:component-scan base-package="com.viki" use-default-filters="false">\n    <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>\n    <context:include-filter type="assignable" expression="com.viki.dao.impl.StudentDaoImpl"/>\n    <context:include-filter type="assignable" expression="com.viki.dao.impl.StudentMapperImpl"/>\n</context:component-scan>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# xml开启AOP\n\n\x3c!--开启组件扫描【使用注解】--\x3e\n<context:component-scan base-package="com.viki.annotationAspectj"></context:component-scan>\n\n\x3c!--开启AspectJ注解支持【自动为目标对象创建代理对象】--\x3e\n<aop:aspectj-autoproxy></aop:aspectj-autoproxy>\n\n\n1\n2\n3\n4\n5\n\n\n\n# xml配置AOP\n\n\x3c!--装配bean--\x3e\n<bean id="calc" class="com.viki.xmlAspectJ.CalcImpl"></bean>\n<bean id="myLogging" class="com.viki.xmlAspectJ.MyLogging"></bean>\n<bean id="myValidate" class="com.viki.xmlAspectJ.MyValidate"></bean>\n\n\x3c!--配置AOP--\x3e\n<aop:config>\n    \x3c!--定义切入点表达式--\x3e\n    <aop:pointcut id="myPointCut" expression="execution(* com.viki.xmlAspectJ.CalcImpl.*(..))"/>\n    \x3c!--配置日志切面--\x3e\n    <aop:aspect ref="myLogging" order="1">\n        \x3c!--配置前置通知--\x3e\n        <aop:before method="methodBefore" pointcut-ref="myPointCut"></aop:before>\n        \x3c!--配置后置通知--\x3e\n        <aop:after method="methodAfter" pointcut-ref="myPointCut"></aop:after>\n        \x3c!--配置返回通知--\x3e\n        <aop:after-returning method="methodReturning" returning="rs" pointcut-ref="myPointCut"></aop:after-returning>\n        \x3c!--配置异常通知--\x3e\n        <aop:after-throwing method="methodThrowing" throwing="ex" pointcut-ref="myPointCut"></aop:after-throwing>\n    </aop:aspect>\n    \x3c!--配置验证切面--\x3e\n    <aop:aspect ref="myValidate" order="2">\n        <aop:before method="beforeMethodVal" pointcut-ref="myPointCut"></aop:before>\n    </aop:aspect>\n</aop:config>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# xml配置事务\n\n\x3c!--装配事务管理器--\x3e\n<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">\n    <property name="dataSource" ref="dataSource"></property>\n</bean>\n\x3c!--开启声明式事务管理--\x3e\n<tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>\n\n\n1\n2\n3\n4\n5\n6\n\n\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">\n\n    \x3c!--引入外部属性文件--\x3e\n    <context:property-placeholder location="classpath:druid.properties"></context:property-placeholder>\n\n    \x3c!--配置数据源--\x3e\n    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">\n        <property name="username" value="${jdbc.username}"></property>\n        <property name="password" value="${jdbc.password}"></property>\n        <property name="url" value="${jdbc.url}"></property>\n        <property name="driverClassName" value="${jdbc.driverClassName}"></property>\n        <property name="initialSize" value="${jdbc.initialSize}"></property>\n        <property name="maxActive" value="${jdbc.maxActive}"></property>\n    </bean>\n\n    \x3c!--配置JdbcTemplate--\x3e\n    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">\n        \x3c!--配置数据源属性--\x3e\n        <property name="dataSource" ref="dataSource"></property>\n    </bean>\n\n    \x3c!--配置BookShopDaoImpl--\x3e\n    <bean id="bookShopDao" class="com.viki.spring.tx.xml.BookShopDaoImpl">\n        <property name="jdbcTemplate" ref="jdbcTemplate"></property>\n    </bean>\n\n    \x3c!--配置BookShopServiceImpl--\x3e\n    <bean id="bookShopService" class="com.viki.spring.tx.xml.BookShopServiceImpl">\n        <property name="bookShopDao" ref="bookShopDao"></property>\n    </bean>\n\n    \x3c!--配置事务管理器--\x3e\n    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">\n        \x3c!--配置数据源属性--\x3e\n        <property name="dataSource" ref="dataSource"></property>\n    </bean>\n    \x3c!--配置声明式事务--\x3e\n    <tx:advice id="tx" transaction-manager="transactionManager">\n        \x3c!--设置添加事务的方法--\x3e\n        <tx:attributes>\n            \x3c!--设置查询的方法的只读属性为true--\x3e\n            <tx:method name="find*" read-only="true"/>\n            <tx:method name="get*" read-only="true"/>\n            <tx:method name="purchase" propagation="REQUIRES_NEW" isolation="READ_COMMITTED"></tx:method>\n        </tx:attributes>\n    </tx:advice>\n    \x3c!--AOP配置--\x3e\n    <aop:config>\n        \x3c!--配置切入点表达式--\x3e\n        <aop:pointcut id="pointCut"          expression="execution(*com.viki.spring.tx.xml.BookShopServiceImpl.purchase(..))"/>\n        \x3c!--将事务方法和切入点表达式关联起来--\x3e\n        <aop:advisor advice-ref="tx" pointcut-ref="pointCut"></aop:advisor>\n    </aop:config>\n</beans>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# xml配置SpringMVC\n\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"\n       xmlns:mvc="http://www.springframework.org/schema/mvc"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\n                           http://www.springframework.org/schema/mvc\n                           http://www.springframework.org/schema/mvc/spring-mvc.xsd\n                           http://code.alibabatech.com/schema/dubbo\n                           http://code.alibabatech.com/schema/dubbo/dubbo.xsd\n                           http://www.springframework.org/schema/context\n                           http://www.springframework.org/schema/context/spring-context.xsd">\n    <mvc:annotation-driven>\n        \x3c!--  1.register-defaults=true:告诉Springmvc使用我们配置文件创建的对象,不再自己创建(框架自己创建,是通过无参构造,会使用默认的字符集) --\x3e\n        <mvc:message-converters register-defaults="true">\n            \x3c!--项目使用vuejs中的axios异步访问数据，传递json数据，响应json数据--\x3e\n            \x3c!--不需要视图解析器，项目中的所有的请求都返回json数据结构--\x3e\n\n            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">\n                <property name="supportedMediaTypes" value="application/json"/>\n                <property name="features">\n                    <list>\n                        \x3c!--Map类型格式化，接收参数允许空值--\x3e\n                        <value>WriteMapNullValue</value>\n                        \x3c!--日期类型格式化--\x3e\n                        <value>WriteDateUseDateFormat</value>\n                    </list>\n                </property>\n            </bean>\n        </mvc:message-converters>\n    </mvc:annotation-driven>\n\n    \x3c!--<mvc:default-servlet-handler/>--\x3e\n    \x3c!-- 指定应用名称 --\x3e\n    <dubbo:application name="meinian_web" />\n    \x3c!--指定服务注册中心地址--\x3e\n    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>\n    \x3c!--批量扫描--\x3e\n    \x3c!--<dubbo:annotation package="com.viki.controller" />--\x3e\n    <dubbo:annotation package="com.viki"/>\n    \x3c!--\n        超时全局设置 10分钟\n        check=false 不检查服务提供方，开发阶段建议设置为false\n        check=true 启动时检查服务提供方，如果服务提供方没有启动则报错\n    --\x3e\n    <dubbo:consumer timeout="600000" check="false"/>\n    \x3c!--文件上传组件--\x3e\n    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">\n        \x3c!-- 设定文件上传的最大值为100MB，100*1024*1024 --\x3e\n        <property name="maxUploadSize" value="104857600" />\n        \x3c!-- 设定文件上传时写入内存的最大值，如果小于这个参数不会生成临时文件，默认为10240 --\x3e\n        <property name="maxInMemorySize" value="4096" />\n        \x3c!-- 设定默认编码 --\x3e\n        <property name="defaultEncoding" value="UTF-8"/>\n    </bean>\n\n\n    <import resource="classpath:spring-redis.xml"></import>\n    <import resource="classpath:spring-security.xml"></import>\n</beans>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n',normalizedContent:'# xml配置bean\n\n\n# set注入\n\n\x3c!--\n  使用bean标签，装配student\n        id:设置装配对象唯一标识\n        class:设置装配对象的全类名【类的全限定名】\n --\x3e\n<bean id="ltq" class="com.viki.pojo.student">\n    \x3c!--为对象中的属性，注入数值--\x3e\n    <property name="id" value="1001"></property>\n    <property name="stuname" value="ltq"></property>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 构造器注入\n\n<bean id="zzq" class="com.viki.pojo.student">\n    <constructor-arg name="id" value="102"></constructor-arg>\n    <constructor-arg name="stuname" value="zzq"></constructor-arg>\n</bean>\n\n\n1\n2\n3\n4\n\n\n\n# bean级联配置\n\n\x3c!--装配部门--\x3e\n<bean id="jxb" class="com.viki.pojo.dept">\n    <property name="deptid" value="1001"></property>\n    <property name="deptname" value="教学部门"></property>\n    <property name="deptloc" value="3008"></property>\n</bean>\n<bean id="cxls" class="com.viki.pojo.emp">\n    <property name="id" value="103"></property>\n    <property name="empname" value="cxls"></property>\n    <property name="age" value="20"></property>\n    <property name="salary" value="100"></property>\n    <property name="gender" value="男"></property>\n    <property name="dept" ref="jxb"></property>\n    \x3c!-- 级联属性赋值--\x3e\n    <property name="dept.deptname" value="财务部门"></property>\n</bean>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# xml组件扫描\n\n\x3c!--默认开启组件扫描【扫描当前包及其子包】--\x3e\n<context:component-scan base-package="com.viki"></context:component-scan>\n\n\x3c!--排除扫描--\x3e\n<context:component-scan base-package="com.viki">\n    \x3c!--设置排除组件指定注解全限定名【全类名】--\x3e\n    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.service"/>\n    \x3c!--设置排除组件指定类全限定名【全类名】--\x3e\n    <context:exclude-filter type="assignable" expression="com.viki.service.impl.studentserviceimpl"/>\n</context:component-scan>\n\n\x3c!--包含扫描，注意：使用包含扫描需要将默认组件扫描关闭【use-default-filters="false"】--\x3e\n<context:component-scan base-package="com.viki" use-default-filters="false">\n    <context:include-filter type="annotation" expression="org.springframework.stereotype.repository"/>\n    <context:include-filter type="assignable" expression="com.viki.dao.impl.studentdaoimpl"/>\n    <context:include-filter type="assignable" expression="com.viki.dao.impl.studentmapperimpl"/>\n</context:component-scan>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n\n# xml开启aop\n\n\x3c!--开启组件扫描【使用注解】--\x3e\n<context:component-scan base-package="com.viki.annotationaspectj"></context:component-scan>\n\n\x3c!--开启aspectj注解支持【自动为目标对象创建代理对象】--\x3e\n<aop:aspectj-autoproxy></aop:aspectj-autoproxy>\n\n\n1\n2\n3\n4\n5\n\n\n\n# xml配置aop\n\n\x3c!--装配bean--\x3e\n<bean id="calc" class="com.viki.xmlaspectj.calcimpl"></bean>\n<bean id="mylogging" class="com.viki.xmlaspectj.mylogging"></bean>\n<bean id="myvalidate" class="com.viki.xmlaspectj.myvalidate"></bean>\n\n\x3c!--配置aop--\x3e\n<aop:config>\n    \x3c!--定义切入点表达式--\x3e\n    <aop:pointcut id="mypointcut" expression="execution(* com.viki.xmlaspectj.calcimpl.*(..))"/>\n    \x3c!--配置日志切面--\x3e\n    <aop:aspect ref="mylogging" order="1">\n        \x3c!--配置前置通知--\x3e\n        <aop:before method="methodbefore" pointcut-ref="mypointcut"></aop:before>\n        \x3c!--配置后置通知--\x3e\n        <aop:after method="methodafter" pointcut-ref="mypointcut"></aop:after>\n        \x3c!--配置返回通知--\x3e\n        <aop:after-returning method="methodreturning" returning="rs" pointcut-ref="mypointcut"></aop:after-returning>\n        \x3c!--配置异常通知--\x3e\n        <aop:after-throwing method="methodthrowing" throwing="ex" pointcut-ref="mypointcut"></aop:after-throwing>\n    </aop:aspect>\n    \x3c!--配置验证切面--\x3e\n    <aop:aspect ref="myvalidate" order="2">\n        <aop:before method="beforemethodval" pointcut-ref="mypointcut"></aop:before>\n    </aop:aspect>\n</aop:config>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# xml配置事务\n\n\x3c!--装配事务管理器--\x3e\n<bean id="transactionmanager" class="org.springframework.jdbc.datasource.datasourcetransactionmanager">\n    <property name="datasource" ref="datasource"></property>\n</bean>\n\x3c!--开启声明式事务管理--\x3e\n<tx:annotation-driven transaction-manager="transactionmanager"></tx:annotation-driven>\n\n\n1\n2\n3\n4\n5\n6\n\n\n<?xml version="1.0" encoding="utf-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"\n       xsi:schemalocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">\n\n    \x3c!--引入外部属性文件--\x3e\n    <context:property-placeholder location="classpath:druid.properties"></context:property-placeholder>\n\n    \x3c!--配置数据源--\x3e\n    <bean id="datasource" class="com.alibaba.druid.pool.druiddatasource">\n        <property name="username" value="${jdbc.username}"></property>\n        <property name="password" value="${jdbc.password}"></property>\n        <property name="url" value="${jdbc.url}"></property>\n        <property name="driverclassname" value="${jdbc.driverclassname}"></property>\n        <property name="initialsize" value="${jdbc.initialsize}"></property>\n        <property name="maxactive" value="${jdbc.maxactive}"></property>\n    </bean>\n\n    \x3c!--配置jdbctemplate--\x3e\n    <bean id="jdbctemplate" class="org.springframework.jdbc.core.jdbctemplate">\n        \x3c!--配置数据源属性--\x3e\n        <property name="datasource" ref="datasource"></property>\n    </bean>\n\n    \x3c!--配置bookshopdaoimpl--\x3e\n    <bean id="bookshopdao" class="com.viki.spring.tx.xml.bookshopdaoimpl">\n        <property name="jdbctemplate" ref="jdbctemplate"></property>\n    </bean>\n\n    \x3c!--配置bookshopserviceimpl--\x3e\n    <bean id="bookshopservice" class="com.viki.spring.tx.xml.bookshopserviceimpl">\n        <property name="bookshopdao" ref="bookshopdao"></property>\n    </bean>\n\n    \x3c!--配置事务管理器--\x3e\n    <bean id="transactionmanager" class="org.springframework.jdbc.datasource.datasourcetransactionmanager">\n        \x3c!--配置数据源属性--\x3e\n        <property name="datasource" ref="datasource"></property>\n    </bean>\n    \x3c!--配置声明式事务--\x3e\n    <tx:advice id="tx" transaction-manager="transactionmanager">\n        \x3c!--设置添加事务的方法--\x3e\n        <tx:attributes>\n            \x3c!--设置查询的方法的只读属性为true--\x3e\n            <tx:method name="find*" read-only="true"/>\n            <tx:method name="get*" read-only="true"/>\n            <tx:method name="purchase" propagation="requires_new" isolation="read_committed"></tx:method>\n        </tx:attributes>\n    </tx:advice>\n    \x3c!--aop配置--\x3e\n    <aop:config>\n        \x3c!--配置切入点表达式--\x3e\n        <aop:pointcut id="pointcut"          expression="execution(*com.viki.spring.tx.xml.bookshopserviceimpl.purchase(..))"/>\n        \x3c!--将事务方法和切入点表达式关联起来--\x3e\n        <aop:advisor advice-ref="tx" pointcut-ref="pointcut"></aop:advisor>\n    </aop:config>\n</beans>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# xml配置springmvc\n\n<?xml version="1.0" encoding="utf-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"\n       xmlns:mvc="http://www.springframework.org/schema/mvc"\n       xsi:schemalocation="http://www.springframework.org/schema/beans\n                           http://www.springframework.org/schema/beans/spring-beans.xsd\n                           http://www.springframework.org/schema/mvc\n                           http://www.springframework.org/schema/mvc/spring-mvc.xsd\n                           http://code.alibabatech.com/schema/dubbo\n                           http://code.alibabatech.com/schema/dubbo/dubbo.xsd\n                           http://www.springframework.org/schema/context\n                           http://www.springframework.org/schema/context/spring-context.xsd">\n    <mvc:annotation-driven>\n        \x3c!--  1.register-defaults=true:告诉springmvc使用我们配置文件创建的对象,不再自己创建(框架自己创建,是通过无参构造,会使用默认的字符集) --\x3e\n        <mvc:message-converters register-defaults="true">\n            \x3c!--项目使用vuejs中的axios异步访问数据，传递json数据，响应json数据--\x3e\n            \x3c!--不需要视图解析器，项目中的所有的请求都返回json数据结构--\x3e\n\n            <bean class="com.alibaba.fastjson.support.spring.fastjsonhttpmessageconverter">\n                <property name="supportedmediatypes" value="application/json"/>\n                <property name="features">\n                    <list>\n                        \x3c!--map类型格式化，接收参数允许空值--\x3e\n                        <value>writemapnullvalue</value>\n                        \x3c!--日期类型格式化--\x3e\n                        <value>writedateusedateformat</value>\n                    </list>\n                </property>\n            </bean>\n        </mvc:message-converters>\n    </mvc:annotation-driven>\n\n    \x3c!--<mvc:default-servlet-handler/>--\x3e\n    \x3c!-- 指定应用名称 --\x3e\n    <dubbo:application name="meinian_web" />\n    \x3c!--指定服务注册中心地址--\x3e\n    <dubbo:registry address="zookeeper://127.0.0.1:2181"/>\n    \x3c!--批量扫描--\x3e\n    \x3c!--<dubbo:annotation package="com.viki.controller" />--\x3e\n    <dubbo:annotation package="com.viki"/>\n    \x3c!--\n        超时全局设置 10分钟\n        check=false 不检查服务提供方，开发阶段建议设置为false\n        check=true 启动时检查服务提供方，如果服务提供方没有启动则报错\n    --\x3e\n    <dubbo:consumer timeout="600000" check="false"/>\n    \x3c!--文件上传组件--\x3e\n    <bean id="multipartresolver" class="org.springframework.web.multipart.commons.commonsmultipartresolver">\n        \x3c!-- 设定文件上传的最大值为100mb，100*1024*1024 --\x3e\n        <property name="maxuploadsize" value="104857600" />\n        \x3c!-- 设定文件上传时写入内存的最大值，如果小于这个参数不会生成临时文件，默认为10240 --\x3e\n        <property name="maxinmemorysize" value="4096" />\n        \x3c!-- 设定默认编码 --\x3e\n        <property name="defaultencoding" value="utf-8"/>\n    </bean>\n\n\n    <import resource="classpath:spring-redis.xml"></import>\n    <import resource="classpath:spring-security.xml"></import>\n</beans>\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n',charsets:{cjk:!0}},{title:"源码分析",frontmatter:{title:"源码分析",date:"2022-01-25T12:22:45.000Z",permalink:"/pages/a9e167/",categories:["Spring系列","Spring"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/10.Spring/40.%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",relativePath:"35.Spring系列/10.Spring/40.源码分析.md",key:"v-00ec27bb",path:"/pages/a9e167/",headers:[{level:2,title:"Spring源码分析",slug:"spring源码分析",normalizedTitle:"spring源码分析",charIndex:2},{level:2,title:"Bean如何实例化到IOC容器的？",slug:"bean如何实例化到ioc容器的",normalizedTitle:"bean如何实例化到ioc容器的？",charIndex:17},{level:3,title:"BeanDefinition接口",slug:"beandefinition接口",normalizedTitle:"beandefinition接口",charIndex:104},{level:3,title:"BeanFactory接口参与",slug:"beanfactory接口参与",normalizedTitle:"beanfactory接口参与",charIndex:203}],headersStr:"Spring源码分析 Bean如何实例化到IOC容器的？ BeanDefinition接口 BeanFactory接口参与",content:"# Spring源码分析\n\n\n# Bean如何实例化到IOC容器的？\n\n通过注解，xml方式配置Bean的信息\n\nxml->dom4j/sax解析\n\n注解->获取class信息，再获取头上的注解信息\n\n\n# BeanDefinition接口\n\n将xml或注解解析的信息放到BD中去，通过反射，用这些属性信息实例化对象\n\n> 反射的效率问题，不要抛开计量谈毒性，创建10w个对象时才开始影响性能\n\n\n\n\n# BeanFactory接口参与\n\n\n\nBeanFactory可以访问获取BeanDfinition\n\n在其子类ConfigurableListableBeanFactory中声明了该方法\n\n\n\n",normalizedContent:"# spring源码分析\n\n\n# bean如何实例化到ioc容器的？\n\n通过注解，xml方式配置bean的信息\n\nxml->dom4j/sax解析\n\n注解->获取class信息，再获取头上的注解信息\n\n\n# beandefinition接口\n\n将xml或注解解析的信息放到bd中去，通过反射，用这些属性信息实例化对象\n\n> 反射的效率问题，不要抛开计量谈毒性，创建10w个对象时才开始影响性能\n\n\n\n\n# beanfactory接口参与\n\n\n\nbeanfactory可以访问获取beandfinition\n\n在其子类configurablelistablebeanfactory中声明了该方法\n\n\n\n",charsets:{cjk:!0}},{title:"Spring笔记",frontmatter:{title:"Spring笔记",date:"2022-01-21T21:39:41.000Z",permalink:"/pages/a832bb/",categories:["Spring系列","Spring"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/10.Spring/10.Spring%E7%AC%94%E8%AE%B0.html",relativePath:"35.Spring系列/10.Spring/10.Spring笔记.md",key:"v-0cb1234b",path:"/pages/a832bb/",headers:[{level:2,title:"Spring",slug:"spring",normalizedTitle:"spring",charIndex:2},{level:3,title:"1. Spring简介",slug:"_1-spring简介",normalizedTitle:"1. spring简介",charIndex:13},{level:3,title:"2. Spring特点",slug:"_2-spring特点",normalizedTitle:"2. spring特点",charIndex:96},{level:3,title:"3. 搭建Spring框架步骤【★】",slug:"_3-搭建spring框架步骤【★】",normalizedTitle:"3. 搭建spring框架步骤【★】",charIndex:315},{level:3,title:"4. getBean()三种方式",slug:"_4-getbean-三种方式",normalizedTitle:"4. getbean()三种方式",charIndex:575},{level:3,title:"5. Spring依赖注入三种方式",slug:"_5-spring依赖注入三种方式",normalizedTitle:"5. spring依赖注入三种方式",charIndex:900},{level:3,title:"6. Spring中IOC【DI】",slug:"_6-spring中ioc【di】",normalizedTitle:"6. spring中ioc【di】",charIndex:1838},{level:3,title:"7. Spring中注入数值问题",slug:"_7-spring中注入数值问题",normalizedTitle:"7. spring中注入数值问题",charIndex:2357},{level:3,title:"8. Spring装配第三方bean",slug:"_8-spring装配第三方bean",normalizedTitle:"8. spring装配第三方bean",charIndex:7152},{level:3,title:"9. Spring中FactoryBean",slug:"_9-spring中factorybean",normalizedTitle:"9. spring中factorybean",charIndex:7290},{level:3,title:"10. Spring中bean作用域【★】",slug:"_10-spring中bean作用域【★】",normalizedTitle:"10. spring中bean作用域【★】",charIndex:8204},{level:3,title:"11. Spring中bean的生命周期",slug:"_11-spring中bean的生命周期",normalizedTitle:"11. spring中bean的生命周期",charIndex:8600},{level:3,title:"12. Spring中自动装配【★】",slug:"_12-spring中自动装配【★】",normalizedTitle:"12. spring中自动装配【★】",charIndex:8967},{level:3,title:"13. Spring中注解【★★】",slug:"_13-spring中注解【★★】",normalizedTitle:"13. spring中注解【★★】",charIndex:9570},{level:3,title:"14. Spring组件扫描",slug:"_14-spring组件扫描",normalizedTitle:"14. spring组件扫描",charIndex:11187},{level:3,title:"15. 完全注解开发【重要】",slug:"_15-完全注解开发【重要】",normalizedTitle:"15. 完全注解开发【重要】",charIndex:12377},{level:3,title:"16. Spring整合Junit4",slug:"_16-spring整合junit4",normalizedTitle:"16. spring整合junit4",charIndex:13121},{level:3,title:"17. Spring中AOP前奏",slug:"_17-spring中aop前奏",normalizedTitle:"17. spring中aop前奏",charIndex:14134},{level:3,title:"18. Spring中AOP",slug:"_18-spring中aop",normalizedTitle:"18. spring中aop",charIndex:16201},{level:3,title:"19. AspectJ中支持通知",slug:"_19-aspectj中支持通知",normalizedTitle:"19. aspectj中支持通知",charIndex:19182},{level:3,title:"20. Spring中切面优先级",slug:"_20-spring中切面优先级",normalizedTitle:"20. spring中切面优先级",charIndex:22558},{level:3,title:"21. 使用XML配置AOP",slug:"_21-使用xml配置aop",normalizedTitle:"21. 使用xml配置aop",charIndex:22954},{level:3,title:"22. Spring中JdbcTemplate框架",slug:"_22-spring中jdbctemplate框架",normalizedTitle:"22. spring中jdbctemplate框架",charIndex:24293},{level:3,title:"23. Spring中声明式事务管理【★★★】",slug:"_23-spring中声明式事务管理【★★★】",normalizedTitle:"23. spring中声明式事务管理【★★★】",charIndex:24959},{level:3,title:"24. Spring5新特性",slug:"_24-spring5新特性",normalizedTitle:"24. spring5新特性",charIndex:33729}],headersStr:"Spring 1. Spring简介 2. Spring特点 3. 搭建Spring框架步骤【★】 4. getBean()三种方式 5. Spring依赖注入三种方式 6. Spring中IOC【DI】 7. Spring中注入数值问题 8. Spring装配第三方bean 9. Spring中FactoryBean 10. Spring中bean作用域【★】 11. Spring中bean的生命周期 12. Spring中自动装配【★】 13. Spring中注解【★★】 14. Spring组件扫描 15. 完全注解开发【重要】 16. Spring整合Junit4 17. Spring中AOP前奏 18. Spring中AOP 19. AspectJ中支持通知 20. Spring中切面优先级 21. 使用XML配置AOP 22. Spring中JdbcTemplate框架 23. Spring中声明式事务管理【★★★】 24. Spring5新特性",content:'# Spring\n\n\n# 1. Spring简介\n\n * Spring开源的IOC【DI】和AOP容器框架\n * Spring也是一家公司，官网：https://spring.io/\n\n\n# 2. Spring特点\n\n * 非侵入式：无需实现某个接口，或继承某个类\n   * Servlet:侵入式，必须实现某个结构或继承某个类\n * 组件化：即插即用\n * 一站式：使用Spring可以解决【持久化层-业务逻辑层-控制层】三层问题。\n * IOC：Inversion of Control【反转控制】，将对象的控制权反转spring\n * AOP：Aspect-Oriented Programming【面向切面编程】\n\n\n# 3. 搭建Spring框架步骤【★】\n\n * 导入jar包\n   * 将springframework添加到本地仓库的org目录下即可\n * 新建Student【测试类】\n * 创建Spring核心配置文件【applicationContext.xml或beans.xml】\n   * 位置：resources目录下\n   * 将Student类装配Spring容器中\n * 创建Spring容器对象【ClassPathXmlApplicationContext】\n   * 通过容器对象获取Student对象\n\n\n# 4. getBean()三种方式\n\n * getBean(String id)：从spring容器中，通过id获取对象\n   \n   * 不足：默认获取对象类型是Object，需要强转，比较繁琐\n\n * getBean(Class clazz)：从spring容器中，通过Class获取对象\n   \n   * 不足：当容器中有多个相同Class对象时，会报如下错误：\n     \n     expected single matching bean but found 2: ltq,zzq\n\n * getBean(String id,Class clazz)：从spring容器中，通过id和Class获取对象\n   \n   * 建议使用\n\n\n# 5. Spring依赖注入三种方式\n\n * set注入\n   \n   > 语法：<property>\n   \n   \x3c!--    使用bean标签，装配Student\n               id:设置装配对象唯一标识\n               class:设置装配对象的全类名【类的全限定名】\n   --\x3e\n       <bean id="ltq" class="com.viki.pojo.Student">\n   \x3c!--        为对象中的属性，注入数值--\x3e\n           <property name="id" value="1001"></property>\n           <property name="stuName" value="ltq"></property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * 构造器注入\n   \n   > 语法：<constructor-arg>\n   \n   <bean id="zzq" class="com.viki.pojo.Student">\n       <constructor-arg name="id" value="102"></constructor-arg>\n       <constructor-arg name="stuName" value="zzq"></constructor-arg>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * p名称空间注入\n   \n   > 注意：p名称空间注入本质，是set注入\n   \n   \x3c!-- 引入p名称空间 -- >\n   xmlns:p="http://www.springframework.org/schema/p"\n   <bean id="cjy" class="com.viki.pojo.Student" p:id="1003" p:stuName="cjy"></bean>\n   \n   \n   1\n   2\n   3\n   \n\n\n# 6. Spring中IOC【DI】\n\n * IOC全称：Inversion of Control，反转控制。【将对象控制权反转给Spring容器】\n\n * DI(Dependency Injection)，依赖注入。\n   \n   * 总结: IOC 就是一种反转控制的思想， 而DI是对IOC的一种具体实现。\n\n * Spring中有IOC思想，IOC思想必须基于IOC容器来完成，而IOC容器在最底层实质上就是一个对象工厂.\n   \n   * Spring实现IOC两种方式\n     * BeanFactory【Spring底层实现】\n     * ApplicationContext【推荐使用】\n\n * ApplicationContext结构图\n   \n   * ApplicationContext\n     * ConfigurableApplicationContext\n       * ClassPathXmlApplicationContext【基于类路径下，检索xml文件】\n       * FileSystemXmlApplicationContext【基于系统路径（真实路径）下，检索xml文件】\n\n\n# 7. Spring中注入数值问题\n\n# 7.1 字面量值【重要】\n\n * 可以存储基本数据类型及包装类、String类型的数据，字面量值\n\n * 可以使用value注入值的数值，称之为字面量值\n\n * 示例代码\n   \n   \x3c!--    装配字面量值--\x3e\n       <bean id="sls" class="com.viki.pojo.Emp">\n           <property name="id" value="101"></property>\n           <property name="empName" value="sls"></property>\n           <property name="age" value="19"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n   \x3c!--        <property name="dept" value="sdfd"></property>--\x3e\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n# 7.2 特殊字符处理\n\n * 使用CDATA区，语法：<![CDATA[]]>\n\n * 示例代码\n   \n   <bean id="cls" class="com.viki.pojo.Emp">\n       <property name="id" value="102"></property>\n       <property name="empName" value="cls"></property>\n       <property name="age" value="18"></property>\n       <property name="salary" value="100"></property>\n       <property name="gender">\n           <value><![CDATA[<女>]]></value>\n       </property>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n# 7.3 外部已声明bean【重要】\n\n * 语法：ref\n\n * 示例代码\n   \n   \x3c!--    装配部门--\x3e\n       <bean id="jxb" class="com.viki.pojo.Dept">\n           <property name="deptId" value="1001"></property>\n           <property name="deptName" value="教学部门"></property>\n           <property name="deptLoc" value="3008"></property>\n       </bean>\n       <bean id="cxls" class="com.viki.pojo.Emp">\n           <property name="id" value="103"></property>\n           <property name="empName" value="cxls"></property>\n           <property name="age" value="20"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n           <property name="dept" ref="jxb"></property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n# 7.4 级联属性赋值【★】\n\n * 语法：dept.deptName\n\n * 示例代码\n   \n   \x3c!--    装配部门--\x3e\n       <bean id="jxb" class="com.viki.pojo.Dept">\n           <property name="deptId" value="1001"></property>\n           <property name="deptName" value="教学部门"></property>\n           <property name="deptLoc" value="3008"></property>\n       </bean>\n       <bean id="cxls" class="com.viki.pojo.Emp">\n           <property name="id" value="103"></property>\n           <property name="empName" value="cxls"></property>\n           <property name="age" value="20"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n           <property name="dept" ref="jxb"></property>\n   \x3c!--        级联属性赋值--\x3e\n           <property name="dept.deptName" value="财务部门"></property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n * 注意：如更改级联属性值时，管理bean中属性也同时被更改【原因：级联对象与原对象，是同一个对象】\n\n# 7.5 内部bean\n\n * 示例代码\n   \n   \x3c!--    内部bean--\x3e\n       <bean id="gls" class="com.viki.pojo.Emp">\n           <property name="id" value="104"></property>\n           <property name="empName" value="gls"></property>\n           <property name="age" value="18"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n           <property name="dept">\n               <bean id="msbm" class="com.viki.pojo.Dept">\n                   <property name="deptId" value="1001"></property>\n                   <property name="deptName" value="秘书部门"></property>\n                   <property name="deptLoc" value="3001"></property>\n               </bean>\n           </property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n# 7.6 集合数值\n\n * 示例代码\n   \n   <bean id="ab" class="com.viki.pojo.Dept">\n       <property name="deptId" value="1003"></property>\n       <property name="deptName" value="安保部门"></property>\n       <property name="deptLoc" value="3002"></property>\n       <property name="empList">\n           <list>\n               <ref bean="sls"/>\n               <ref bean="cls"/>\n               <ref bean="cxls"/>\n               <ref bean="gls"/>\n           </list>\n       </property>\n       <property name="map">\n           <map>\n               <entry>\n                   <key>\n                       <value>1001</value>\n                   </key>\n                   <ref bean="sls"></ref>\n               </entry>\n               <entry>\n                   <key>\n                       <value>1002</value>\n                   </key>\n                   <ref bean="cxls"></ref>\n               </entry>\n           </map>\n       </property>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   \n\n\n# 8. Spring装配第三方bean\n\n * 导入jar包\n * 编写db.properties文件\n * 编写applicationContext.xml文件\n   * 加载属性文件【db.properties】\n   * 装配DruidDataSource数据源\n\n\n# 9. Spring中FactoryBean\n\n * 工厂bean设置的类型可以和返回的类型不一样，其返回的类型通过该工厂bean的getObject方法指定。\n\n * 示例代码\n   \n   package com.viki.pojo;\n   \n   import org.springframework.beans.factory.FactoryBean;\n   \n   public class MyFactoryBean implements FactoryBean<Student> {\n       @Override\n       public Student getObject() throws Exception {\n           Student student = new Student(101,"zq");\n           System.out.println("student 被创建啦！" + student);\n           return student;\n       }\n   \n       @Override\n       public Class<?> getObjectType() {\n           return Student.class;\n       }\n   \n   //    设置是否为单例\n       @Override\n       public boolean isSingleton() {\n           return true;\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   \n   \n   <bean id="student" class="com.viki.pojo.MyFactoryBean"></bean>\n   \n   \n   1\n   \n\n\n# 10. Spring中bean作用域【★】\n\n> 设置bean作用域语法,在bean标签中添加属性:scope，scope属性取值范围如下：\n\n 1. singleton：单例，在Spring的IOC容器中仅存在一个Bean实例\n    * spring在创建容器对象时，创建bean对象【全局只创建一次容器对象，所以全局只有一个bean对象】\n 2. prototype：多例，每次调用getBean方法都返回一个新的Bean实例\n    * 每次调用getBean()方法时，都会创建一个bean对象\n 3. request：请求域\n    * 当前请求有效，离开当前请求失效\n    * 当前请求：地址栏不变即为当前请求，地址栏改变不在当前请求\n 4. session：会话域\n    * 当前会话有效，离开当前会话失效\n    * 当前会话：浏览器不关闭&不更换即为当前会话\n\n\n# 11. Spring中bean的生命周期\n\n# 11.1 标准生命周期\n\n① 通过构造器或工厂方法创建bean实例 ② 为bean的属性设置值和对其他bean的引用 ③ 调用bean的初始化方法 ④ bean可以使用了 ⑤ 当容器关闭时，调用bean的销毁方法\n\n# 11.2 添加后置处理器，bean的生命周期\n\n① 通过构造器或工厂方法创建bean实例 ② 为bean的属性设置值和对其他bean的引用 将bean实例传递给bean后置处理器的postProcessBeforeInitialization()方法 ③ 调用bean的初始化方法 将bean实例传递给bean后置处理器的postProcessAfterInitialization()方法 ④ bean可以使用了 ⑤ 当容器关闭时，调用bean的销毁方法\n\n\n# 12. Spring中自动装配【★】\n\n> Spring提供两种装配方式\n> \n>  1. 手动装配：在bean中添加set注入或者构造注入等方式\n>  2. 自动装配：无需set注入或构造注入，就可以自动装配属性值方式\n\n * 语法\n   \n   * 在bean标签中，添加autowire属性，常用属性值如下：\n     \n     * byName：通过类中属性名称与ioc容器中id匹配；如匹配成功，则自动装配成功，如未匹配成功，则会将null值装配\n     \n     * byType：通过类中属性类型与ioc容器中class匹配，匹配结果如下：\n       \n       * 匹配失败\n         \n         * 匹配0个：不会报错，会将null值装配\n         \n         * 匹配多个：会报错\n           \n           expected single matching bean but found 2: address,address2\n       \n       * 匹配成功\n         \n         * 匹配1个bean时，则匹配成功\n\n * 注意\n   \n   * 自动装配底层使用set注入\n   * 实战中建议使用byName或byType呢？\n     * 答：都不建议使用，建议使用注解方式\n\n\n# 13. Spring中注解【★★】\n\n> 约束 > 配置【注解】 > 代码\n> \n> 使用注解为了简化配置【0配置】\n> \n> 使用注解准备\n> \n>  * 开启组件扫描\n>  * 导入aopjar包\n\n# 13.1 使用spring注解，简化装配bean配置\n\n1) @Component\n\n标识一个受Spring IOC容器管理的普通组件\n\n2) @Repository\n\n标识一个受Spring IOC容器管理的持久化层组件\n\n3) @Service\n\n标识一个受Spring IOC容器管理的业务逻辑层组件\n\n4) @Controller\n\n标识一个受Spring IOC容器管理的表述层控制器组件\n\n>  * 使用注解默认会将类名首字母小写作为bean的id\n>  * 可以使用value属性为注解，设置bean的id值【如只书写一个属性时，value可省略】\n\n# 13.2 使用spring注解，简化装配bean中的属性配置【注入数值】\n\n * 语法：@Autowired\n\n * 作用：使用@Autowired注解实现自动装配，装配规则如下：\n   \n   * 先按照byType方式进行匹配，\n     \n     * 如匹配成功【容器中有且仅有一个匹配类型】，则自动装配成功\n     \n     * 如匹配失败，再按照byName进行匹配，如匹配成功则正常使用，如匹配失败，则会按照byType方式提示错误信息\n       \n       * 匹配0个：\n         \n         * @Autowired中required属性作用：设置装配属性是否必须自动装配\n           \n           * required=true：必须为指定属性自动装配\n           * required=false：不必须为指定属性自动装配\n         \n         * required=true【默认值】，会报错\n           \n            expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\n           \n           \n           1\n           \n         \n         * required=false，不会报错，会将null值装配\n       \n       * 匹配多个\n         \n         * 会报错：expected single matching bean but found 2: address,address2\n\n * 注意：\n   \n   * 默认@Autowired注解书写在字段中，底层反射方式注入数值\n   * @Autowired注解书写在setXXX()方法中，底层使用set注入\n   * @Autowired注解书写在构造方法中，底层使用构造注入\n\n * @Qualifier注解\n   \n   * 将ioc容器中bean的id自动装配到指定类的属性中\n   * 一般与@Autowired注解配合使用\n\n * @Value注解，自动装配字面量数值\n   \n   * 示例代码\n     \n     @Value("1001")\n     private Integer id;\n     @Value("zs")\n     private String stuName;\n     \n     \n     1\n     2\n     3\n     4\n     \n\n\n# 14. Spring组件扫描\n\n> 为什么开启组件扫描？\n> \n> 需要使用注解，就必须开启组件扫描\n\n * 方式一：默认开启组件扫描【扫描当前包及其子包】\n   \n   <context:component-scan base-package="com.viki"></context:component-scan>\n   \n   \n   1\n   \n\n * 方式二：排除扫描\n   \n    <context:component-scan base-package="com.viki">\n           \x3c!--        设置排除组件指定注解全限定名【全类名】--\x3e\n           <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>\n           \x3c!--        设置排除组件指定类全限定名【全类名】--\x3e\n   \x3c!--        <context:exclude-filter type="assignable" expression="com.viki.service.impl.StudentServiceImpl"/>--\x3e\n       </context:component-scan>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 方式三：包含扫描，注意：使用包含扫描需要将默认组件扫描关闭【use-default-filters="false"】\n   \n       <context:component-scan base-package="com.viki" use-default-filters="false">\n           <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>\n   \x3c!--        <context:include-filter type="assignable" expression="com.viki.dao.impl.StudentDaoImpl"/>--\x3e\n   \x3c!--        <context:include-filter type="assignable" expression="com.viki.dao.impl.StudentMapperImpl"/>--\x3e\n       </context:component-scan>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n\n# 15. 完全注解开发【重要】\n\n# 15.1 实现完全注解开发步骤\n\n * 创建配置类\n * 为配置类添加相应注解\n   * @Configuration：设置当前类为配置类，用来代替xml配置文件\n   * @ComponentScan：为配置类，开启组件扫描\n * 创建AnnotationConfigApplicationContext容器对象，并使用\n\n# 15.2 示例代码\n\npackage com.viki.springutil;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\n\n@ComponentScan(basePackages = "com.viki")\n@Configuration\npublic class SpringConfig {}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n//创建容器对象【配置类】\nApplicationContext context =\n        new AnnotationConfigApplicationContext(SpringConfig.class);\n//从容器中获取bean对象\nStudentService studentService = context.getBean("studentService", StudentService.class);\n//调用bean对象中相应方法\nstudentService.addStudent(new Student());\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 16. Spring整合Junit4\n\n# 16.1 Spring整合Junit4步骤\n\n * 导入spring-test:5.3.1.jar包\n * 添加注解\n   * @ContextConfiguration(locations="classpath:applicationContext_annotation.xml")\n   * @RunWith(SpringJUnit4ClassRunner.class)\n * 装配测试类，并使用\n\n# 16.2 示例代码\n\n@ContextConfiguration(locations="classpath:applicationContext_annotation.xml")\n//@ContextConfiguration(classes=SpringConfig.class)\n@RunWith(SpringJUnit4ClassRunner.class)\npublic class Test06SpringJunit {\n    @Autowired\n    private StudentService studentService;\n\n    /**\n     * Spring整合junit4\n     */\n    @Test\n    public void testSpringJunitUserService(){\n\n//        ApplicationContext context =\n//                new AnnotationConfigApplicationContext(SpringConfig.class);\n//        StudentService studentService = context.getBean("studentService", StudentService.class);\n\n        System.out.println("studentService = " + studentService);\n\n        studentService.addStudent(new Student());\n\n    }\n    \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 17. Spring中AOP前奏\n\n# 17.1 动态代理【设计模式之一】\n\n * 生活中案例\n   * 中介是我们租房时，代理对象\n   * 中介和我们“兄弟”关系\n   * 相关名词：横向提取、动态织入\n   * 总结：代理对象与目标对象，不能相互强制转换\n\n# 17.2 实现计算器功能分析\n\n * 将日志功能，书写在业务代码中发现问题如下：\n   \n   1) 代码混乱：越来越多的非业务需求(日志)加入后，原有的业务方法急剧膨胀。每个方法在处理核心逻辑的同时还必须兼顾其他多个关注点。\n   \n   * 业务代码与非业务代码书写在一处时，比较混乱\n   \n   2) 代码分散: 只是为了满足这个单一需求，就不得不在多个模块（方法）里多次重复相同的日志代码。如果日志需求发生变化，必须修改所有模块。\n   \n   * 同一个非业务功能，书写在多个业务代码中\n\n * 解决问题\n   \n   * 先将非业务代码“横向提取”\n   * 再“动态织入”回业务代码中\n\n# 17.3 使用动态代理实现计算器代理对象\n\n * 实现思路\n   \n   * Proxy：代理类的基类\n     * Proxy.newProxyInstance()：创建代理对象\n   * InvocationHandler：执行目标对象的代理方法\n     * invoke()\n\n * 实现步骤\n   \n   1. 创建目标对象【被代理代码】\n   2. 创建获取代理对象方法\n   3. 提供有参构造器\n\n# 17.4 示例代码\n\n@Component\npublic class CalcProxy {\n\n    //目标对象\n    private Object target;\n\n    public CalcProxy(Object object){\n        this.target = object;\n    }\n\n    //创建获取代理对象方法\n    public Object getProxy(){\n        //代理对象\n        Object proxyObj = null;\n        //创建代理对象\n        //参数：类加载器、所有接口Class、InvocationHandler\n        //获取类加载器\n        ClassLoader classLoader = target.getClass().getClassLoader();\n        //获取目标对象所有接口Class\n        Class<?>[] interfaces = target.getClass().getInterfaces();\n        //InvocationHandler【执行目标对象的代理方法】\n        proxyObj = Proxy.newProxyInstance(classLoader, interfaces, new InvocationHandler() {\n            /*\n                proxy\n                method:执行方法Method对象\n                Object[]:参数\n             */\n            @Override\n            public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                //获取方法名\n                String methodName = method.getName();\n                //执行业务代码之前，织入日志\n                MyLogging.methodBefore(methodName,args);\n                //执行目标对象，相应方法\n                Object rs = method.invoke(target, args);\n                //执行业务代码之后，织入日志\n                MyLogging.methodAfter(methodName,rs);\n                return rs;\n            }\n        });\n        return proxyObj;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 18. Spring中AOP\n\n# 18.1 使用AspectJ【★】\n\n * AspectJ简介\n   \n   * Java社区里最完整最流行的AOP框架。\n   * 在Spring2.0以上版本中，可以使用基于AspectJ注解或基于XML配置的AOP。\n\n * 使用AspectJ步骤\n   \n   * 导入jar包\n   * 添加配置文件，代码如下\n     * 开启组件扫描【使用注解】\n     * 开启AspectJ注解支持【自动为目标对象创建代理对象】\n   * 为非核心业务类配置切面【添加注解：@Aspect】\n   * 为非核心业务类中方法配置通知【前置通知|后置通知等】\n\n * 示例代码\n   \n   * 切面\n   \n   @Component  //将当前类装配IOC容器中\n   @Aspect     //将当前类标识为一个切面【】\n   public class MyLogging {\n   \n       /**\n        * 配置通知【前置通知-在执行业务代码之前执行】\n        */\n       @Before("execution(public int com.viki.annotationAspectj.CalcImpl.add(int, int))")\n       public void methodBefore(JoinPoint joinPoint){\n           //通过方法签名【方法名形参列表】，获取方法名\n           String methodName = joinPoint.getSignature().getName();\n           //获取参数\n           Object[] args = joinPoint.getArgs();\n           System.out.println("日志功能：执行"+methodName+"()方法之前，参数："+ Arrays.toString(args));\n       }\n   \n       /**\n        * 后置通知【在执行业务代码之后执行】\n        */\n       @After("execution(* com.viki.annotationAspectj.CalcImpl.*(..))")\n       public void methodAfter(JoinPoint joinPoint){\n           String name = joinPoint.getSignature().getName();\n           //获取参数\n           Object[] args = joinPoint.getArgs();\n           System.out.println("日志功能：执行"+name+"()方法之后，参数："+ Arrays.toString(args));\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   \n   \n   * 配置\n     \n     \x3c!--开启组件扫描【使用注解】--\x3e\n     <context:component-scan base-package="com.viki.annotationAspectj"></context:component-scan>\n     \n     \x3c!--开启AspectJ注解支持【自动为目标对象创建代理对象】--\x3e\n     <aop:aspectj-autoproxy></aop:aspectj-autoproxy>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     \n\n# 18.2 AOP简介\n\n * AOP全称：Aspect-Oriented Programming，面向切面编程\n\n * AOP是OOP扩展或补充\n   \n   * OOP：面向对象编程，纵向继承机制\n   * AOP：面向切面编程，横向提取机制\n\n * AOP术语\n   \n   * 横切关注点：非核心业务称之为横切关注点\n   \n   * 切面：将横切关注点提取类中，类称之为切面\n   \n   * 通知：将横切关注点提取到类中后，横切关注点更名为：通知\n   \n   * 目标：目标对象【CalcImpl】\n   \n   * 代理：代理对象\n     \n     *   @Autowired\n         private Calc calc;\t// com.sun.proxy.$Proxy20\n       \n       \n       1\n       2\n       \n   \n   * 连接点：先将横切关注点提取切面类中【通知】，再动态将通知织入回业务代码中；织入位置称之为，连接点。【织入之前】\n   \n   * 切入点：先将横切关注点提取切面类中【通知】，再动态将通知织入回业务代码中；织入位置称之为，连接点。【织入之后】\n\n# 18.3 AOP之切入点表达式\n\n * 基本语法：\n   \n   * execution([权限修饰符] [返回值类型] [简单类名/全类名] [方法名]([参数列表类型]))\n   \n   *   execution(public int com.viki.annotationAspectj.CalcImpl.add(int, int))\n       execution(* com.viki.annotationAspectj.*.*(..))\n              \n     \n     \n     1\n     2\n     3\n     \n\n * 表达式常用通配符\n   \n   【*】\n   \n     *：可以代表任意权限修饰符和返回值类型\n     \n     *：可以代表任意包|任意类全限定名\n     \n     *：可以代表任意方法名\n   \n   \n   【..】：代表任意参数类型|参数数量\n\n# 18.4 重用切入点表达式\n\n * 提取公共切入点表达式\n   \n   @Pointcut("execution(* com.viki.annotationAspectj.CalcImpl.*(..))")\n   public void myPointCut(){}\n   \n   \n   1\n   2\n   \n\n * 使用提取后的方法名()，作为切入点表达式\n   \n   @Before("myPointCut()")\n   public void methodBefore(JoinPoint joinPoint){}\n   \n   \n   1\n   2\n   \n\n\n# 19. AspectJ中支持通知\n\n * 前置通知\n   \n   * 语法：@Before\n   \n   * 作用：在业务代码执行之前执行，如有异常也执行。\n   \n   * 示例代码\n     \n     @Pointcut("execution(* com.viki.annotationAspectj.CalcImpl.*(..))")\n         public void myPointCut(){}\n     \n     @Before("myPointCut()")\n     public void methodBefore(JoinPoint joinPoint){\n         //通过方法签名【方法名形参列表】，获取方法名\n         String methodName = joinPoint.getSignature().getName();\n         //获取参数\n         Object[] args = joinPoint.getArgs();\n         System.out.println("日志功能：执行"+methodName+"()方法之前，参数："+ Arrays.toString(args));\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     \n\n * 后置通知\n   \n   * 语法：@After\n   \n   * 作用：在业务代码执行之后执行，如有异常也执行。\n   \n   * 示例代码\n     \n     /**\n      * 后置通知【在执行业务代码之后执行】\n      */\n     @After("myPointCut()")\n     public void methodAfter(JoinPoint joinPoint){\n         String name = joinPoint.getSignature().getName();\n         //获取参数\n         Object[] args = joinPoint.getArgs();\n         System.out.println("日志功能：执行"+name+"()方法之后，参数："+ Arrays.toString(args));\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     \n\n * 返回通知\n   \n   * 语法：@AfterReturning\n   \n   * 作用：在业务代码返回结果后【后置通知之前】，执行。如有异常不执行。\n   \n   * 注意：返回通知要求,returning="属性值"与入参中参数名一致\n   \n   * 示例代码\n     \n     @AfterReturning(value = "myPointCut()",returning = "rs")\n     public void methodReturning(JoinPoint joinPoint,Object rs){\n         //获取方法名称\n         String methodName = joinPoint.getSignature().getName();\n         System.out.println("日志工能【返回通知】：执行"+methodName+"()方法,返回结果rs:"+rs);\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n * 异常通知\n   \n   * 语法：@AfterThrowing\n   \n   * 作用：在业务代码出现异常时【后置通知之前】执行。如有异常执行，无异常不执行。\n   \n   * 注意：异常通知要求，throwing="属性值"与参数名一致\n   \n   * 示例代码\n     \n     @AfterThrowing(value = "myPointCut()",throwing = "ex")\n     public void methodThrowing(JoinPoint joinPoint,Exception ex){\n         //获取方法名\n         String methodName = joinPoint.getSignature().getName();\n         System.out.println("日志工能【异常通知】：执行"+methodName+"()方法,出现异常ex:"+ex);\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n * 环绕通知【前四种通知集合】\n   \n   * 语法：@Around\n   \n   * 作用：将业务代码【前置|后置|返回|异常】通知，整合一处\n   \n   * 注意：环绕通知的参数，只能ProceedingJoinPoint。\n   \n   * 示例代码\n     \n     @Around(value = "myPointCut()")\n     public Object methodAround(ProceedingJoinPoint pjp){\n         Object rs = null;\n         //获取方法名\n         String methodName = pjp.getSignature().getName();\n         //获取参数\n         Object[] args = pjp.getArgs();\n         try {\n             //前置通知\n             System.out.println("日志功能【前置通知】：执行"+methodName+"()方法之前，参数："+ Arrays.toString(args));\n             //执行目标对象的目标方法【add()】\n             rs = pjp.proceed();\n             //返回通知\n             System.out.println("日志工能【返回通知】：执行"+methodName+"()方法,返回结果rs:"+rs);\n         } catch (Throwable ex) {\n             ex.printStackTrace();\n             //异常通知\n             System.out.println("日志工能【异常通知】：执行"+methodName+"()方法,出现异常ex:"+ex);\n         } finally {\n             //后置通知\n             System.out.println("日志功能【后置通知】：执行"+methodName+"()方法之后，参数："+ Arrays.toString(args));\n         }\n     \treturn rs;\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     \n\n\n# 20. Spring中切面优先级\n\n * 语法：@Order(value=index)，index:正整数\n\n * 作用：设置切面优先级\n   \n   * 数值越小，优先级越高\n\n * 示例代码\n   \n   //验证切面\n   @Component\n   @Aspect\n   @Order(1)\n   public class MyValidate {}\n   \n   \n   //日志切面\n   @Component  //将当前类装配IOC容器中\n   @Aspect     //将当前类标识为一个切面【】\n   @Order(value=2)\n   public class MyLogging {}\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n\n# 21. 使用XML配置AOP\n\n\x3c!--    装配bean--\x3e\n    <bean id="calc" class="com.viki.xmlAspectJ.CalcImpl"></bean>\n    <bean id="myLogging" class="com.viki.xmlAspectJ.MyLogging"></bean>\n    <bean id="myValidate" class="com.viki.xmlAspectJ.MyValidate"></bean>\n\n\x3c!--    配置AOP--\x3e\n    <aop:config>\n\x3c!--        定义切入点表达式--\x3e\n        <aop:pointcut id="myPointCut" expression="execution(* com.viki.xmlAspectJ.CalcImpl.*(..))"/>\n            \x3c!--        配置日志切面--\x3e\n        <aop:aspect ref="myLogging" order="1">\n            \x3c!--            配置前置通知--\x3e\n            <aop:before method="methodBefore" pointcut-ref="myPointCut"></aop:before>\n            \x3c!--            配置后置通知--\x3e\n            <aop:after method="methodAfter" pointcut-ref="myPointCut"></aop:after>\n            \x3c!--            配置返回通知--\x3e\n            <aop:after-returning method="methodReturning" returning="rs" pointcut-ref="myPointCut"></aop:after-returning>\n            \x3c!--            配置异常通知--\x3e\n            <aop:after-throwing method="methodThrowing" throwing="ex" pointcut-ref="myPointCut"></aop:after-throwing>\n        </aop:aspect>\n\x3c!--        配置验证切面--\x3e\n        <aop:aspect ref="myValidate" order="2">\n            <aop:before method="beforeMethodVal" pointcut-ref="myPointCut"></aop:before>\n        </aop:aspect>\n    </aop:config>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 22. Spring中JdbcTemplate框架\n\n# 22.1 JdbcTemplate简介\n\n * JdbcTemplate是持久化层框架【类似：Mybatis】\n\n# 22.2 搭建JdbcTemplate步骤\n\n * 导入相关jar包\n * 编写核心配置文件\n   * 装配JdbcTemplate\n * 使用JdbcTemplate相应方法\n\n# 22.3 JdbcTemplate常用API\n\n * update(String sql,Object... params)\n   \n   * 增删改通用方法\n\n * batchUpdate(String sql,List<Object[]> params)\n   \n   * 批量增删改通用方法\n\n * queryForObject()\n   \n   * queryForObject(String sql,Class clazz,Object... params)\n     * 查询单个数值：select count(1) from table\n   * queryForObject(String sql,RowMapper<T> mapper,Object... params)\n     * 查询单个对象：select col1,col2 ... from table where id=?\n\n * query(String sql,RowMapper<T> mapper,Object... params)\n   \n   * 查询多个对象，通用方法\n\n\n# 23. Spring中声明式事务管理【★★★】\n\n> 事务回顾\n> \n>  1. 事务四大特性【ACID】\n>     * 原子性\n>     * 一致性\n>     * 隔离性\n>     * 持久性\n>  2. 事务三种行为\n>     * 开启事务：connection.setAutoCommit(false);\n>     * 提交事务：connection.commit();\n>     * 回滚事务：connection.rollback();\n\n# 23.1 Spring中支持事务管理\n\n * 编程式事务管理\n   \n   1. 获取数据库连接Connection对象\n   \n   2. 取消事务的自动提交\n   \n   3. 执行操作\n   \n   4. 正常完成操作时手动提交事务\n   \n   5. 执行失败时回滚事务\n   \n   6. 关闭相关资源\n   \n   * 总结：编程式事务管理不足，将事务管理代码【非业务代码】与业务代码书写一处，导致代码混乱和代码分散问题。\n   * 此时：需要使用AOP思想【先横向提取，再动态织入】，管理事务：声明式事务管理\n\n * 声明式事务管理\n   \n   * 导入相关jar包\n     \n     * spring-aspects-5.3.1.jar\n     * com.springsource.org.aspectj.weaver-1.6.8.RELEASE.jar\n   \n   * 开启声明式事务管理支持\n     \n     \x3c!--    装配事务管理器--\x3e\n         <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">\n             <property name="dataSource" ref="dataSource"></property>\n         </bean>\n         \x3c!--    开启声明式事务管理--\x3e\n         <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   \n   * 在需要事务管理的方法或类上，添加@Transactional\n\n# 23.2 不使用事务管理问题\n\n * 案例：以买书为例\n   \n   /**\n        * 买书->查询book价格->修改库存->修改余额\n        * @param userId\n        * @param isbn\n        */\n   @Override\n   public void purchase(String userId, String isbn) {\n       //1.查询book价格\n       Integer price = bookShopDao.getBookPriceByIsbn(isbn);\n       //2.修改库存\n       bookShopDao.updateBookStock(isbn);\n       //3.修改余额\n       bookShopDao.updateUserBalance(userId,price);\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n   * purchase()方法中三个步骤，应该使用事务管理\n   * 如不使用事务管理，可能出现【修改库存，但未修改余额】问题\n\n# 23.3 声明式事务管理的示例代码\n\n * xml配置\n   \n   \x3c!--    装配事务管理器--\x3e\n       <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">\n           <property name="dataSource" ref="dataSource"></property>\n       </bean>\n       \x3c!--    开启声明式事务管理--\x3e\n   \x3c!--    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>--\x3e\n       <tx:annotation-driven></tx:annotation-driven>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * java业务代码\n   \n   @Transactional\n   public void purchase(String userId, String isbn) {\n       //1.查询book价格\n       Integer price = bookShopDao.getBookPriceByIsbn(isbn);\n       //2.修改库存\n       bookShopDao.updateBookStock(isbn);\n       //3.修改余额\n       bookShopDao.updateUserBalance(userId,price);\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * java测试代码\n   \n   @Test\n       public void testBookShopService(){\n           ApplicationContext context =\n                   new ClassPathXmlApplicationContext("applicationContext_transaction.xml");\n   \n           //事务声明式事务管理【不能使用BookShopServiceImpl接收，原因代码对象与目标对象是兄弟关系】\n   //        BookShopServiceImpl bookShopService = context.getBean("bookShopService", BookShopServiceImpl.class);\n           BookShopService bookShopService = context.getBean("bookShopService", BookShopService.class);\n   \n           bookShopService.purchase("101","1002");\n       }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n# 23.4 Spring声明式事务管理中属性\n\n * 事务传播行为\n   \n   * 语法：propagation=Propagation.REQUIRED【默认值】\n   \n   * 概述：当事务方法被另一个事务方法调用时，必须指定事务应该如何传播。例如：方法可能继续在现有事务中运行，也可能开启一个新事务，并在自己的事务中运行。\n   \n   * 7种事务传播行为\n     \n     传播属性            描述\n     REQUIRED        如果有事务在运行，当前的方法就在这个事务内运行；否则就启动一个新的事务，并在自己的事务内运行。\n     REQUIRES_NEW    当前的方法****必须****启动新事务，并在自己的事务内运行；如果有事务正在运行，应该将它挂起。\n     SUPPORTS        如果有事务在运行，当前的方法就在这个事务内运行，否则可以不运行在事务中。\n     NOT_SUPPORTED   当前的方法不应该运行在事务中，如果有运行的事务将它挂起\n     MANDATORY       当前的方法必须运行在事务中，如果没有正在运行的事务就抛出异常。\n     NEVER           当前的方法不应该运行在事务中，如果有正在运行的事务就抛出异常。\n     NESTED          如果有事务正在运行，当前的方法就应该在这个事务的嵌套事务内运行，否则就启动一个新的事务，并在它自己的事务内运行。\n\n * 事务隔离级别\n   \n   * 语法：isolation=Isolation.\n   \n   * 概述：一个事务与其他事务隔离的程度称为隔离级别。\n   \n   * 四种隔离级别\n     \n                           脏读   不可重复读   幻读\n     READ UNCOMMITTED【1】   有    有       有\n     READ COMMITTED【2】     无    有       有\n     REPEATABLE READ【4】    无    无       有\n     SERIALIZABLE【8】       无    无       无\n     \n                        ORACLE   MYSQL\n     READ UNCOMMITTED   ×        √\n     READ COMMITTED     √(默认)    √\n     REPEATABLE READ    ×        √(默认)\n     SERIALIZABLE       √        √\n\n * 事务超时\n   \n   * timeout：超时事务属性可以设置事务在强制回滚之前可以保持多久。这样可以防止长期运行的事务占用资源。\n\n * 事务只读\n   \n   * readonly：只读事务属性可以设置这个事务只读取数据但不更新数据, 这样可以帮助数据库引擎优化事务。\n\n * 事务异常回滚【不回滚】\n   \n   * noRollbackFor：设置指定不回滚的异常类型\n\n * 示例代码\n   \n   @Transactional(propagation = Propagation.REQUIRES_NEW,\n           isolation = Isolation.READ_COMMITTED,\n           timeout = 3,\n           noRollbackFor = ArithmeticException.class)\n   public void purchase(String userId, String isbn) {\n       //1.查询book价格\n       Integer price = bookShopDao.getBookPriceByIsbn(isbn);\n       System.out.println("price = " + price);\n   \n       Integer price2 = bookShopDao.getBookPriceByIsbn(isbn);\n       System.out.println("price2 = " + price2);\n   \n       try {\n           int i = 1/0;\n       } catch (Exception e) {\n           e.printStackTrace();\n       }\n   \n       /*\n       try {\n           Thread.sleep(5000);\n       } catch (InterruptedException e) {\n           e.printStackTrace();\n       }\n        */\n   \n       //2.修改库存\n       bookShopDao.updateBookStock(isbn);\n       //3.修改余额\n       bookShopDao.updateUserBalance(userId,price);\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   \n\n# 23.5 基于xml方式配置声明式事务\n\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"\n       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">\n\n    \x3c!--引入外部属性文件--\x3e\n    <context:property-placeholder location="classpath:druid.properties"></context:property-placeholder>\n\n    \x3c!--配置数据源--\x3e\n    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">\n         <property name="username" value="${jdbc.username}"></property>\n        <property name="password" value="${jdbc.password}"></property>\n        <property name="url" value="${jdbc.url}"></property>\n        <property name="driverClassName" value="${jdbc.driverClassName}"></property>\n        <property name="initialSize" value="${jdbc.initialSize}"></property>\n        <property name="maxActive" value="${jdbc.maxActive}"></property>\n    </bean>\n\n    \x3c!--配置JdbcTemplate--\x3e\n    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">\n        \x3c!--配置数据源属性--\x3e\n        <property name="dataSource" ref="dataSource"></property>\n    </bean>\n\n    \x3c!--配置BookShopDaoImpl--\x3e\n    <bean id="bookShopDao" class="com.viki.spring.tx.xml.BookShopDaoImpl">\n        <property name="jdbcTemplate" ref="jdbcTemplate"></property>\n    </bean>\n\n    \x3c!--配置BookShopServiceImpl--\x3e\n    <bean id="bookShopService" class="com.viki.spring.tx.xml.BookShopServiceImpl">\n        <property name="bookShopDao" ref="bookShopDao"></property>\n    </bean>\n\n    \x3c!--配置事务管理器--\x3e\n    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">\n        \x3c!--配置数据源属性--\x3e\n        <property name="dataSource" ref="dataSource"></property>\n    </bean>\n    \x3c!--配置声明式事务--\x3e\n    <tx:advice id="tx" transaction-manager="transactionManager">\n        \x3c!--设置添加事务的方法--\x3e\n        <tx:attributes>\n            \x3c!--设置查询的方法的只读属性为true--\x3e\n            <tx:method name="find*" read-only="true"/>\n            <tx:method name="get*" read-only="true"/>\n            <tx:method name="purchase" propagation="REQUIRES_NEW" isolation="READ_COMMITTED"></tx:method>\n        </tx:attributes>\n    </tx:advice>\n    \x3c!--AOP配置--\x3e\n    <aop:config>\n        \x3c!--配置切入点表达式--\x3e\n        <aop:pointcut id="pointCut"          expression="execution(*com.viki.spring.tx.xml.BookShopServiceImpl.purchase(..))"/>\n        \x3c!--将事务方法和切入点表达式关联起来--\x3e\n        <aop:advisor advice-ref="tx" pointcut-ref="pointCut"></aop:advisor>\n    </aop:config>\n</beans>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# 24. Spring5新特性\n\n# 24.1 Spring整合Log4j2\n\n * 导入jar包\n   \n   <dependency>\n       <groupId>org.apache.logging.log4j</groupId>\n       <artifactId>log4j-slf4j-impl</artifactId>\n       <version>2.11.2</version>\n       <scope>test</scope>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 编写配置文件\n   \n   <?xml version="1.0" encoding="UTF-8"?>\n   \x3c!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL --\x3e\n   \x3c!--Configuration后面的status用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，可以看到log4j2内部各种详细输出--\x3e\n   <configuration status="INFO">\n       \x3c!--先定义所有的appender--\x3e\n       <appenders>\n           \x3c!--输出日志信息到控制台--\x3e\n           <console name="Console" target="SYSTEM_OUT">\n               \x3c!--控制日志输出的格式--\x3e\n               <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n"/>\n           </console>\n       </appenders>\n       \x3c!--然后定义logger，只有定义了logger并引入的appender，appender才会生效--\x3e\n       \x3c!--root：用于指定项目的根日志，如果没有单独指定Logger，则会使用root作为默认的日志输出--\x3e\n       <loggers>\n           <root level="DEBUG">\n               <appender-ref ref="Console"/>\n           </root>\n       </loggers>\n   </configuration>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n# 24.2 Spring整合Junit5\n\n * 导入jar包\n\n * 编写配置文件\n\n * 在测试类中添加注解\n   \n   //@ExtendWith(SpringExtension.class)\n   //@ContextConfiguration(locations = "classpath:applicationContext_transaction.xml")\n   @SpringJUnitConfig(locations = "classpath:applicationContext_transaction.xml")\n   public class TestJunit5 {\n       @Autowired\n       private BookShopDao bookShopDao;\n       @Test\n       public void testJunit5(){\n           Integer bookPriceByIsbn = bookShopDao.getBookPriceByIsbn("1001");\n           System.out.println("bookPriceByIsbn = " + bookPriceByIsbn);\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   ',normalizedContent:'# spring\n\n\n# 1. spring简介\n\n * spring开源的ioc【di】和aop容器框架\n * spring也是一家公司，官网：https://spring.io/\n\n\n# 2. spring特点\n\n * 非侵入式：无需实现某个接口，或继承某个类\n   * servlet:侵入式，必须实现某个结构或继承某个类\n * 组件化：即插即用\n * 一站式：使用spring可以解决【持久化层-业务逻辑层-控制层】三层问题。\n * ioc：inversion of control【反转控制】，将对象的控制权反转spring\n * aop：aspect-oriented programming【面向切面编程】\n\n\n# 3. 搭建spring框架步骤【★】\n\n * 导入jar包\n   * 将springframework添加到本地仓库的org目录下即可\n * 新建student【测试类】\n * 创建spring核心配置文件【applicationcontext.xml或beans.xml】\n   * 位置：resources目录下\n   * 将student类装配spring容器中\n * 创建spring容器对象【classpathxmlapplicationcontext】\n   * 通过容器对象获取student对象\n\n\n# 4. getbean()三种方式\n\n * getbean(string id)：从spring容器中，通过id获取对象\n   \n   * 不足：默认获取对象类型是object，需要强转，比较繁琐\n\n * getbean(class clazz)：从spring容器中，通过class获取对象\n   \n   * 不足：当容器中有多个相同class对象时，会报如下错误：\n     \n     expected single matching bean but found 2: ltq,zzq\n\n * getbean(string id,class clazz)：从spring容器中，通过id和class获取对象\n   \n   * 建议使用\n\n\n# 5. spring依赖注入三种方式\n\n * set注入\n   \n   > 语法：<property>\n   \n   \x3c!--    使用bean标签，装配student\n               id:设置装配对象唯一标识\n               class:设置装配对象的全类名【类的全限定名】\n   --\x3e\n       <bean id="ltq" class="com.viki.pojo.student">\n   \x3c!--        为对象中的属性，注入数值--\x3e\n           <property name="id" value="1001"></property>\n           <property name="stuname" value="ltq"></property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * 构造器注入\n   \n   > 语法：<constructor-arg>\n   \n   <bean id="zzq" class="com.viki.pojo.student">\n       <constructor-arg name="id" value="102"></constructor-arg>\n       <constructor-arg name="stuname" value="zzq"></constructor-arg>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   \n\n * p名称空间注入\n   \n   > 注意：p名称空间注入本质，是set注入\n   \n   \x3c!-- 引入p名称空间 -- >\n   xmlns:p="http://www.springframework.org/schema/p"\n   <bean id="cjy" class="com.viki.pojo.student" p:id="1003" p:stuname="cjy"></bean>\n   \n   \n   1\n   2\n   3\n   \n\n\n# 6. spring中ioc【di】\n\n * ioc全称：inversion of control，反转控制。【将对象控制权反转给spring容器】\n\n * di(dependency injection)，依赖注入。\n   \n   * 总结: ioc 就是一种反转控制的思想， 而di是对ioc的一种具体实现。\n\n * spring中有ioc思想，ioc思想必须基于ioc容器来完成，而ioc容器在最底层实质上就是一个对象工厂.\n   \n   * spring实现ioc两种方式\n     * beanfactory【spring底层实现】\n     * applicationcontext【推荐使用】\n\n * applicationcontext结构图\n   \n   * applicationcontext\n     * configurableapplicationcontext\n       * classpathxmlapplicationcontext【基于类路径下，检索xml文件】\n       * filesystemxmlapplicationcontext【基于系统路径（真实路径）下，检索xml文件】\n\n\n# 7. spring中注入数值问题\n\n# 7.1 字面量值【重要】\n\n * 可以存储基本数据类型及包装类、string类型的数据，字面量值\n\n * 可以使用value注入值的数值，称之为字面量值\n\n * 示例代码\n   \n   \x3c!--    装配字面量值--\x3e\n       <bean id="sls" class="com.viki.pojo.emp">\n           <property name="id" value="101"></property>\n           <property name="empname" value="sls"></property>\n           <property name="age" value="19"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n   \x3c!--        <property name="dept" value="sdfd"></property>--\x3e\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n# 7.2 特殊字符处理\n\n * 使用cdata区，语法：<![cdata[]]>\n\n * 示例代码\n   \n   <bean id="cls" class="com.viki.pojo.emp">\n       <property name="id" value="102"></property>\n       <property name="empname" value="cls"></property>\n       <property name="age" value="18"></property>\n       <property name="salary" value="100"></property>\n       <property name="gender">\n           <value><![cdata[<女>]]></value>\n       </property>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n# 7.3 外部已声明bean【重要】\n\n * 语法：ref\n\n * 示例代码\n   \n   \x3c!--    装配部门--\x3e\n       <bean id="jxb" class="com.viki.pojo.dept">\n           <property name="deptid" value="1001"></property>\n           <property name="deptname" value="教学部门"></property>\n           <property name="deptloc" value="3008"></property>\n       </bean>\n       <bean id="cxls" class="com.viki.pojo.emp">\n           <property name="id" value="103"></property>\n           <property name="empname" value="cxls"></property>\n           <property name="age" value="20"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n           <property name="dept" ref="jxb"></property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n\n# 7.4 级联属性赋值【★】\n\n * 语法：dept.deptname\n\n * 示例代码\n   \n   \x3c!--    装配部门--\x3e\n       <bean id="jxb" class="com.viki.pojo.dept">\n           <property name="deptid" value="1001"></property>\n           <property name="deptname" value="教学部门"></property>\n           <property name="deptloc" value="3008"></property>\n       </bean>\n       <bean id="cxls" class="com.viki.pojo.emp">\n           <property name="id" value="103"></property>\n           <property name="empname" value="cxls"></property>\n           <property name="age" value="20"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n           <property name="dept" ref="jxb"></property>\n   \x3c!--        级联属性赋值--\x3e\n           <property name="dept.deptname" value="财务部门"></property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   \n\n * 注意：如更改级联属性值时，管理bean中属性也同时被更改【原因：级联对象与原对象，是同一个对象】\n\n# 7.5 内部bean\n\n * 示例代码\n   \n   \x3c!--    内部bean--\x3e\n       <bean id="gls" class="com.viki.pojo.emp">\n           <property name="id" value="104"></property>\n           <property name="empname" value="gls"></property>\n           <property name="age" value="18"></property>\n           <property name="salary" value="100"></property>\n           <property name="gender" value="男"></property>\n           <property name="dept">\n               <bean id="msbm" class="com.viki.pojo.dept">\n                   <property name="deptid" value="1001"></property>\n                   <property name="deptname" value="秘书部门"></property>\n                   <property name="deptloc" value="3001"></property>\n               </bean>\n           </property>\n       </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   \n\n# 7.6 集合数值\n\n * 示例代码\n   \n   <bean id="ab" class="com.viki.pojo.dept">\n       <property name="deptid" value="1003"></property>\n       <property name="deptname" value="安保部门"></property>\n       <property name="deptloc" value="3002"></property>\n       <property name="emplist">\n           <list>\n               <ref bean="sls"/>\n               <ref bean="cls"/>\n               <ref bean="cxls"/>\n               <ref bean="gls"/>\n           </list>\n       </property>\n       <property name="map">\n           <map>\n               <entry>\n                   <key>\n                       <value>1001</value>\n                   </key>\n                   <ref bean="sls"></ref>\n               </entry>\n               <entry>\n                   <key>\n                       <value>1002</value>\n                   </key>\n                   <ref bean="cxls"></ref>\n               </entry>\n           </map>\n       </property>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   \n\n\n# 8. spring装配第三方bean\n\n * 导入jar包\n * 编写db.properties文件\n * 编写applicationcontext.xml文件\n   * 加载属性文件【db.properties】\n   * 装配druiddatasource数据源\n\n\n# 9. spring中factorybean\n\n * 工厂bean设置的类型可以和返回的类型不一样，其返回的类型通过该工厂bean的getobject方法指定。\n\n * 示例代码\n   \n   package com.viki.pojo;\n   \n   import org.springframework.beans.factory.factorybean;\n   \n   public class myfactorybean implements factorybean<student> {\n       @override\n       public student getobject() throws exception {\n           student student = new student(101,"zq");\n           system.out.println("student 被创建啦！" + student);\n           return student;\n       }\n   \n       @override\n       public class<?> getobjecttype() {\n           return student.class;\n       }\n   \n   //    设置是否为单例\n       @override\n       public boolean issingleton() {\n           return true;\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   \n   \n   <bean id="student" class="com.viki.pojo.myfactorybean"></bean>\n   \n   \n   1\n   \n\n\n# 10. spring中bean作用域【★】\n\n> 设置bean作用域语法,在bean标签中添加属性:scope，scope属性取值范围如下：\n\n 1. singleton：单例，在spring的ioc容器中仅存在一个bean实例\n    * spring在创建容器对象时，创建bean对象【全局只创建一次容器对象，所以全局只有一个bean对象】\n 2. prototype：多例，每次调用getbean方法都返回一个新的bean实例\n    * 每次调用getbean()方法时，都会创建一个bean对象\n 3. request：请求域\n    * 当前请求有效，离开当前请求失效\n    * 当前请求：地址栏不变即为当前请求，地址栏改变不在当前请求\n 4. session：会话域\n    * 当前会话有效，离开当前会话失效\n    * 当前会话：浏览器不关闭&不更换即为当前会话\n\n\n# 11. spring中bean的生命周期\n\n# 11.1 标准生命周期\n\n① 通过构造器或工厂方法创建bean实例 ② 为bean的属性设置值和对其他bean的引用 ③ 调用bean的初始化方法 ④ bean可以使用了 ⑤ 当容器关闭时，调用bean的销毁方法\n\n# 11.2 添加后置处理器，bean的生命周期\n\n① 通过构造器或工厂方法创建bean实例 ② 为bean的属性设置值和对其他bean的引用 将bean实例传递给bean后置处理器的postprocessbeforeinitialization()方法 ③ 调用bean的初始化方法 将bean实例传递给bean后置处理器的postprocessafterinitialization()方法 ④ bean可以使用了 ⑤ 当容器关闭时，调用bean的销毁方法\n\n\n# 12. spring中自动装配【★】\n\n> spring提供两种装配方式\n> \n>  1. 手动装配：在bean中添加set注入或者构造注入等方式\n>  2. 自动装配：无需set注入或构造注入，就可以自动装配属性值方式\n\n * 语法\n   \n   * 在bean标签中，添加autowire属性，常用属性值如下：\n     \n     * byname：通过类中属性名称与ioc容器中id匹配；如匹配成功，则自动装配成功，如未匹配成功，则会将null值装配\n     \n     * bytype：通过类中属性类型与ioc容器中class匹配，匹配结果如下：\n       \n       * 匹配失败\n         \n         * 匹配0个：不会报错，会将null值装配\n         \n         * 匹配多个：会报错\n           \n           expected single matching bean but found 2: address,address2\n       \n       * 匹配成功\n         \n         * 匹配1个bean时，则匹配成功\n\n * 注意\n   \n   * 自动装配底层使用set注入\n   * 实战中建议使用byname或bytype呢？\n     * 答：都不建议使用，建议使用注解方式\n\n\n# 13. spring中注解【★★】\n\n> 约束 > 配置【注解】 > 代码\n> \n> 使用注解为了简化配置【0配置】\n> \n> 使用注解准备\n> \n>  * 开启组件扫描\n>  * 导入aopjar包\n\n# 13.1 使用spring注解，简化装配bean配置\n\n1) @component\n\n标识一个受spring ioc容器管理的普通组件\n\n2) @repository\n\n标识一个受spring ioc容器管理的持久化层组件\n\n3) @service\n\n标识一个受spring ioc容器管理的业务逻辑层组件\n\n4) @controller\n\n标识一个受spring ioc容器管理的表述层控制器组件\n\n>  * 使用注解默认会将类名首字母小写作为bean的id\n>  * 可以使用value属性为注解，设置bean的id值【如只书写一个属性时，value可省略】\n\n# 13.2 使用spring注解，简化装配bean中的属性配置【注入数值】\n\n * 语法：@autowired\n\n * 作用：使用@autowired注解实现自动装配，装配规则如下：\n   \n   * 先按照bytype方式进行匹配，\n     \n     * 如匹配成功【容器中有且仅有一个匹配类型】，则自动装配成功\n     \n     * 如匹配失败，再按照byname进行匹配，如匹配成功则正常使用，如匹配失败，则会按照bytype方式提示错误信息\n       \n       * 匹配0个：\n         \n         * @autowired中required属性作用：设置装配属性是否必须自动装配\n           \n           * required=true：必须为指定属性自动装配\n           * required=false：不必须为指定属性自动装配\n         \n         * required=true【默认值】，会报错\n           \n            expected at least 1 bean which qualifies as autowire candidate. dependency annotations: {@org.springframework.beans.factory.annotation.autowired(required=true)}\n           \n           \n           1\n           \n         \n         * required=false，不会报错，会将null值装配\n       \n       * 匹配多个\n         \n         * 会报错：expected single matching bean but found 2: address,address2\n\n * 注意：\n   \n   * 默认@autowired注解书写在字段中，底层反射方式注入数值\n   * @autowired注解书写在setxxx()方法中，底层使用set注入\n   * @autowired注解书写在构造方法中，底层使用构造注入\n\n * @qualifier注解\n   \n   * 将ioc容器中bean的id自动装配到指定类的属性中\n   * 一般与@autowired注解配合使用\n\n * @value注解，自动装配字面量数值\n   \n   * 示例代码\n     \n     @value("1001")\n     private integer id;\n     @value("zs")\n     private string stuname;\n     \n     \n     1\n     2\n     3\n     4\n     \n\n\n# 14. spring组件扫描\n\n> 为什么开启组件扫描？\n> \n> 需要使用注解，就必须开启组件扫描\n\n * 方式一：默认开启组件扫描【扫描当前包及其子包】\n   \n   <context:component-scan base-package="com.viki"></context:component-scan>\n   \n   \n   1\n   \n\n * 方式二：排除扫描\n   \n    <context:component-scan base-package="com.viki">\n           \x3c!--        设置排除组件指定注解全限定名【全类名】--\x3e\n           <context:exclude-filter type="annotation" expression="org.springframework.stereotype.service"/>\n           \x3c!--        设置排除组件指定类全限定名【全类名】--\x3e\n   \x3c!--        <context:exclude-filter type="assignable" expression="com.viki.service.impl.studentserviceimpl"/>--\x3e\n       </context:component-scan>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 方式三：包含扫描，注意：使用包含扫描需要将默认组件扫描关闭【use-default-filters="false"】\n   \n       <context:component-scan base-package="com.viki" use-default-filters="false">\n           <context:include-filter type="annotation" expression="org.springframework.stereotype.repository"/>\n   \x3c!--        <context:include-filter type="assignable" expression="com.viki.dao.impl.studentdaoimpl"/>--\x3e\n   \x3c!--        <context:include-filter type="assignable" expression="com.viki.dao.impl.studentmapperimpl"/>--\x3e\n       </context:component-scan>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n\n\n# 15. 完全注解开发【重要】\n\n# 15.1 实现完全注解开发步骤\n\n * 创建配置类\n * 为配置类添加相应注解\n   * @configuration：设置当前类为配置类，用来代替xml配置文件\n   * @componentscan：为配置类，开启组件扫描\n * 创建annotationconfigapplicationcontext容器对象，并使用\n\n# 15.2 示例代码\n\npackage com.viki.springutil;\nimport org.springframework.context.annotation.componentscan;\nimport org.springframework.context.annotation.configuration;\n\n@componentscan(basepackages = "com.viki")\n@configuration\npublic class springconfig {}\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n//创建容器对象【配置类】\napplicationcontext context =\n        new annotationconfigapplicationcontext(springconfig.class);\n//从容器中获取bean对象\nstudentservice studentservice = context.getbean("studentservice", studentservice.class);\n//调用bean对象中相应方法\nstudentservice.addstudent(new student());\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 16. spring整合junit4\n\n# 16.1 spring整合junit4步骤\n\n * 导入spring-test:5.3.1.jar包\n * 添加注解\n   * @contextconfiguration(locations="classpath:applicationcontext_annotation.xml")\n   * @runwith(springjunit4classrunner.class)\n * 装配测试类，并使用\n\n# 16.2 示例代码\n\n@contextconfiguration(locations="classpath:applicationcontext_annotation.xml")\n//@contextconfiguration(classes=springconfig.class)\n@runwith(springjunit4classrunner.class)\npublic class test06springjunit {\n    @autowired\n    private studentservice studentservice;\n\n    /**\n     * spring整合junit4\n     */\n    @test\n    public void testspringjunituserservice(){\n\n//        applicationcontext context =\n//                new annotationconfigapplicationcontext(springconfig.class);\n//        studentservice studentservice = context.getbean("studentservice", studentservice.class);\n\n        system.out.println("studentservice = " + studentservice);\n\n        studentservice.addstudent(new student());\n\n    }\n    \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n\n\n\n# 17. spring中aop前奏\n\n# 17.1 动态代理【设计模式之一】\n\n * 生活中案例\n   * 中介是我们租房时，代理对象\n   * 中介和我们“兄弟”关系\n   * 相关名词：横向提取、动态织入\n   * 总结：代理对象与目标对象，不能相互强制转换\n\n# 17.2 实现计算器功能分析\n\n * 将日志功能，书写在业务代码中发现问题如下：\n   \n   1) 代码混乱：越来越多的非业务需求(日志)加入后，原有的业务方法急剧膨胀。每个方法在处理核心逻辑的同时还必须兼顾其他多个关注点。\n   \n   * 业务代码与非业务代码书写在一处时，比较混乱\n   \n   2) 代码分散: 只是为了满足这个单一需求，就不得不在多个模块（方法）里多次重复相同的日志代码。如果日志需求发生变化，必须修改所有模块。\n   \n   * 同一个非业务功能，书写在多个业务代码中\n\n * 解决问题\n   \n   * 先将非业务代码“横向提取”\n   * 再“动态织入”回业务代码中\n\n# 17.3 使用动态代理实现计算器代理对象\n\n * 实现思路\n   \n   * proxy：代理类的基类\n     * proxy.newproxyinstance()：创建代理对象\n   * invocationhandler：执行目标对象的代理方法\n     * invoke()\n\n * 实现步骤\n   \n   1. 创建目标对象【被代理代码】\n   2. 创建获取代理对象方法\n   3. 提供有参构造器\n\n# 17.4 示例代码\n\n@component\npublic class calcproxy {\n\n    //目标对象\n    private object target;\n\n    public calcproxy(object object){\n        this.target = object;\n    }\n\n    //创建获取代理对象方法\n    public object getproxy(){\n        //代理对象\n        object proxyobj = null;\n        //创建代理对象\n        //参数：类加载器、所有接口class、invocationhandler\n        //获取类加载器\n        classloader classloader = target.getclass().getclassloader();\n        //获取目标对象所有接口class\n        class<?>[] interfaces = target.getclass().getinterfaces();\n        //invocationhandler【执行目标对象的代理方法】\n        proxyobj = proxy.newproxyinstance(classloader, interfaces, new invocationhandler() {\n            /*\n                proxy\n                method:执行方法method对象\n                object[]:参数\n             */\n            @override\n            public object invoke(object proxy, method method, object[] args) throws throwable {\n                //获取方法名\n                string methodname = method.getname();\n                //执行业务代码之前，织入日志\n                mylogging.methodbefore(methodname,args);\n                //执行目标对象，相应方法\n                object rs = method.invoke(target, args);\n                //执行业务代码之后，织入日志\n                mylogging.methodafter(methodname,rs);\n                return rs;\n            }\n        });\n        return proxyobj;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n\n\n\n# 18. spring中aop\n\n# 18.1 使用aspectj【★】\n\n * aspectj简介\n   \n   * java社区里最完整最流行的aop框架。\n   * 在spring2.0以上版本中，可以使用基于aspectj注解或基于xml配置的aop。\n\n * 使用aspectj步骤\n   \n   * 导入jar包\n   * 添加配置文件，代码如下\n     * 开启组件扫描【使用注解】\n     * 开启aspectj注解支持【自动为目标对象创建代理对象】\n   * 为非核心业务类配置切面【添加注解：@aspect】\n   * 为非核心业务类中方法配置通知【前置通知|后置通知等】\n\n * 示例代码\n   \n   * 切面\n   \n   @component  //将当前类装配ioc容器中\n   @aspect     //将当前类标识为一个切面【】\n   public class mylogging {\n   \n       /**\n        * 配置通知【前置通知-在执行业务代码之前执行】\n        */\n       @before("execution(public int com.viki.annotationaspectj.calcimpl.add(int, int))")\n       public void methodbefore(joinpoint joinpoint){\n           //通过方法签名【方法名形参列表】，获取方法名\n           string methodname = joinpoint.getsignature().getname();\n           //获取参数\n           object[] args = joinpoint.getargs();\n           system.out.println("日志功能：执行"+methodname+"()方法之前，参数："+ arrays.tostring(args));\n       }\n   \n       /**\n        * 后置通知【在执行业务代码之后执行】\n        */\n       @after("execution(* com.viki.annotationaspectj.calcimpl.*(..))")\n       public void methodafter(joinpoint joinpoint){\n           string name = joinpoint.getsignature().getname();\n           //获取参数\n           object[] args = joinpoint.getargs();\n           system.out.println("日志功能：执行"+name+"()方法之后，参数："+ arrays.tostring(args));\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   \n   \n   * 配置\n     \n     \x3c!--开启组件扫描【使用注解】--\x3e\n     <context:component-scan base-package="com.viki.annotationaspectj"></context:component-scan>\n     \n     \x3c!--开启aspectj注解支持【自动为目标对象创建代理对象】--\x3e\n     <aop:aspectj-autoproxy></aop:aspectj-autoproxy>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     \n\n# 18.2 aop简介\n\n * aop全称：aspect-oriented programming，面向切面编程\n\n * aop是oop扩展或补充\n   \n   * oop：面向对象编程，纵向继承机制\n   * aop：面向切面编程，横向提取机制\n\n * aop术语\n   \n   * 横切关注点：非核心业务称之为横切关注点\n   \n   * 切面：将横切关注点提取类中，类称之为切面\n   \n   * 通知：将横切关注点提取到类中后，横切关注点更名为：通知\n   \n   * 目标：目标对象【calcimpl】\n   \n   * 代理：代理对象\n     \n     *   @autowired\n         private calc calc;\t// com.sun.proxy.$proxy20\n       \n       \n       1\n       2\n       \n   \n   * 连接点：先将横切关注点提取切面类中【通知】，再动态将通知织入回业务代码中；织入位置称之为，连接点。【织入之前】\n   \n   * 切入点：先将横切关注点提取切面类中【通知】，再动态将通知织入回业务代码中；织入位置称之为，连接点。【织入之后】\n\n# 18.3 aop之切入点表达式\n\n * 基本语法：\n   \n   * execution([权限修饰符] [返回值类型] [简单类名/全类名] [方法名]([参数列表类型]))\n   \n   *   execution(public int com.viki.annotationaspectj.calcimpl.add(int, int))\n       execution(* com.viki.annotationaspectj.*.*(..))\n              \n     \n     \n     1\n     2\n     3\n     \n\n * 表达式常用通配符\n   \n   【*】\n   \n     *：可以代表任意权限修饰符和返回值类型\n     \n     *：可以代表任意包|任意类全限定名\n     \n     *：可以代表任意方法名\n   \n   \n   【..】：代表任意参数类型|参数数量\n\n# 18.4 重用切入点表达式\n\n * 提取公共切入点表达式\n   \n   @pointcut("execution(* com.viki.annotationaspectj.calcimpl.*(..))")\n   public void mypointcut(){}\n   \n   \n   1\n   2\n   \n\n * 使用提取后的方法名()，作为切入点表达式\n   \n   @before("mypointcut()")\n   public void methodbefore(joinpoint joinpoint){}\n   \n   \n   1\n   2\n   \n\n\n# 19. aspectj中支持通知\n\n * 前置通知\n   \n   * 语法：@before\n   \n   * 作用：在业务代码执行之前执行，如有异常也执行。\n   \n   * 示例代码\n     \n     @pointcut("execution(* com.viki.annotationaspectj.calcimpl.*(..))")\n         public void mypointcut(){}\n     \n     @before("mypointcut()")\n     public void methodbefore(joinpoint joinpoint){\n         //通过方法签名【方法名形参列表】，获取方法名\n         string methodname = joinpoint.getsignature().getname();\n         //获取参数\n         object[] args = joinpoint.getargs();\n         system.out.println("日志功能：执行"+methodname+"()方法之前，参数："+ arrays.tostring(args));\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     \n\n * 后置通知\n   \n   * 语法：@after\n   \n   * 作用：在业务代码执行之后执行，如有异常也执行。\n   \n   * 示例代码\n     \n     /**\n      * 后置通知【在执行业务代码之后执行】\n      */\n     @after("mypointcut()")\n     public void methodafter(joinpoint joinpoint){\n         string name = joinpoint.getsignature().getname();\n         //获取参数\n         object[] args = joinpoint.getargs();\n         system.out.println("日志功能：执行"+name+"()方法之后，参数："+ arrays.tostring(args));\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     \n\n * 返回通知\n   \n   * 语法：@afterreturning\n   \n   * 作用：在业务代码返回结果后【后置通知之前】，执行。如有异常不执行。\n   \n   * 注意：返回通知要求,returning="属性值"与入参中参数名一致\n   \n   * 示例代码\n     \n     @afterreturning(value = "mypointcut()",returning = "rs")\n     public void methodreturning(joinpoint joinpoint,object rs){\n         //获取方法名称\n         string methodname = joinpoint.getsignature().getname();\n         system.out.println("日志工能【返回通知】：执行"+methodname+"()方法,返回结果rs:"+rs);\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n * 异常通知\n   \n   * 语法：@afterthrowing\n   \n   * 作用：在业务代码出现异常时【后置通知之前】执行。如有异常执行，无异常不执行。\n   \n   * 注意：异常通知要求，throwing="属性值"与参数名一致\n   \n   * 示例代码\n     \n     @afterthrowing(value = "mypointcut()",throwing = "ex")\n     public void methodthrowing(joinpoint joinpoint,exception ex){\n         //获取方法名\n         string methodname = joinpoint.getsignature().getname();\n         system.out.println("日志工能【异常通知】：执行"+methodname+"()方法,出现异常ex:"+ex);\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n * 环绕通知【前四种通知集合】\n   \n   * 语法：@around\n   \n   * 作用：将业务代码【前置|后置|返回|异常】通知，整合一处\n   \n   * 注意：环绕通知的参数，只能proceedingjoinpoint。\n   \n   * 示例代码\n     \n     @around(value = "mypointcut()")\n     public object methodaround(proceedingjoinpoint pjp){\n         object rs = null;\n         //获取方法名\n         string methodname = pjp.getsignature().getname();\n         //获取参数\n         object[] args = pjp.getargs();\n         try {\n             //前置通知\n             system.out.println("日志功能【前置通知】：执行"+methodname+"()方法之前，参数："+ arrays.tostring(args));\n             //执行目标对象的目标方法【add()】\n             rs = pjp.proceed();\n             //返回通知\n             system.out.println("日志工能【返回通知】：执行"+methodname+"()方法,返回结果rs:"+rs);\n         } catch (throwable ex) {\n             ex.printstacktrace();\n             //异常通知\n             system.out.println("日志工能【异常通知】：执行"+methodname+"()方法,出现异常ex:"+ex);\n         } finally {\n             //后置通知\n             system.out.println("日志功能【后置通知】：执行"+methodname+"()方法之后，参数："+ arrays.tostring(args));\n         }\n     \treturn rs;\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     13\n     14\n     15\n     16\n     17\n     18\n     19\n     20\n     21\n     22\n     23\n     24\n     \n\n\n# 20. spring中切面优先级\n\n * 语法：@order(value=index)，index:正整数\n\n * 作用：设置切面优先级\n   \n   * 数值越小，优先级越高\n\n * 示例代码\n   \n   //验证切面\n   @component\n   @aspect\n   @order(1)\n   public class myvalidate {}\n   \n   \n   //日志切面\n   @component  //将当前类装配ioc容器中\n   @aspect     //将当前类标识为一个切面【】\n   @order(value=2)\n   public class mylogging {}\n   \n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   \n\n\n# 21. 使用xml配置aop\n\n\x3c!--    装配bean--\x3e\n    <bean id="calc" class="com.viki.xmlaspectj.calcimpl"></bean>\n    <bean id="mylogging" class="com.viki.xmlaspectj.mylogging"></bean>\n    <bean id="myvalidate" class="com.viki.xmlaspectj.myvalidate"></bean>\n\n\x3c!--    配置aop--\x3e\n    <aop:config>\n\x3c!--        定义切入点表达式--\x3e\n        <aop:pointcut id="mypointcut" expression="execution(* com.viki.xmlaspectj.calcimpl.*(..))"/>\n            \x3c!--        配置日志切面--\x3e\n        <aop:aspect ref="mylogging" order="1">\n            \x3c!--            配置前置通知--\x3e\n            <aop:before method="methodbefore" pointcut-ref="mypointcut"></aop:before>\n            \x3c!--            配置后置通知--\x3e\n            <aop:after method="methodafter" pointcut-ref="mypointcut"></aop:after>\n            \x3c!--            配置返回通知--\x3e\n            <aop:after-returning method="methodreturning" returning="rs" pointcut-ref="mypointcut"></aop:after-returning>\n            \x3c!--            配置异常通知--\x3e\n            <aop:after-throwing method="methodthrowing" throwing="ex" pointcut-ref="mypointcut"></aop:after-throwing>\n        </aop:aspect>\n\x3c!--        配置验证切面--\x3e\n        <aop:aspect ref="myvalidate" order="2">\n            <aop:before method="beforemethodval" pointcut-ref="mypointcut"></aop:before>\n        </aop:aspect>\n    </aop:config>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n# 22. spring中jdbctemplate框架\n\n# 22.1 jdbctemplate简介\n\n * jdbctemplate是持久化层框架【类似：mybatis】\n\n# 22.2 搭建jdbctemplate步骤\n\n * 导入相关jar包\n * 编写核心配置文件\n   * 装配jdbctemplate\n * 使用jdbctemplate相应方法\n\n# 22.3 jdbctemplate常用api\n\n * update(string sql,object... params)\n   \n   * 增删改通用方法\n\n * batchupdate(string sql,list<object[]> params)\n   \n   * 批量增删改通用方法\n\n * queryforobject()\n   \n   * queryforobject(string sql,class clazz,object... params)\n     * 查询单个数值：select count(1) from table\n   * queryforobject(string sql,rowmapper<t> mapper,object... params)\n     * 查询单个对象：select col1,col2 ... from table where id=?\n\n * query(string sql,rowmapper<t> mapper,object... params)\n   \n   * 查询多个对象，通用方法\n\n\n# 23. spring中声明式事务管理【★★★】\n\n> 事务回顾\n> \n>  1. 事务四大特性【acid】\n>     * 原子性\n>     * 一致性\n>     * 隔离性\n>     * 持久性\n>  2. 事务三种行为\n>     * 开启事务：connection.setautocommit(false);\n>     * 提交事务：connection.commit();\n>     * 回滚事务：connection.rollback();\n\n# 23.1 spring中支持事务管理\n\n * 编程式事务管理\n   \n   1. 获取数据库连接connection对象\n   \n   2. 取消事务的自动提交\n   \n   3. 执行操作\n   \n   4. 正常完成操作时手动提交事务\n   \n   5. 执行失败时回滚事务\n   \n   6. 关闭相关资源\n   \n   * 总结：编程式事务管理不足，将事务管理代码【非业务代码】与业务代码书写一处，导致代码混乱和代码分散问题。\n   * 此时：需要使用aop思想【先横向提取，再动态织入】，管理事务：声明式事务管理\n\n * 声明式事务管理\n   \n   * 导入相关jar包\n     \n     * spring-aspects-5.3.1.jar\n     * com.springsource.org.aspectj.weaver-1.6.8.release.jar\n   \n   * 开启声明式事务管理支持\n     \n     \x3c!--    装配事务管理器--\x3e\n         <bean id="transactionmanager" class="org.springframework.jdbc.datasource.datasourcetransactionmanager">\n             <property name="datasource" ref="datasource"></property>\n         </bean>\n         \x3c!--    开启声明式事务管理--\x3e\n         <tx:annotation-driven transaction-manager="transactionmanager"></tx:annotation-driven>\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n   \n   * 在需要事务管理的方法或类上，添加@transactional\n\n# 23.2 不使用事务管理问题\n\n * 案例：以买书为例\n   \n   /**\n        * 买书->查询book价格->修改库存->修改余额\n        * @param userid\n        * @param isbn\n        */\n   @override\n   public void purchase(string userid, string isbn) {\n       //1.查询book价格\n       integer price = bookshopdao.getbookpricebyisbn(isbn);\n       //2.修改库存\n       bookshopdao.updatebookstock(isbn);\n       //3.修改余额\n       bookshopdao.updateuserbalance(userid,price);\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   \n   * purchase()方法中三个步骤，应该使用事务管理\n   * 如不使用事务管理，可能出现【修改库存，但未修改余额】问题\n\n# 23.3 声明式事务管理的示例代码\n\n * xml配置\n   \n   \x3c!--    装配事务管理器--\x3e\n       <bean id="transactionmanager" class="org.springframework.jdbc.datasource.datasourcetransactionmanager">\n           <property name="datasource" ref="datasource"></property>\n       </bean>\n       \x3c!--    开启声明式事务管理--\x3e\n   \x3c!--    <tx:annotation-driven transaction-manager="transactionmanager"></tx:annotation-driven>--\x3e\n       <tx:annotation-driven></tx:annotation-driven>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * java业务代码\n   \n   @transactional\n   public void purchase(string userid, string isbn) {\n       //1.查询book价格\n       integer price = bookshopdao.getbookpricebyisbn(isbn);\n       //2.修改库存\n       bookshopdao.updatebookstock(isbn);\n       //3.修改余额\n       bookshopdao.updateuserbalance(userid,price);\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * java测试代码\n   \n   @test\n       public void testbookshopservice(){\n           applicationcontext context =\n                   new classpathxmlapplicationcontext("applicationcontext_transaction.xml");\n   \n           //事务声明式事务管理【不能使用bookshopserviceimpl接收，原因代码对象与目标对象是兄弟关系】\n   //        bookshopserviceimpl bookshopservice = context.getbean("bookshopservice", bookshopserviceimpl.class);\n           bookshopservice bookshopservice = context.getbean("bookshopservice", bookshopservice.class);\n   \n           bookshopservice.purchase("101","1002");\n       }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   \n\n# 23.4 spring声明式事务管理中属性\n\n * 事务传播行为\n   \n   * 语法：propagation=propagation.required【默认值】\n   \n   * 概述：当事务方法被另一个事务方法调用时，必须指定事务应该如何传播。例如：方法可能继续在现有事务中运行，也可能开启一个新事务，并在自己的事务中运行。\n   \n   * 7种事务传播行为\n     \n     传播属性            描述\n     required        如果有事务在运行，当前的方法就在这个事务内运行；否则就启动一个新的事务，并在自己的事务内运行。\n     requires_new    当前的方法****必须****启动新事务，并在自己的事务内运行；如果有事务正在运行，应该将它挂起。\n     supports        如果有事务在运行，当前的方法就在这个事务内运行，否则可以不运行在事务中。\n     not_supported   当前的方法不应该运行在事务中，如果有运行的事务将它挂起\n     mandatory       当前的方法必须运行在事务中，如果没有正在运行的事务就抛出异常。\n     never           当前的方法不应该运行在事务中，如果有正在运行的事务就抛出异常。\n     nested          如果有事务正在运行，当前的方法就应该在这个事务的嵌套事务内运行，否则就启动一个新的事务，并在它自己的事务内运行。\n\n * 事务隔离级别\n   \n   * 语法：isolation=isolation.\n   \n   * 概述：一个事务与其他事务隔离的程度称为隔离级别。\n   \n   * 四种隔离级别\n     \n                           脏读   不可重复读   幻读\n     read uncommitted【1】   有    有       有\n     read committed【2】     无    有       有\n     repeatable read【4】    无    无       有\n     serializable【8】       无    无       无\n     \n                        oracle   mysql\n     read uncommitted   ×        √\n     read committed     √(默认)    √\n     repeatable read    ×        √(默认)\n     serializable       √        √\n\n * 事务超时\n   \n   * timeout：超时事务属性可以设置事务在强制回滚之前可以保持多久。这样可以防止长期运行的事务占用资源。\n\n * 事务只读\n   \n   * readonly：只读事务属性可以设置这个事务只读取数据但不更新数据, 这样可以帮助数据库引擎优化事务。\n\n * 事务异常回滚【不回滚】\n   \n   * norollbackfor：设置指定不回滚的异常类型\n\n * 示例代码\n   \n   @transactional(propagation = propagation.requires_new,\n           isolation = isolation.read_committed,\n           timeout = 3,\n           norollbackfor = arithmeticexception.class)\n   public void purchase(string userid, string isbn) {\n       //1.查询book价格\n       integer price = bookshopdao.getbookpricebyisbn(isbn);\n       system.out.println("price = " + price);\n   \n       integer price2 = bookshopdao.getbookpricebyisbn(isbn);\n       system.out.println("price2 = " + price2);\n   \n       try {\n           int i = 1/0;\n       } catch (exception e) {\n           e.printstacktrace();\n       }\n   \n       /*\n       try {\n           thread.sleep(5000);\n       } catch (interruptedexception e) {\n           e.printstacktrace();\n       }\n        */\n   \n       //2.修改库存\n       bookshopdao.updatebookstock(isbn);\n       //3.修改余额\n       bookshopdao.updateuserbalance(userid,price);\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   \n\n# 23.5 基于xml方式配置声明式事务\n\n<?xml version="1.0" encoding="utf-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n       xmlns:xsi="http://www.w3.org/2001/xmlschema-instance"\n       xmlns:context="http://www.springframework.org/schema/context"\n       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"\n       xsi:schemalocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">\n\n    \x3c!--引入外部属性文件--\x3e\n    <context:property-placeholder location="classpath:druid.properties"></context:property-placeholder>\n\n    \x3c!--配置数据源--\x3e\n    <bean id="datasource" class="com.alibaba.druid.pool.druiddatasource">\n         <property name="username" value="${jdbc.username}"></property>\n        <property name="password" value="${jdbc.password}"></property>\n        <property name="url" value="${jdbc.url}"></property>\n        <property name="driverclassname" value="${jdbc.driverclassname}"></property>\n        <property name="initialsize" value="${jdbc.initialsize}"></property>\n        <property name="maxactive" value="${jdbc.maxactive}"></property>\n    </bean>\n\n    \x3c!--配置jdbctemplate--\x3e\n    <bean id="jdbctemplate" class="org.springframework.jdbc.core.jdbctemplate">\n        \x3c!--配置数据源属性--\x3e\n        <property name="datasource" ref="datasource"></property>\n    </bean>\n\n    \x3c!--配置bookshopdaoimpl--\x3e\n    <bean id="bookshopdao" class="com.viki.spring.tx.xml.bookshopdaoimpl">\n        <property name="jdbctemplate" ref="jdbctemplate"></property>\n    </bean>\n\n    \x3c!--配置bookshopserviceimpl--\x3e\n    <bean id="bookshopservice" class="com.viki.spring.tx.xml.bookshopserviceimpl">\n        <property name="bookshopdao" ref="bookshopdao"></property>\n    </bean>\n\n    \x3c!--配置事务管理器--\x3e\n    <bean id="transactionmanager" class="org.springframework.jdbc.datasource.datasourcetransactionmanager">\n        \x3c!--配置数据源属性--\x3e\n        <property name="datasource" ref="datasource"></property>\n    </bean>\n    \x3c!--配置声明式事务--\x3e\n    <tx:advice id="tx" transaction-manager="transactionmanager">\n        \x3c!--设置添加事务的方法--\x3e\n        <tx:attributes>\n            \x3c!--设置查询的方法的只读属性为true--\x3e\n            <tx:method name="find*" read-only="true"/>\n            <tx:method name="get*" read-only="true"/>\n            <tx:method name="purchase" propagation="requires_new" isolation="read_committed"></tx:method>\n        </tx:attributes>\n    </tx:advice>\n    \x3c!--aop配置--\x3e\n    <aop:config>\n        \x3c!--配置切入点表达式--\x3e\n        <aop:pointcut id="pointcut"          expression="execution(*com.viki.spring.tx.xml.bookshopserviceimpl.purchase(..))"/>\n        \x3c!--将事务方法和切入点表达式关联起来--\x3e\n        <aop:advisor advice-ref="tx" pointcut-ref="pointcut"></aop:advisor>\n    </aop:config>\n</beans>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n\n\n\n# 24. spring5新特性\n\n# 24.1 spring整合log4j2\n\n * 导入jar包\n   \n   <dependency>\n       <groupid>org.apache.logging.log4j</groupid>\n       <artifactid>log4j-slf4j-impl</artifactid>\n       <version>2.11.2</version>\n       <scope>test</scope>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 编写配置文件\n   \n   <?xml version="1.0" encoding="utf-8"?>\n   \x3c!--日志级别以及优先级排序: off > fatal > error > warn > info > debug > trace > all --\x3e\n   \x3c!--configuration后面的status用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，可以看到log4j2内部各种详细输出--\x3e\n   <configuration status="info">\n       \x3c!--先定义所有的appender--\x3e\n       <appenders>\n           \x3c!--输出日志信息到控制台--\x3e\n           <console name="console" target="system_out">\n               \x3c!--控制日志输出的格式--\x3e\n               <patternlayout pattern="%d{yyyy-mm-dd hh:mm:ss.sss} [%t] %-5level %logger{36} - %msg%n"/>\n           </console>\n       </appenders>\n       \x3c!--然后定义logger，只有定义了logger并引入的appender，appender才会生效--\x3e\n       \x3c!--root：用于指定项目的根日志，如果没有单独指定logger，则会使用root作为默认的日志输出--\x3e\n       <loggers>\n           <root level="debug">\n               <appender-ref ref="console"/>\n           </root>\n       </loggers>\n   </configuration>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n# 24.2 spring整合junit5\n\n * 导入jar包\n\n * 编写配置文件\n\n * 在测试类中添加注解\n   \n   //@extendwith(springextension.class)\n   //@contextconfiguration(locations = "classpath:applicationcontext_transaction.xml")\n   @springjunitconfig(locations = "classpath:applicationcontext_transaction.xml")\n   public class testjunit5 {\n       @autowired\n       private bookshopdao bookshopdao;\n       @test\n       public void testjunit5(){\n           integer bookpricebyisbn = bookshopdao.getbookpricebyisbn("1001");\n           system.out.println("bookpricebyisbn = " + bookpricebyisbn);\n       }\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   ',charsets:{cjk:!0}},{title:"源码备注",frontmatter:{title:"源码备注",date:"2022-01-25T12:29:26.000Z",permalink:"/pages/8a16ee/",categories:["Spring系列","Spring"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/10.Spring/50.%E6%BA%90%E7%A0%81%E5%A4%87%E6%B3%A8.html",relativePath:"35.Spring系列/10.Spring/50.源码备注.md",key:"v-e71b2536",path:"/pages/8a16ee/",headers:[{level:2,title:"Spring源码查看记录",slug:"spring源码查看记录",normalizedTitle:"spring源码查看记录",charIndex:2},{level:3,title:"BeanFactory",slug:"beanfactory",normalizedTitle:"beanfactory",charIndex:52},{level:3,title:"BeanDefination",slug:"beandefination",normalizedTitle:"beandefination",charIndex:1504}],headersStr:"Spring源码查看记录 BeanFactory BeanDefination",content:'# Spring源码查看记录\n\nspring-beans-5.2.11.RELEASE.jar\n\n\n# BeanFactory\n\npackage org.springframework.beans.factory;\n\nimport org.springframework.beans.BeansException;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\npublic interface BeanFactory {\n\n\tString FACTORY_BEAN_PREFIX = "&";\n\n\tObject getBean(String name) throws BeansException;\n\t<T> T getBean(String name, Class<T> requiredType) throws BeansException;\n\tObject getBean(String name, Object... args) throws BeansException;\n\t<T> T getBean(Class<T> requiredType) throws BeansException;\n\t<T> T getBean(Class<T> requiredType, Object... args) throws BeansException;\n    \n\t<T> ObjectProvider<T> getBeanProvider(Class<T> requiredType);\n\t<T> ObjectProvider<T> getBeanProvider(ResolvableType requiredType);\n\n\tboolean containsBean(String name);\n    \n\tboolean isSingleton(String name) throws NoSuchBeanDefinitionException;\n\tboolean isPrototype(String name) throws NoSuchBeanDefinitionException;\n\n\tboolean isTypeMatch(String name, ResolvableType typeToMatch) throws NoSuchBeanDefinitionException;\n\tboolean isTypeMatch(String name, Class<?> typeToMatch) throws NoSuchBeanDefinitionException;\n\n\t@Nullable\n\tClass<?> getType(String name) throws NoSuchBeanDefinitionException;\n\n\t@Nullable\n\tClass<?> getType(String name, boolean allowFactoryBeanInit) throws NoSuchBeanDefinitionException;\n\n\tString[] getAliases(String name);\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# BeanDefination\n\npackage org.springframework.beans.factory.config;\n\nimport org.springframework.beans.BeanMetadataElement;\nimport org.springframework.beans.MutablePropertyValues;\nimport org.springframework.core.AttributeAccessor;\nimport org.springframework.core.ResolvableType;\nimport org.springframework.lang.Nullable;\n\n/**\n * A BeanDefinition describes a bean instance, which has property values,\n * constructor argument values, and further information supplied by\n * concrete implementations.\n */\npublic interface BeanDefinition extends AttributeAccessor, BeanMetadataElement {\n\n    String SCOPE_SINGLETON = ConfigurableBeanFactory.SCOPE_SINGLETON;\n\n    String SCOPE_PROTOTYPE = ConfigurableBeanFactory.SCOPE_PROTOTYPE;\n\n    int ROLE_APPLICATION = 0;\n\n    int ROLE_SUPPORT = 1;\n\n    int ROLE_INFRASTRUCTURE = 2;\n\n    void setParentName(@Nullable String parentName);\n\n    @Nullable\n    String getParentName();\n\n    void setBeanClassName(@Nullable String beanClassName);\n\n    @Nullable\n    String getBeanClassName();\n\n    void setScope(@Nullable String scope);\n\n    @Nullable\n    String getScope();\n\n    void setLazyInit(boolean lazyInit);\n\n    boolean isLazyInit();\n\n    void setDependsOn(@Nullable String... dependsOn);\n\n    @Nullable\n    String[] getDependsOn();\n\n    void setAutowireCandidate(boolean autowireCandidate);\n\n    boolean isAutowireCandidate();\n\n    void setPrimary(boolean primary);\n\n    boolean isPrimary();\n\n    void setFactoryBeanName(@Nullable String factoryBeanName);\n\n    @Nullable\n    String getFactoryBeanName();\n\n    void setFactoryMethodName(@Nullable String factoryMethodName);\n\n    @Nullable\n    String getFactoryMethodName();\n\n    ConstructorArgumentValues getConstructorArgumentValues();\n\n    default boolean hasConstructorArgumentValues() {\n        return !getConstructorArgumentValues().isEmpty();\n    }\n\n    MutablePropertyValues getPropertyValues();\n\n    default boolean hasPropertyValues() {\n        return !getPropertyValues().isEmpty();\n    }\n\n    void setInitMethodName(@Nullable String initMethodName);\n\n    @Nullable\n    String getInitMethodName();\n\n    void setDestroyMethodName(@Nullable String destroyMethodName);\n\n    @Nullable\n    String getDestroyMethodName();\n\n    void setRole(int role);\n\n    int getRole();\n\n    void setDescription(@Nullable String description);\n\n    @Nullable\n    String getDescription();\n\n    ResolvableType getResolvableType();\n\n    boolean isSingleton();\n\n    boolean isPrototype();\n\n    boolean isAbstract();\n\n    @Nullable\n    String getResourceDescription();\n\n    @Nullable\n    BeanDefinition getOriginatingBeanDefinition();\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n',normalizedContent:'# spring源码查看记录\n\nspring-beans-5.2.11.release.jar\n\n\n# beanfactory\n\npackage org.springframework.beans.factory;\n\nimport org.springframework.beans.beansexception;\nimport org.springframework.core.resolvabletype;\nimport org.springframework.lang.nullable;\n\npublic interface beanfactory {\n\n\tstring factory_bean_prefix = "&";\n\n\tobject getbean(string name) throws beansexception;\n\t<t> t getbean(string name, class<t> requiredtype) throws beansexception;\n\tobject getbean(string name, object... args) throws beansexception;\n\t<t> t getbean(class<t> requiredtype) throws beansexception;\n\t<t> t getbean(class<t> requiredtype, object... args) throws beansexception;\n    \n\t<t> objectprovider<t> getbeanprovider(class<t> requiredtype);\n\t<t> objectprovider<t> getbeanprovider(resolvabletype requiredtype);\n\n\tboolean containsbean(string name);\n    \n\tboolean issingleton(string name) throws nosuchbeandefinitionexception;\n\tboolean isprototype(string name) throws nosuchbeandefinitionexception;\n\n\tboolean istypematch(string name, resolvabletype typetomatch) throws nosuchbeandefinitionexception;\n\tboolean istypematch(string name, class<?> typetomatch) throws nosuchbeandefinitionexception;\n\n\t@nullable\n\tclass<?> gettype(string name) throws nosuchbeandefinitionexception;\n\n\t@nullable\n\tclass<?> gettype(string name, boolean allowfactorybeaninit) throws nosuchbeandefinitionexception;\n\n\tstring[] getaliases(string name);\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n\n\n\n# beandefination\n\npackage org.springframework.beans.factory.config;\n\nimport org.springframework.beans.beanmetadataelement;\nimport org.springframework.beans.mutablepropertyvalues;\nimport org.springframework.core.attributeaccessor;\nimport org.springframework.core.resolvabletype;\nimport org.springframework.lang.nullable;\n\n/**\n * a beandefinition describes a bean instance, which has property values,\n * constructor argument values, and further information supplied by\n * concrete implementations.\n */\npublic interface beandefinition extends attributeaccessor, beanmetadataelement {\n\n    string scope_singleton = configurablebeanfactory.scope_singleton;\n\n    string scope_prototype = configurablebeanfactory.scope_prototype;\n\n    int role_application = 0;\n\n    int role_support = 1;\n\n    int role_infrastructure = 2;\n\n    void setparentname(@nullable string parentname);\n\n    @nullable\n    string getparentname();\n\n    void setbeanclassname(@nullable string beanclassname);\n\n    @nullable\n    string getbeanclassname();\n\n    void setscope(@nullable string scope);\n\n    @nullable\n    string getscope();\n\n    void setlazyinit(boolean lazyinit);\n\n    boolean islazyinit();\n\n    void setdependson(@nullable string... dependson);\n\n    @nullable\n    string[] getdependson();\n\n    void setautowirecandidate(boolean autowirecandidate);\n\n    boolean isautowirecandidate();\n\n    void setprimary(boolean primary);\n\n    boolean isprimary();\n\n    void setfactorybeanname(@nullable string factorybeanname);\n\n    @nullable\n    string getfactorybeanname();\n\n    void setfactorymethodname(@nullable string factorymethodname);\n\n    @nullable\n    string getfactorymethodname();\n\n    constructorargumentvalues getconstructorargumentvalues();\n\n    default boolean hasconstructorargumentvalues() {\n        return !getconstructorargumentvalues().isempty();\n    }\n\n    mutablepropertyvalues getpropertyvalues();\n\n    default boolean haspropertyvalues() {\n        return !getpropertyvalues().isempty();\n    }\n\n    void setinitmethodname(@nullable string initmethodname);\n\n    @nullable\n    string getinitmethodname();\n\n    void setdestroymethodname(@nullable string destroymethodname);\n\n    @nullable\n    string getdestroymethodname();\n\n    void setrole(int role);\n\n    int getrole();\n\n    void setdescription(@nullable string description);\n\n    @nullable\n    string getdescription();\n\n    resolvabletype getresolvabletype();\n\n    boolean issingleton();\n\n    boolean isprototype();\n\n    boolean isabstract();\n\n    @nullable\n    string getresourcedescription();\n\n    @nullable\n    beandefinition getoriginatingbeandefinition();\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n',charsets:{cjk:!0}},{title:"常用注解",frontmatter:{title:"常用注解",date:"2022-01-24T15:12:00.000Z",permalink:"/pages/89cf77/",categories:["Spring系列","SpringMVC"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/20.SpringMVC/20.%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html",relativePath:"35.Spring系列/20.SpringMVC/20.常用注解.md",key:"v-54c34bd8",path:"/pages/89cf77/",headers:[{level:2,title:"SpringMVC常用注解归档",slug:"springmvc常用注解归档",normalizedTitle:"springmvc常用注解归档",charIndex:2},{level:3,title:"@RequestMapping",slug:"requestmapping",normalizedTitle:"@requestmapping",charIndex:22},{level:3,title:"@PathVariable",slug:"pathvariable",normalizedTitle:"@pathvariable",charIndex:341},{level:3,title:"RESTful风格",slug:"restful风格",normalizedTitle:"restful风格",charIndex:559},{level:3,title:"@RequestParam",slug:"requestparam",normalizedTitle:"@requestparam",charIndex:619},{level:3,title:"@RequestHeader",slug:"requestheader",normalizedTitle:"@requestheader",charIndex:876},{level:3,title:"@CookieValue",slug:"cookievalue",normalizedTitle:"@cookievalue",charIndex:1098},{level:3,title:"@RequestBody",slug:"requestbody",normalizedTitle:"@requestbody",charIndex:1321},{level:3,title:"@ResponseBody",slug:"responsebody",normalizedTitle:"@responsebody",charIndex:1430}],headersStr:"SpringMVC常用注解归档 @RequestMapping @PathVariable RESTful风格 @RequestParam @RequestHeader @CookieValue @RequestBody @ResponseBody",content:"# SpringMVC常用注解归档\n\n\n# @RequestMapping\n\n用途\n\n> 处理请求映射\n> \n> 作用在 类(提取公共路径)/方法\n\n参数\n\n> value\n> \n>  * 用来设置要映射的请求地址\n> \n> path\n> \n>  * 与value属性作用一致\n> \n> method\n> \n>  * 设置当前方法的请求方式【GET|POST|PUT|DELETE】如请求方式不支持，会报错：405\n> \n> params\n> \n>  * 设置当前方法的请求参数【必须携带指定参数，才可以访问当前方法】如未携带指定参数会报错，400\n> \n> headers\n> \n>  * 设置当前方法的请求头信息【必须携带指定请求头】如未携带指定请求头，会报错：404\n\n\n# @PathVariable\n\n用途\n\n> 将占位符中参数，注入处理请求方法的形参中，要求形参与参数名一致。\n\n参数\n\n> value\n> \n>  * 设置入参参数名\n> \n> name\n> \n>  * 与value属性一致\n> \n> required\n> \n>  * 设置当前参数是否必须入参\n>  * true【默认值】：必须入参，如不入参会报错：500\n>  * false：必须入参，如不入参不会报错，会将null值注入\n\n\n# RESTful风格\n\n> 增 POST\n> \n> 删 DELETE\n> \n> 改 PUT\n> \n> 查 GET\n\n\n# @RequestParam\n\n用途\n\n> 当参数名与处理请求方法中形参名一致时，SpringMVC可以实现自动入参\n\n参数\n\n> value\n> \n>  * 设置入参参数名\n> \n> name\n> \n>  * 与value属性作用一致\n> \n> required\n> \n>  * true【默认值】：必须入参，如未入参会报错：400\n>  * false：不必须入参，如未入参，会将null值注入【建议使用包装类】\n> \n> defaultValue\n> \n>  * 只要未入参，就会为指定参数设置默认值\n\n\n# @RequestHeader\n\n用途\n\n> 获取请求头内容\n\n参数\n\n> value\n> \n>  * 设置获取请求头参数名称\n> \n> name\n> \n>  * 与value作用一致\n> \n> required\n> \n>  * 设置当前请求头是否必须入参\n> \n>  * true【默认值】：必须入参\n>  * false：不必须入参\n> \n> defaultValue：设置默认值\n> \n>  * 如有未入参请求头，则设置当前默认值\n\n\n# @CookieValue\n\n用途\n\n> 获取Cookie内容\n\n参数\n\n> value：设置获取CookieValue参数名称\n> \n> name：与value作用一致\n> \n> required：设置当前CookieValue是否必须入参\n> \n>  * true【默认值】：必须入参\n>  * false：不必须入参\n> \n> defaultValue：设置默认值\n> \n>  * 如有未入参CookieValue，则设置当前默认值\n\n\n# @RequestBody\n\n用途\n\n> 处理请求数据\n\n参数\n\n> required：设置当前RequestBody是否必须入参\n> \n>  * true【默认值】：必须入参\n>  * false：不必须入参\n\n\n# @ResponseBody\n\n用途\n\n> 处理响应数据",normalizedContent:"# springmvc常用注解归档\n\n\n# @requestmapping\n\n用途\n\n> 处理请求映射\n> \n> 作用在 类(提取公共路径)/方法\n\n参数\n\n> value\n> \n>  * 用来设置要映射的请求地址\n> \n> path\n> \n>  * 与value属性作用一致\n> \n> method\n> \n>  * 设置当前方法的请求方式【get|post|put|delete】如请求方式不支持，会报错：405\n> \n> params\n> \n>  * 设置当前方法的请求参数【必须携带指定参数，才可以访问当前方法】如未携带指定参数会报错，400\n> \n> headers\n> \n>  * 设置当前方法的请求头信息【必须携带指定请求头】如未携带指定请求头，会报错：404\n\n\n# @pathvariable\n\n用途\n\n> 将占位符中参数，注入处理请求方法的形参中，要求形参与参数名一致。\n\n参数\n\n> value\n> \n>  * 设置入参参数名\n> \n> name\n> \n>  * 与value属性一致\n> \n> required\n> \n>  * 设置当前参数是否必须入参\n>  * true【默认值】：必须入参，如不入参会报错：500\n>  * false：必须入参，如不入参不会报错，会将null值注入\n\n\n# restful风格\n\n> 增 post\n> \n> 删 delete\n> \n> 改 put\n> \n> 查 get\n\n\n# @requestparam\n\n用途\n\n> 当参数名与处理请求方法中形参名一致时，springmvc可以实现自动入参\n\n参数\n\n> value\n> \n>  * 设置入参参数名\n> \n> name\n> \n>  * 与value属性作用一致\n> \n> required\n> \n>  * true【默认值】：必须入参，如未入参会报错：400\n>  * false：不必须入参，如未入参，会将null值注入【建议使用包装类】\n> \n> defaultvalue\n> \n>  * 只要未入参，就会为指定参数设置默认值\n\n\n# @requestheader\n\n用途\n\n> 获取请求头内容\n\n参数\n\n> value\n> \n>  * 设置获取请求头参数名称\n> \n> name\n> \n>  * 与value作用一致\n> \n> required\n> \n>  * 设置当前请求头是否必须入参\n> \n>  * true【默认值】：必须入参\n>  * false：不必须入参\n> \n> defaultvalue：设置默认值\n> \n>  * 如有未入参请求头，则设置当前默认值\n\n\n# @cookievalue\n\n用途\n\n> 获取cookie内容\n\n参数\n\n> value：设置获取cookievalue参数名称\n> \n> name：与value作用一致\n> \n> required：设置当前cookievalue是否必须入参\n> \n>  * true【默认值】：必须入参\n>  * false：不必须入参\n> \n> defaultvalue：设置默认值\n> \n>  * 如有未入参cookievalue，则设置当前默认值\n\n\n# @requestbody\n\n用途\n\n> 处理请求数据\n\n参数\n\n> required：设置当前requestbody是否必须入参\n> \n>  * true【默认值】：必须入参\n>  * false：不必须入参\n\n\n# @responsebody\n\n用途\n\n> 处理响应数据",charsets:{cjk:!0}},{title:"SpringMVC笔记",frontmatter:{title:"SpringMVC笔记",date:"2022-01-24T15:09:14.000Z",permalink:"/pages/35de30/",categories:["Spring系列","SpringMVC"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/20.SpringMVC/10.SpringMVC%E7%AC%94%E8%AE%B0.html",relativePath:"35.Spring系列/20.SpringMVC/10.SpringMVC笔记.md",key:"v-efed3fb6",path:"/pages/35de30/",headers:[{level:2,title:"SpringMVC",slug:"springmvc",normalizedTitle:"springmvc",charIndex:2},{level:3,title:"1. SpringMVC简介",slug:"_1-springmvc简介",normalizedTitle:"1. springmvc简介",charIndex:16},{level:3,title:"2. SpringMVC之Helloworld",slug:"_2-springmvc之helloworld",normalizedTitle:"2. springmvc之helloworld",charIndex:237},{level:3,title:"3. SpringMVC基本工作原理",slug:"_3-springmvc基本工作原理",normalizedTitle:"3. springmvc基本工作原理",charIndex:4658},{level:3,title:"4. SpringMVC中@RequestMapping注解详讲",slug:"_4-springmvc中-requestmapping注解详讲",normalizedTitle:"4. springmvc中@requestmapping注解详讲",charIndex:4928},{level:3,title:"5 @PathVariable注解",slug:"_5-pathvariable注解",normalizedTitle:"5 @pathvariable注解",charIndex:6904},{level:3,title:"6. REST简介",slug:"_6-rest简介",normalizedTitle:"6. rest简介",charIndex:7103},{level:3,title:"7. SpringMVC处理请求数据",slug:"_7-springmvc处理请求数据",normalizedTitle:"7. springmvc处理请求数据",charIndex:10850},{level:3,title:"8. SpringMVC中解决【请求与响应】乱码问题",slug:"_8-springmvc中解决【请求与响应】乱码问题",normalizedTitle:"8. springmvc中解决【请求与响应】乱码问题",charIndex:14131},{level:3,title:"9. SpringMVC中处理响应数据",slug:"_9-springmvc中处理响应数据",normalizedTitle:"9. springmvc中处理响应数据",charIndex:15855},{level:3,title:"10. 视图【View】和视图解析器【ViewResolver】对象",slug:"_10-视图【view】和视图解析器【viewresolver】对象",normalizedTitle:"10. 视图【view】和视图解析器【viewresolver】对象",charIndex:17795},{level:3,title:"11. mvc:view-controller标签",slug:"_11-mvc-view-controller标签",normalizedTitle:"11. mvc:view-controller标签",charIndex:17951},{level:3,title:"12. SpringMVC重定向及静态资源加载问题",slug:"_12-springmvc重定向及静态资源加载问题",normalizedTitle:"12. springmvc重定向及静态资源加载问题",charIndex:18231},{level:3,title:"13. 消息转换器【HttpMessageConverter】",slug:"_13-消息转换器【httpmessageconverter】",normalizedTitle:"13. 消息转换器【httpmessageconverter】",charIndex:18814},{level:3,title:"14. SpringMVC中使用HttpMessageConverter处理Json数据",slug:"_14-springmvc中使用httpmessageconverter处理json数据",normalizedTitle:"14. springmvc中使用httpmessageconverter处理json数据",charIndex:21922},{level:3,title:"15. mvc:annotation-driven主要作用",slug:"_15-mvc-annotation-driven主要作用",normalizedTitle:"15. mvc:annotation-driven主要作用",charIndex:22802},{level:3,title:"16. SpringMVC实现文件上传",slug:"_16-springmvc实现文件上传",normalizedTitle:"16. springmvc实现文件上传",charIndex:23409},{level:3,title:"17. SpringMVC拦截器",slug:"_17-springmvc拦截器",normalizedTitle:"17. springmvc拦截器",charIndex:26026}],headersStr:"SpringMVC 1. SpringMVC简介 2. SpringMVC之Helloworld 3. SpringMVC基本工作原理 4. SpringMVC中@RequestMapping注解详讲 5 @PathVariable注解 6. REST简介 7. SpringMVC处理请求数据 8. SpringMVC中解决【请求与响应】乱码问题 9. SpringMVC中处理响应数据 10. 视图【View】和视图解析器【ViewResolver】对象 11. mvc:view-controller标签 12. SpringMVC重定向及静态资源加载问题 13. 消息转换器【HttpMessageConverter】 14. SpringMVC中使用HttpMessageConverter处理Json数据 15. mvc:annotation-driven主要作用 16. SpringMVC实现文件上传 17. SpringMVC拦截器",content:'# SpringMVC\n\n\n# 1. SpringMVC简介\n\n * SpringMVC是Spring子框架\n * Spring MVC属于SpringFrameWork的后续产品，是Spring 为展现层提供的基于 MVC 设计理念的优秀的 Web 框架，是目前最主流的MVC 框架。\n   * MVC设计模式：Model View Controller【数据模型、视图对象、控制器（处理器）】，主要：将封装数据模型，封装视图对象、协调调度控制器（处理器）解耦。\n\n\n# 2. SpringMVC之Helloworld\n\n 1. 新建web工程\n\n 2. 导入jar包\n    \n    \x3c!--spring-webmvc--\x3e\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-webmvc</artifactId>\n        <version>5.3.1</version>\n    </dependency>\n    \x3c!-- 导入thymeleaf与spring5的整合包 --\x3e\n    <dependency>\n        <groupId>org.thymeleaf</groupId>\n        <artifactId>thymeleaf-spring5</artifactId>\n        <version>3.0.12.RELEASE</version>\n    </dependency>\n    <dependency>\n        <groupId>javax.servlet</groupId>\n        <artifactId>javax.servlet-api</artifactId>\n        <version>4.0.1</version>\n        <scope>provided</scope>\n    </dependency>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    \n\n 3. 在web.xml配置前端控制器【核心控制器】：DispatcherServlet\n    \n    *   <servlet>\n            <servlet-name>DispatcherServlet</servlet-name>\n            <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n            \x3c!--        设置springmvc核心配置文件路径--\x3e\n            <init-param>\n                <param-name>contextConfigLocation</param-name>\n                <param-value>classpath:springmvc.xml</param-value>\n            </init-param>\n            \x3c!--        设置Servlet优先级：启动服务器，创建当前DispatcherServlet--\x3e\n            <load-on-startup>1</load-on-startup>\n        </servlet>\n        <servlet-mapping>\n            <servlet-name>DispatcherServlet</servlet-name>\n            \x3c!--   匹配当前项目下，除了jsp的所有路径--\x3e\n            <url-pattern>/</url-pattern>\n        </servlet-mapping>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      \n    \n    * URL配置为：/【原因：tomcat->conf->web.xml如下配置】\n      \n      \x3c!-- The mapping for the default servlet --\x3e\n          <servlet-mapping>\n              <servlet-name>default</servlet-name>\n              <url-pattern>/</url-pattern>\n          </servlet-mapping>\n      \n          \x3c!-- The mappings for the JSP servlet --\x3e\n          <servlet-mapping>\n              <servlet-name>jsp</servlet-name>\n              <url-pattern>*.jsp</url-pattern>\n              <url-pattern>*.jspx</url-pattern>\n          </servlet-mapping>\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      \n\n 4. 编写springMVC配置文件：springmvc.xml\n    \n    *   \x3c!--    开启组件扫描--\x3e\n        <context:component-scan base-package="com.viki"></context:component-scan>\n        \x3c!--    装配视图解析器\n                    配置视图\n                        前缀：/WEB-INF/pages/\n                        后缀：.html\n        --\x3e\n        <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">\n            \x3c!--        设置UTF-8字符集--\x3e\n            <property name="characterEncoding" value="UTF-8"></property>\n            \x3c!--配置模板引擎属性--\x3e\n            <property name="templateEngine">\n                \x3c!--配置内部bean--\x3e\n                <bean class="org.thymeleaf.spring5.SpringTemplateEngine">\n                    \x3c!--配置模块的解析器属性--\x3e\n                    <property name="templateResolver">\n                        \x3c!--配置内部bean--\x3e\n                        <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">\n                            \x3c!--配置前缀--\x3e\n                            <property name="prefix" value="/WEB-INF/pages/"></property>\n                            \x3c!--配置后缀--\x3e\n                            <property name="suffix" value=".html"></property>\n                            \x3c!--配置字符集--\x3e\n                            <property name="characterEncoding" value="UTF-8"></property>\n                        </bean>\n                    </property>\n                </bean>\n            </property>\n        </bean>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      \n\n 5. 编写请求处理器【Controller|Handler】\n    \n    *   @Controller     //springMVC中装配控制器，只能使用@Controller注解\n        public class HelloController {\n        \n            @RequestMapping("/index.html")\n            public String toIndex(){\n                return "index";\n            }\n        \n        }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      \n\n 6. 测试\n\n\n# 3. SpringMVC基本工作原理\n\n * 发送请求：<a th:href="@{/helloController}">helloController</a>\n * 通过前端控制器【DispatcherServlet】，将请求委托给请求处理器【Controller】\n * 调用业务层代码，返回数据模型【视图对象】，springMVC底层最终封装为ModelAndView对象\n * 通过前端控制器【DispatcherServlet】将ModelAndView中View对象解析出来\n * 做出响应【路径跳转（转发|重定向）】\n\n\n# 4. SpringMVC中@RequestMapping注解详讲\n\n# 4.1 @RequestMapping注解书写位置\n\n * 书写在类上面\n   * 不能单独使用，需要配合方法使用\n   * 相当于将所有方法路径，提取到类中\n * 书写在方法上面\n   * 可以单独使用\n   * 为指定方法映射URL\n\n# 4.2 @RequestMapping注解中属性\n\n * value属性\n   \n   * 类型：String[]\n   * 作用：用来设置要映射的请求地址\n\n * path属性\n   \n   * 类型：String[]\n   \n   * 作用：与value属性作用一致\n   \n   * 示例代码\n     \n     @RequestMapping(path="/")\n     public String toIndex(){\n         return "index";\n     }\n     @RequestMapping(value={"/helloController","/hc"})\n     public String hController(){\n         //跳转success页面\n         System.out.println("跳转到success页面！");\n         //success是逻辑视图名\n         //物理视图名：/WEB-INF/pages/success.html\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     \n\n * method属性\n   \n   * 类型：RequestMethod[]，RequestMethod是一个枚举类型\n   \n   * 作用：设置当前方法的请求方式【GET|POST|PUT|DELETE】\n   \n   * 示例代码\n     \n     /**\n      * 测试method\n      * @return\n      */\n     @RequestMapping(value = "/testMethod",method = RequestMethod.GET)\n     public String testMethod(){\n         System.out.println("testMethod");\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     \n   \n   * 注意：如请求方式不支持，会报错：405\n\n * params属性\n   \n   * 类型：String[]\n   * 作用：设置当前方法的请求参数【必须携带指定参数，才可以访问当前方法，如未携带指定参数会报错，400】\n\n * headers属性\n   \n   * 类型：String[]\n   \n   * 作用：设置当前方法的请求头信息【必须携带指定请求头，如未携带指定请求头，会报错：404】\n   \n   * 示例代码\n     \n     @RequestMapping(value = "/testParamsAndHeaders",params = "stuName=zq",\n                     headers = "User-Agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36")\n     public String testParamsAndHeaders(){\n         System.out.println("testParamsAndHeaders");\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n# 4.3 Ant风格URL\n\n * Ant 风格资源地址支持 3 种匹配符\n   \n   a) ?：匹配一个字符\n   \n   b) *：匹配任意字符\n   \n   c) **：匹配任意层、任意字符路径\n\n\n# 5 @PathVariable注解\n\n * 作用：将占位符中参数，注入处理请求方法的形参中，要求参数名一致。\n * 属性\n   * value：设置入参参数名\n   * name：与value作用一致\n   * required：设置当前参数是否必须入参\n     * true：必须入参，如不入参会报错：500\n     * false：不必须入参，如不入参不会报错，会将null值注入\n\n\n# 6. REST简介\n\n# 6.1 REST与传统URL风格对比\n\n * 传统CRUD的URL风格\n   \n   * 业务 URL 请求方式\n   * 增 /addUser POST\n   * 删 /deleteUser?id=1001 GET\n   * 改 /updateUser POST\n   * 查 /getUser?id=1001 GET\n\n * REST_CRUD的URL风格\n   \n   * 业务 URL 请求方式\n   * 增 /user POST\n   * 删 /user/1001 DELETE\n   * 改 /user PUT\n   * 查 /user/1001 GET\n\n * 总结：REST风格CRUD优势\n   \n   * 提高网站排名\n   * 便于第三方平台对接\n   * HTTP协议底层支持，效率高\n\n# 6.2 HiddenHttpMethodFilter源码解析\n\n> 解决遇到新问题正确思路：第一方【JDK】、第三方、第二方【自己】\n\n *   public static final String DEFAULT_METHOD_PARAM = "_method";\n     private String methodParam = DEFAULT_METHOD_PARAM;\n     \n     @Override\n     protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n         throws ServletException, IOException {\n     \n         HttpServletRequest requestToUse = request;\n     \n         if ("POST".equals(request.getMethod()) && request.getAttribute(WebUtils.ERROR_EXCEPTION_ATTRIBUTE) == null) {\n             String paramValue = request.getParameter(this.methodParam);\n             if (StringUtils.hasLength(paramValue)) {\n                 String method = paramValue.toUpperCase(Locale.ENGLISH);\n                 if (ALLOWED_METHODS.contains(method)) {\n                     requestToUse = new HttpMethodRequestWrapper(request, method);\n                 }\n             }\n         }\n     \n         filterChain.doFilter(requestToUse, response);\n     }\n     /**\n     \t * Simple {@link HttpServletRequest} wrapper that returns the supplied method for\n     \t * {@link HttpServletRequest#getMethod()}.\n     \t */\n     private static class HttpMethodRequestWrapper extends HttpServletRequestWrapper {\n     \n         private final String method;\n     \n         public HttpMethodRequestWrapper(HttpServletRequest request, String method) {\n             super(request);\n             this.method = method;\n         }\n     \n         @Override\n         public String getMethod() {\n             return this.method;\n         }\n     }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   \n\n * 总结：使用HiddenHttpMethodFilter需要准备如下两步\n   \n   * 提交方式必须是：POST\n   * 必须提交请求参数：_method\n\n# 6.3 HiddenHttpMethodFilter基本使用\n\n * xml\n   \n   \x3c!--    注册HiddenHttpMethodFilter，为REST风格准备--\x3e\n   <filter>\n       <filter-name>HiddenHttpMethodFilter</filter-name>\n       <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>\n   </filter>\n   <filter-mapping>\n       <filter-name>HiddenHttpMethodFilter</filter-name>\n       <url-pattern>/*</url-pattern>\n   </filter-mapping>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * html\n   \n   <h2>修改user信息</h2>\n   <form th:action="@{/RestController}" method="POST">\n       <input type="hidden" name="_method" value="PUT">\n       <input type="submit">\n   </form>\n   <h2>删除user信息</h2>\n   <form th:action="@{/RestController}" method="POST">\n       <input type="hidden" name="_method" value="DELETE">\n       <input type="submit">\n   </form>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * java\n   \n   /**\n    * 修改user信息\n    * @return\n    */\n   @RequestMapping(value = "/RestController",method = RequestMethod.PUT)\n   public String updateUser(){\n       System.out.println("修改User信息...");\n       return "success";\n   }\n   \n   /**\n    * 删除user信息\n    *\n    * @return\n    */\n   @RequestMapping(value = "/RestController",method = RequestMethod.DELETE)\n   public String deleteUser(){\n       System.out.println("删除User信息...");\n       return "success";\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n\n# 7. SpringMVC处理请求数据\n\n> JavaWeb阶段【Servlet中处理请求数据-request】\n> \n>  * 获取请求参数\n>    \n>    * request.getParameter()\n>    * request.getParameterValues()\n>    * request.getParameterMap()\n> \n>  * 获取请求头\n>    \n>    * request.getHeader()\n> \n>  * 获取请求行【请求方式、uri】\n>    \n>    * request.getMethod()\n>    * request.getRequestURI()\n>    * request.getRequestURL()\n> \n>  * request.getCookies()：获取cookie信息\n>    \n>    ...\n\n# 7.1 SpringMVC获取请求参数【★】\n\n * 默认情况：当参数名与处理请求方法中形参名一致时，SpringMVC可以实现自动入参\n\n * @RequestParam注解【★】\n   \n   * value：设置入参参数名\n   * name：与value属性作用一致\n   * required：设置当前参数，是否必须入参\n     * true【默认值】：必须入参，如未入参会报错：400\n     * false：不必须入参，如未入参，会将null值注入【建议使用包装类】\n   * defaultValue：设置默认值\n     * 只有未入参，就会为指定参数设置默认值\n\n# 7.2 SpringMVC使用POJO入参【★】\n\n * 必须要保证请求参数名与POJO的属性名保持一致。支持级联属性入参\n\n * 示例\n   \n   <h2>添加员工信息</h2>\n   <form th:action="@{/addEmp}" method="post">\n       员工id:<input type="text" name="empId"><br>\n       员工姓名：<input type="text" name="empName"><br>\n       员工薪资：<input type="text" name="salary"><br>\n       员工部门ID：<input type="text" name="dept.id"><br>\n       员工部门名称：<input type="text" name="dept.deptName"><br>\n       <input type="submit" value="提交员工">\n   </form>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   @RequestMapping("/addEmp")\n   public String addEmp(Emp emp){\n       System.out.println("emp = " + emp);\n       return "success";\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   public class Emp {\n       private Integer empId;\n       private String empName;\n       private Double salary;\n       private Dept dept;\n       //....\n   }\n   public class Dept {\n       private Integer id;\n       private String deptName;\n   \t//...\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n# 7.3 SpringMVC获取请求头\n\n * @RequestHeader：获取请求头\n   \n   * 属性\n     \n     * value：设置获取请求头参数名称\n     \n     * name：与value作用一致\n     \n     * required：设置当前请求头是否必须入参\n       \n       * true【默认值】：必须入参\n       * false：不必须入参\n     \n     * defaultValue：设置默认值\n       \n       * 如有未入参请求头，则设置当前默认值\n   \n   * 示例代码\n     \n     @RequestMapping("/getRequestHeader")\n     public String getHeader(@RequestHeader("User-Agent")String uAgent,\n                             @RequestHeader("Referer")String referer,\n                             @RequestHeader(value = "Cookie",required = false)String cookie){\n         System.out.println("uAgent = " + uAgent);\n         System.out.println("referer = " + referer);\n         System.out.println("cookie = " + cookie);\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     \n\n# 7.4 SpringMVC获取CookieValue\n\n * @CookieValue\n   \n   * 属性\n     \n     * value：设置获取CookieValue参数名称\n     \n     * name：与value作用一致\n     \n     * required：设置当前CookieValue是否必须入参\n       \n       * true【默认值】：必须入参\n       * false：不必须入参\n     \n     * defaultValue：设置默认值\n       \n       * 如有未入参CookieValue，则设置当前默认值\n\n * 示例代码\n   \n   @RequestMapping("/getCookieValue")\n   public String getCookieValue(HttpServletRequest request, @CookieValue(value = "JSESSIONID",required = false)String cValue){\n       HttpSession session = request.getSession();\n       System.out.println("sessionId:" + cValue);\n       return "success";\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n# 7.5 SpringMVC中支持原生Servlet中API\n\n * 如需要原生Servlet底层API，直接将对象入参即可\n\n\n# 8. SpringMVC中解决【请求与响应】乱码问题\n\n> JavaWeb中如何解决乱码问题\n> \n> request.setCharacterEncoding("UTF-8");\n> \n> response.setContentType("text/html;charset=UTF-8");\n\n# 8.1 源码解析\n\n@Nullable\n\tprivate String encoding;\n\n\tprivate boolean forceRequestEncoding = false;\n\n\tprivate boolean forceResponseEncoding = false;\n\n    public void setForceEncoding(boolean forceEncoding) {\n       this.forceRequestEncoding = forceEncoding;\n       this.forceResponseEncoding = forceEncoding;\n    }\n\n\t@Override\n\tprotected void doFilterInternal(\n\t\t\tHttpServletRequest request, HttpServletResponse response, FilterChain filterChain)\n\t\t\tthrows ServletException, IOException {\n\n\t\tString encoding = getEncoding();\n\t\tif (encoding != null) {\n\t\t\tif (isForceRequestEncoding() || request.getCharacterEncoding() == null) {\n\t\t\t\trequest.setCharacterEncoding(encoding);\n\t\t\t}\n\t\t\tif (isForceResponseEncoding()) {\n\t\t\t\tresponse.setCharacterEncoding(encoding);\n\t\t\t}\n\t\t}\n\t\tfilterChain.doFilter(request, response);\n\t}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n# 8.2 示例代码\n\n\x3c!--    注册CharacterEncodingFilter，解决请求与响应乱码--\x3e\n<filter>\n    <filter-name>CharacterEncodingFilter</filter-name>\n    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n    <init-param>\n        <param-name>forceEncoding</param-name>\n        <param-value>true</param-value>\n    </init-param>\n    <init-param>\n        <param-name>encoding</param-name>\n        <param-value>UTF-8</param-value>\n    </init-param>\n</filter>\n<filter-mapping>\n    <filter-name>CharacterEncodingFilter</filter-name>\n    <url-pattern>/*</url-pattern>\n</filter-mapping>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 注意：如有其它过滤器一同使用时，需要将CharacterEncodingFilter注册在第一位置\n\n\n# 9. SpringMVC中处理响应数据\n\n> JavaWeb响应数据基本流程\n> \n>  1. 将数据共享到域中\n>     * pageContext\n>     * request：请求域\n>     * session：会话域\n>     * application【ServletContext】\n>  2. 跳转路径\n>     * 转发：request.getDispatcherServlet(url).forward(request,response);\n>     * 重定向：response.sendRedirect(url);\n\n# 9.1 SpringMVC提供两种方式，处理响应数据\n\n * 使用ModelAndView作为方法返回值类型，处理响应数据\n * 使用Model或Map或ModelMap作为方法参数入参，处理响应数据\n\n# 9.2 源码解析ModelAndView\n\npublic class ModelAndView {\n\n   /** View instance or view name String. */\n   @Nullable\n   //视图对象\n   private Object view;\n\n   /** Model Map. */\n   @Nullable\n   //数据模型\n   private ModelMap model;\n   \n   \n   /**\n   \t\t设置&获取视图名称\n   */\n   public void setViewName(@Nullable String viewName) {\n\t\tthis.view = viewName;\n\t}\n\tpublic String getViewName() {\n\t\treturn (this.view instanceof String ? (String) this.view : null);\n\t}\n\t\n    /**\n    \t获取数据模型\n    */\n    public Map<String, Object> getModel() {\n\t\treturn getModelMap();\n\t}\n    public ModelMap getModelMap() {\n\t\tif (this.model == null) {\n\t\t\tthis.model = new ModelMap();\n\t\t}\n\t\treturn this.model;\n\t}\n    protected Map<String, Object> getModelInternal() {\n\t\treturn this.model;\n\t}\n    \n    /**\n    \t设置模型数据\n    */\n    public ModelAndView addObject(Object attributeValue) {\n\t\tgetModelMap().addAttribute(attributeValue);\n\t\treturn this;\n\t}\n    public ModelAndView addObject(String attributeName, @Nullable Object attributeValue) \t{\n\t\tgetModelMap().addAttribute(attributeName, attributeValue);\n\t\treturn this;\n\t}\n   \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n# 9.3 使用ModelAndView作为方法返回值，处理响应数据【示例代码】\n\n@RequestMapping("/responsedata")\npublic ModelAndView testResponseData(){\n    ModelAndView mv = new ModelAndView();\n    //为mv设置数据模型\n    mv.addObject("deptId",1001);\n    mv.addObject("deptName","秘书部门");\n    //为mv设置视图对象\n    mv.setViewName("success");\n    return mv;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 10. 视图【View】和视图解析器【ViewResolver】对象\n\n# 10.1 视图解析器对象【ViewResolver】\n\n * 作用：将视图【View】对象从ModelAndView中解析出来\n\n# 10.2 视图对象【View】\n\n * 作用\n   * 将数据共享到域中\n   * 跳转路径\n\n\n# 11. mvc:view-controller标签\n\n * 作用：匹配请求路径与逻辑视图名【如不需要处理业务，只希望跳转路径时，使用该标签】\n\n * 注意：如添加当前标签，会导致@RequestMapping注解失效，此时需要添加如下标签解决问题：\n   \n   <mvc:view-controller path="/" view-name="index"></mvc:view-controller>\n   <mvc:annotation-driven></mvc:annotation-driven>\n   \n   \n   1\n   2\n   \n\n\n# 12. SpringMVC重定向及静态资源加载问题\n\n# 12.1 重定向语法\n\n * redirect:/path.html\n\n * 注意：5.5中直接手动转发或重定向到html页面时会出现404。\n   \n   * 原因：请求静态资源【html、css、js文件】的请求被DispacherServlet拦截，但是没有找到映射该请求的处理方法。\n     \n     之前【JavaWeb】没有被拦截，现在被拦截原因：DispacherServlet配置URL是【/】，将tomcat->config->web.xml中的defaultServlet配置URL的【/】覆盖了。\n\n# 12.2 解决方案，添加如下配置\n\n\x3c!--配置处理静态资源--\x3e\n<mvc:default-servlet-handler></mvc:default-servlet-handler>\n\n\n1\n2\n\n * 配置了该标签之后将在 SpringMVC 上下文中定义一个 DefaultServletHttpRequestHandler，它会对进入 DispatcherServlet 的请求进行筛查，如果发现是没有经过映射的请求，就将该请求交由 WEB 应用服务器默认的 Servlet 处理，如果不是静态资源的请求，才由 DispatcherServlet 继续处理。\n\n\n# 13. 消息转换器【HttpMessageConverter】\n\n# 13.1 消息转换器简介\n\n * HttpMessageConverter 是 Spring3.0 新添加的一个接口，负责将请求信息转换为一个对象（类型为 T），将对象（类型为 T）输出为响应信息。\n    * 作用：将Java对象与信息可以相互转换\n\n * 注意：SpringMVC的配置文件中一定要配置mvc:annotation-driven标签。如果不配置将只装配4个转换器，如果配置mvc:annotation-driven标签，装配7个转换器\n\n# 13.2 使用消息转换器\n\n * 处理请求数据\n   \n   * 使用@RequestBody定义在处理请求方法入参中\n     \n     @RequestMapping("/testRequestBody")\n     public String testRequestBody(@RequestBody String rbody/*String username,String password*/){\n         System.out.println("rbody = " + rbody);\n         return SUCCESS;\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     \n   \n   * 使用Entity定义在处理请求方法入参中\n     \n     @RequestMapping("/testHttpEntity")\n     public String testtestHttpEntity(HttpEntity<String> httpEntity){\n         HttpHeaders headers = httpEntity.getHeaders();\n         System.out.println("headers = " + headers);\n         String body = httpEntity.getBody();\n         System.out.println("body = " + body);\n         return SUCCESS;\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n * 处理响应数据\n   \n   * 使用@ResponseBody注解定义在方法上【或类上面】，使用响应流响应数据【response.getWriter().write()】\n     \n     @ResponseBody\n     @RequestMapping("/testResponseBody")\n     public String testResponseBody(){\n         System.out.println("测试testResponseBody！！！");\n         return "sfdsfds";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n * 使用ResponseEntity，定义在方法返回值位置，解决文件下载问题\n   \n   <h3>测试【ResponseEntity】文件下载-0728资源库</h3>\n   <a th:href="@{/testDownload(fileName=\'lss1.jpg\')}">lss1.jpg</a><br>\n   <a th:href="@{/testDownload(fileName=\'zqbb2.jpg\')}">zqbb2.jpg</a><br>\n   <a th:href="@{/testDownload(fileName=\'胜哥秘籍.txt\')}">胜哥秘籍.txt</a><br>\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   /**\n    * 处理文件下载\n    */\n   @RequestMapping(value = "/testDownload")\n   public ResponseEntity<byte[]> fileDownload(String fileName,\n                                              HttpServletRequest request)throws Exception{\n       System.out.println("fileName = " + fileName);\n       //获取下载目标文件，真实路径\n       String realPath = request.getServletContext().getRealPath("/WEB-INF/dir/" + fileName);\n       //创建输入流\n       InputStream is = new FileInputStream(realPath);\n       //定义存储文件字节数组\n       byte[] bytes = new byte[is.available()];\n       //通过流，将文件字节读取bytes数组中\n       is.read(bytes);\n       //响应头\n       //MultiValueMap<String,String> headers = new HttpHeaders();\n       HttpHeaders headers = new HttpHeaders();\n   \n       //设置当前文件为附件【通知浏览器别打开，下载】\n       headers.add("Content-Disposition", "attachment;filename="+fileName);\n       //处理文件中文名问题\n       headers.setContentDispositionFormData("attachment", new String(fileName.getBytes("utf-8"), "ISO-8859-1"));\n       //响应码\n       HttpStatus ok = HttpStatus.OK;\n       //创建ResponseEntity<byte[]>\n       ResponseEntity<byte[]> responseEntity =\n               new ResponseEntity<>(bytes,headers,ok);\n       return responseEntity;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   \n\n\n# 14. SpringMVC中使用HttpMessageConverter处理Json数据\n\n * 加载json相关jar包\n   \n   \x3c!-- jackson-databind --\x3e\n   <dependency>\n       <groupId>com.fasterxml.jackson.core</groupId>\n       <artifactId>jackson-databind</artifactId>\n       <version>2.10.5.1</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 在springmvc.xml配置文件中，添加<mvc:annotation-driven>\n   \n   \x3c!--    解决静态资源加载、view-controller后续问题等、解决Jackson消息转换器问题--\x3e\n   <mvc:annotation-driven></mvc:annotation-driven>\n   \n   \n   1\n   2\n   \n\n * 返回需要转换为json格式数据\n   \n   @ResponseBody\n   @RequestMapping("/testJsonData")\n   public Employee testJsonData(){\n       Employee employee = new Employee();\n       employee.setId(1001);\n       employee.setLastName("zq");\n       employee.setEmail("zq@163.com");\n       employee.setGender(1);\n       return employee;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n\n# 15. mvc:annotation-driven主要作用\n\n# 15.1 添加mvc:view-controller标签\n\n * 添加上面标签，会导致未装配RequsetMappingHandlerAdapter适配器，从而导致RequestMapping失效。\n   \n   所以，添加mvc:annotation-driven标签，会将RequsetMappingHandlerAdapter适配器装配，从而解决上述问题\n\n# 15.2 添加<mvc:default-servlet-handler></mvc:default-servlet-handler>\n\n * 添加上述标签，解决静态资源加载问题。但添加后出现其他请处理器失效，添加mvc:annotation-driven解决问题\n\n# 15.3 使用Jackson2处理json数据，必须添加mvc:annotation-driven标签\n\n * 使用Jackson2步骤\n   1. 添加jar包支持\n   2. 添加@ResponseBody\n   3. 添加配置：mvc:annotation-driven\n      * 注意：只有添加mvc:annotation-driven标签后，SpringMVC才会添加一个消息转换器【MappingJackson2HttpMessageConverter:处理Json数据消息转换器】\n\n\n# 16. SpringMVC实现文件上传\n\n# 16.1 使用 Jakarta Commons FileUpload\n\n * 使用Jakarta Commons FileUpload技术实现了一个 MultipartResolver接口， 实现类是：CommonsMultipartResolver\n\n# 16.2 使用步骤\n\n * 导入相关jar包【pom.xml】\n   \n   \x3c!-- 实现文件上传：commons-fileupload --\x3e\n   <dependency>\n       <groupId>commons-fileupload</groupId>\n       <artifactId>commons-fileupload</artifactId>\n       <version>1.4</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 装配CommonsMultipartResolver\n   \n   \x3c!--    装配CommonsMultipartResolver\n   \t注意：id必须是multipartResolver\n   --\x3e\n   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">\n       <property name="defaultEncoding" value="UTF-8"></property>\n       <property name="maxUploadSize" value="102400"></property>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 实现文件上传\n   \n   <h2>上传文件</h2>\n   <form th:action="@{/fileUpload}" method="post" enctype="multipart/form-data">\n       用户名：<input type="text" name="username"><br>\n       上传文件：<input type="file" name="ufile"><br>\n       <input type="submit">\n   </form>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n@Controller\npublic class Test2FileUploadController {\n\n    private static final String SUCCESS = "success";\n\n    @RequestMapping(value = "/fileUpload", method = RequestMethod.POST)\n    public String doFileUpload(String username,\n                               @RequestParam("ufile") MultipartFile multipartFile,\n                               HttpSession session) {\n\n        try {\n            System.out.println("username = " + username);\n            System.out.println("multipartFile = " + multipartFile);\n\n            //1. 获取upload【文件上传-根目录】真实路径\n            String realPath = session.getServletContext().getRealPath("/upload");\n            File pFile = new File(realPath);\n            if (pFile.exists() == false) {\n                pFile.mkdirs();\n            }\n            //2. 获取文件名\n            String fileName = multipartFile.getOriginalFilename();\n            System.out.println("fileName = " + fileName);\n            String uuId = UUID.randomUUID().toString().replace("-", "").toUpperCase();\n            System.out.println("uuId = " + uuId);\n            //3. 实现文件上传  File.separator:路劲分隔符\n            multipartFile.transferTo(new File(realPath + File.separator + uuId + fileName));\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return SUCCESS;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n# 16.3 优化文件上传\n\n * 允许同名文件上传\n   * 为文件名拼接一个不可重复随机数\n     * 时间戳\n     * UUID【是一个32位，十六进制全球唯一随机数】\n\n\n# 17. SpringMVC拦截器\n\n# 17.1 自定义拦截器两种方式\n\n * 实现HandlerInterceptor接口\n * 继承HandlerInterceptorAdapter适配器类\n\n# 17.2 定义拦截器步骤\n\n * 定义拦截器实现接口或继承类\n   * 重写三个方法【preHandle()、postHandle()、afterCompletion()】\n * 将拦截器装配到IOC容器中\n   * 注解：@Component\n   * xml：bean标签\n * 配置拦截器【将拦截器配置到指定请求处理器中（Controller）】\n\n# 17.3 单个拦截器工作原理【执行流程】\n\n * 客户端【浏览器】端向服务器端发送请求\n * 前端控制器【略】\n * 执行拦截器中preHandle()方法\n * 执行Controller中处理请求方法\n * 执行拦截器postHandle()方法\n * 前端控制器【略】\n * 执行拦截器afterCompletion()方法',normalizedContent:'# springmvc\n\n\n# 1. springmvc简介\n\n * springmvc是spring子框架\n * spring mvc属于springframework的后续产品，是spring 为展现层提供的基于 mvc 设计理念的优秀的 web 框架，是目前最主流的mvc 框架。\n   * mvc设计模式：model view controller【数据模型、视图对象、控制器（处理器）】，主要：将封装数据模型，封装视图对象、协调调度控制器（处理器）解耦。\n\n\n# 2. springmvc之helloworld\n\n 1. 新建web工程\n\n 2. 导入jar包\n    \n    \x3c!--spring-webmvc--\x3e\n    <dependency>\n        <groupid>org.springframework</groupid>\n        <artifactid>spring-webmvc</artifactid>\n        <version>5.3.1</version>\n    </dependency>\n    \x3c!-- 导入thymeleaf与spring5的整合包 --\x3e\n    <dependency>\n        <groupid>org.thymeleaf</groupid>\n        <artifactid>thymeleaf-spring5</artifactid>\n        <version>3.0.12.release</version>\n    </dependency>\n    <dependency>\n        <groupid>javax.servlet</groupid>\n        <artifactid>javax.servlet-api</artifactid>\n        <version>4.0.1</version>\n        <scope>provided</scope>\n    </dependency>\n    \n    \n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    \n\n 3. 在web.xml配置前端控制器【核心控制器】：dispatcherservlet\n    \n    *   <servlet>\n            <servlet-name>dispatcherservlet</servlet-name>\n            <servlet-class>org.springframework.web.servlet.dispatcherservlet</servlet-class>\n            \x3c!--        设置springmvc核心配置文件路径--\x3e\n            <init-param>\n                <param-name>contextconfiglocation</param-name>\n                <param-value>classpath:springmvc.xml</param-value>\n            </init-param>\n            \x3c!--        设置servlet优先级：启动服务器，创建当前dispatcherservlet--\x3e\n            <load-on-startup>1</load-on-startup>\n        </servlet>\n        <servlet-mapping>\n            <servlet-name>dispatcherservlet</servlet-name>\n            \x3c!--   匹配当前项目下，除了jsp的所有路径--\x3e\n            <url-pattern>/</url-pattern>\n        </servlet-mapping>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      \n    \n    * url配置为：/【原因：tomcat->conf->web.xml如下配置】\n      \n      \x3c!-- the mapping for the default servlet --\x3e\n          <servlet-mapping>\n              <servlet-name>default</servlet-name>\n              <url-pattern>/</url-pattern>\n          </servlet-mapping>\n      \n          \x3c!-- the mappings for the jsp servlet --\x3e\n          <servlet-mapping>\n              <servlet-name>jsp</servlet-name>\n              <url-pattern>*.jsp</url-pattern>\n              <url-pattern>*.jspx</url-pattern>\n          </servlet-mapping>\n      \n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      \n\n 4. 编写springmvc配置文件：springmvc.xml\n    \n    *   \x3c!--    开启组件扫描--\x3e\n        <context:component-scan base-package="com.viki"></context:component-scan>\n        \x3c!--    装配视图解析器\n                    配置视图\n                        前缀：/web-inf/pages/\n                        后缀：.html\n        --\x3e\n        <bean class="org.thymeleaf.spring5.view.thymeleafviewresolver">\n            \x3c!--        设置utf-8字符集--\x3e\n            <property name="characterencoding" value="utf-8"></property>\n            \x3c!--配置模板引擎属性--\x3e\n            <property name="templateengine">\n                \x3c!--配置内部bean--\x3e\n                <bean class="org.thymeleaf.spring5.springtemplateengine">\n                    \x3c!--配置模块的解析器属性--\x3e\n                    <property name="templateresolver">\n                        \x3c!--配置内部bean--\x3e\n                        <bean class="org.thymeleaf.spring5.templateresolver.springresourcetemplateresolver">\n                            \x3c!--配置前缀--\x3e\n                            <property name="prefix" value="/web-inf/pages/"></property>\n                            \x3c!--配置后缀--\x3e\n                            <property name="suffix" value=".html"></property>\n                            \x3c!--配置字符集--\x3e\n                            <property name="characterencoding" value="utf-8"></property>\n                        </bean>\n                    </property>\n                </bean>\n            </property>\n        </bean>\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      10\n      11\n      12\n      13\n      14\n      15\n      16\n      17\n      18\n      19\n      20\n      21\n      22\n      23\n      24\n      25\n      26\n      27\n      28\n      29\n      \n\n 5. 编写请求处理器【controller|handler】\n    \n    *   @controller     //springmvc中装配控制器，只能使用@controller注解\n        public class hellocontroller {\n        \n            @requestmapping("/index.html")\n            public string toindex(){\n                return "index";\n            }\n        \n        }\n      \n      \n      1\n      2\n      3\n      4\n      5\n      6\n      7\n      8\n      9\n      \n\n 6. 测试\n\n\n# 3. springmvc基本工作原理\n\n * 发送请求：<a th:href="@{/hellocontroller}">hellocontroller</a>\n * 通过前端控制器【dispatcherservlet】，将请求委托给请求处理器【controller】\n * 调用业务层代码，返回数据模型【视图对象】，springmvc底层最终封装为modelandview对象\n * 通过前端控制器【dispatcherservlet】将modelandview中view对象解析出来\n * 做出响应【路径跳转（转发|重定向）】\n\n\n# 4. springmvc中@requestmapping注解详讲\n\n# 4.1 @requestmapping注解书写位置\n\n * 书写在类上面\n   * 不能单独使用，需要配合方法使用\n   * 相当于将所有方法路径，提取到类中\n * 书写在方法上面\n   * 可以单独使用\n   * 为指定方法映射url\n\n# 4.2 @requestmapping注解中属性\n\n * value属性\n   \n   * 类型：string[]\n   * 作用：用来设置要映射的请求地址\n\n * path属性\n   \n   * 类型：string[]\n   \n   * 作用：与value属性作用一致\n   \n   * 示例代码\n     \n     @requestmapping(path="/")\n     public string toindex(){\n         return "index";\n     }\n     @requestmapping(value={"/hellocontroller","/hc"})\n     public string hcontroller(){\n         //跳转success页面\n         system.out.println("跳转到success页面！");\n         //success是逻辑视图名\n         //物理视图名：/web-inf/pages/success.html\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     10\n     11\n     12\n     \n\n * method属性\n   \n   * 类型：requestmethod[]，requestmethod是一个枚举类型\n   \n   * 作用：设置当前方法的请求方式【get|post|put|delete】\n   \n   * 示例代码\n     \n     /**\n      * 测试method\n      * @return\n      */\n     @requestmapping(value = "/testmethod",method = requestmethod.get)\n     public string testmethod(){\n         system.out.println("testmethod");\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     \n   \n   * 注意：如请求方式不支持，会报错：405\n\n * params属性\n   \n   * 类型：string[]\n   * 作用：设置当前方法的请求参数【必须携带指定参数，才可以访问当前方法，如未携带指定参数会报错，400】\n\n * headers属性\n   \n   * 类型：string[]\n   \n   * 作用：设置当前方法的请求头信息【必须携带指定请求头，如未携带指定请求头，会报错：404】\n   \n   * 示例代码\n     \n     @requestmapping(value = "/testparamsandheaders",params = "stuname=zq",\n                     headers = "user-agent=mozilla/5.0 (windows nt 10.0; win64; x64) applewebkit/537.36 (khtml, like gecko) chrome/94.0.4606.81 safari/537.36")\n     public string testparamsandheaders(){\n         system.out.println("testparamsandheaders");\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n# 4.3 ant风格url\n\n * ant 风格资源地址支持 3 种匹配符\n   \n   a) ?：匹配一个字符\n   \n   b) *：匹配任意字符\n   \n   c) **：匹配任意层、任意字符路径\n\n\n# 5 @pathvariable注解\n\n * 作用：将占位符中参数，注入处理请求方法的形参中，要求参数名一致。\n * 属性\n   * value：设置入参参数名\n   * name：与value作用一致\n   * required：设置当前参数是否必须入参\n     * true：必须入参，如不入参会报错：500\n     * false：不必须入参，如不入参不会报错，会将null值注入\n\n\n# 6. rest简介\n\n# 6.1 rest与传统url风格对比\n\n * 传统crud的url风格\n   \n   * 业务 url 请求方式\n   * 增 /adduser post\n   * 删 /deleteuser?id=1001 get\n   * 改 /updateuser post\n   * 查 /getuser?id=1001 get\n\n * rest_crud的url风格\n   \n   * 业务 url 请求方式\n   * 增 /user post\n   * 删 /user/1001 delete\n   * 改 /user put\n   * 查 /user/1001 get\n\n * 总结：rest风格crud优势\n   \n   * 提高网站排名\n   * 便于第三方平台对接\n   * http协议底层支持，效率高\n\n# 6.2 hiddenhttpmethodfilter源码解析\n\n> 解决遇到新问题正确思路：第一方【jdk】、第三方、第二方【自己】\n\n *   public static final string default_method_param = "_method";\n     private string methodparam = default_method_param;\n     \n     @override\n     protected void dofilterinternal(httpservletrequest request, httpservletresponse response, filterchain filterchain)\n         throws servletexception, ioexception {\n     \n         httpservletrequest requesttouse = request;\n     \n         if ("post".equals(request.getmethod()) && request.getattribute(webutils.error_exception_attribute) == null) {\n             string paramvalue = request.getparameter(this.methodparam);\n             if (stringutils.haslength(paramvalue)) {\n                 string method = paramvalue.touppercase(locale.english);\n                 if (allowed_methods.contains(method)) {\n                     requesttouse = new httpmethodrequestwrapper(request, method);\n                 }\n             }\n         }\n     \n         filterchain.dofilter(requesttouse, response);\n     }\n     /**\n     \t * simple {@link httpservletrequest} wrapper that returns the supplied method for\n     \t * {@link httpservletrequest#getmethod()}.\n     \t */\n     private static class httpmethodrequestwrapper extends httpservletrequestwrapper {\n     \n         private final string method;\n     \n         public httpmethodrequestwrapper(httpservletrequest request, string method) {\n             super(request);\n             this.method = method;\n         }\n     \n         @override\n         public string getmethod() {\n             return this.method;\n         }\n     }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   31\n   32\n   33\n   34\n   35\n   36\n   37\n   38\n   39\n   \n\n * 总结：使用hiddenhttpmethodfilter需要准备如下两步\n   \n   * 提交方式必须是：post\n   * 必须提交请求参数：_method\n\n# 6.3 hiddenhttpmethodfilter基本使用\n\n * xml\n   \n   \x3c!--    注册hiddenhttpmethodfilter，为rest风格准备--\x3e\n   <filter>\n       <filter-name>hiddenhttpmethodfilter</filter-name>\n       <filter-class>org.springframework.web.filter.hiddenhttpmethodfilter</filter-class>\n   </filter>\n   <filter-mapping>\n       <filter-name>hiddenhttpmethodfilter</filter-name>\n       <url-pattern>/*</url-pattern>\n   </filter-mapping>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n\n * html\n   \n   <h2>修改user信息</h2>\n   <form th:action="@{/restcontroller}" method="post">\n       <input type="hidden" name="_method" value="put">\n       <input type="submit">\n   </form>\n   <h2>删除user信息</h2>\n   <form th:action="@{/restcontroller}" method="post">\n       <input type="hidden" name="_method" value="delete">\n       <input type="submit">\n   </form>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n * java\n   \n   /**\n    * 修改user信息\n    * @return\n    */\n   @requestmapping(value = "/restcontroller",method = requestmethod.put)\n   public string updateuser(){\n       system.out.println("修改user信息...");\n       return "success";\n   }\n   \n   /**\n    * 删除user信息\n    *\n    * @return\n    */\n   @requestmapping(value = "/restcontroller",method = requestmethod.delete)\n   public string deleteuser(){\n       system.out.println("删除user信息...");\n       return "success";\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   \n\n\n# 7. springmvc处理请求数据\n\n> javaweb阶段【servlet中处理请求数据-request】\n> \n>  * 获取请求参数\n>    \n>    * request.getparameter()\n>    * request.getparametervalues()\n>    * request.getparametermap()\n> \n>  * 获取请求头\n>    \n>    * request.getheader()\n> \n>  * 获取请求行【请求方式、uri】\n>    \n>    * request.getmethod()\n>    * request.getrequesturi()\n>    * request.getrequesturl()\n> \n>  * request.getcookies()：获取cookie信息\n>    \n>    ...\n\n# 7.1 springmvc获取请求参数【★】\n\n * 默认情况：当参数名与处理请求方法中形参名一致时，springmvc可以实现自动入参\n\n * @requestparam注解【★】\n   \n   * value：设置入参参数名\n   * name：与value属性作用一致\n   * required：设置当前参数，是否必须入参\n     * true【默认值】：必须入参，如未入参会报错：400\n     * false：不必须入参，如未入参，会将null值注入【建议使用包装类】\n   * defaultvalue：设置默认值\n     * 只有未入参，就会为指定参数设置默认值\n\n# 7.2 springmvc使用pojo入参【★】\n\n * 必须要保证请求参数名与pojo的属性名保持一致。支持级联属性入参\n\n * 示例\n   \n   <h2>添加员工信息</h2>\n   <form th:action="@{/addemp}" method="post">\n       员工id:<input type="text" name="empid"><br>\n       员工姓名：<input type="text" name="empname"><br>\n       员工薪资：<input type="text" name="salary"><br>\n       员工部门id：<input type="text" name="dept.id"><br>\n       员工部门名称：<input type="text" name="dept.deptname"><br>\n       <input type="submit" value="提交员工">\n   </form>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   \n   \n   @requestmapping("/addemp")\n   public string addemp(emp emp){\n       system.out.println("emp = " + emp);\n       return "success";\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   \n   \n   public class emp {\n       private integer empid;\n       private string empname;\n       private double salary;\n       private dept dept;\n       //....\n   }\n   public class dept {\n       private integer id;\n       private string deptname;\n   \t//...\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   \n\n# 7.3 springmvc获取请求头\n\n * @requestheader：获取请求头\n   \n   * 属性\n     \n     * value：设置获取请求头参数名称\n     \n     * name：与value作用一致\n     \n     * required：设置当前请求头是否必须入参\n       \n       * true【默认值】：必须入参\n       * false：不必须入参\n     \n     * defaultvalue：设置默认值\n       \n       * 如有未入参请求头，则设置当前默认值\n   \n   * 示例代码\n     \n     @requestmapping("/getrequestheader")\n     public string getheader(@requestheader("user-agent")string uagent,\n                             @requestheader("referer")string referer,\n                             @requestheader(value = "cookie",required = false)string cookie){\n         system.out.println("uagent = " + uagent);\n         system.out.println("referer = " + referer);\n         system.out.println("cookie = " + cookie);\n         return "success";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     9\n     \n\n# 7.4 springmvc获取cookievalue\n\n * @cookievalue\n   \n   * 属性\n     \n     * value：设置获取cookievalue参数名称\n     \n     * name：与value作用一致\n     \n     * required：设置当前cookievalue是否必须入参\n       \n       * true【默认值】：必须入参\n       * false：不必须入参\n     \n     * defaultvalue：设置默认值\n       \n       * 如有未入参cookievalue，则设置当前默认值\n\n * 示例代码\n   \n   @requestmapping("/getcookievalue")\n   public string getcookievalue(httpservletrequest request, @cookievalue(value = "jsessionid",required = false)string cvalue){\n       httpsession session = request.getsession();\n       system.out.println("sessionid:" + cvalue);\n       return "success";\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n# 7.5 springmvc中支持原生servlet中api\n\n * 如需要原生servlet底层api，直接将对象入参即可\n\n\n# 8. springmvc中解决【请求与响应】乱码问题\n\n> javaweb中如何解决乱码问题\n> \n> request.setcharacterencoding("utf-8");\n> \n> response.setcontenttype("text/html;charset=utf-8");\n\n# 8.1 源码解析\n\n@nullable\n\tprivate string encoding;\n\n\tprivate boolean forcerequestencoding = false;\n\n\tprivate boolean forceresponseencoding = false;\n\n    public void setforceencoding(boolean forceencoding) {\n       this.forcerequestencoding = forceencoding;\n       this.forceresponseencoding = forceencoding;\n    }\n\n\t@override\n\tprotected void dofilterinternal(\n\t\t\thttpservletrequest request, httpservletresponse response, filterchain filterchain)\n\t\t\tthrows servletexception, ioexception {\n\n\t\tstring encoding = getencoding();\n\t\tif (encoding != null) {\n\t\t\tif (isforcerequestencoding() || request.getcharacterencoding() == null) {\n\t\t\t\trequest.setcharacterencoding(encoding);\n\t\t\t}\n\t\t\tif (isforceresponseencoding()) {\n\t\t\t\tresponse.setcharacterencoding(encoding);\n\t\t\t}\n\t\t}\n\t\tfilterchain.dofilter(request, response);\n\t}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n# 8.2 示例代码\n\n\x3c!--    注册characterencodingfilter，解决请求与响应乱码--\x3e\n<filter>\n    <filter-name>characterencodingfilter</filter-name>\n    <filter-class>org.springframework.web.filter.characterencodingfilter</filter-class>\n    <init-param>\n        <param-name>forceencoding</param-name>\n        <param-value>true</param-value>\n    </init-param>\n    <init-param>\n        <param-name>encoding</param-name>\n        <param-value>utf-8</param-value>\n    </init-param>\n</filter>\n<filter-mapping>\n    <filter-name>characterencodingfilter</filter-name>\n    <url-pattern>/*</url-pattern>\n</filter-mapping>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n\n\n# 注意：如有其它过滤器一同使用时，需要将characterencodingfilter注册在第一位置\n\n\n# 9. springmvc中处理响应数据\n\n> javaweb响应数据基本流程\n> \n>  1. 将数据共享到域中\n>     * pagecontext\n>     * request：请求域\n>     * session：会话域\n>     * application【servletcontext】\n>  2. 跳转路径\n>     * 转发：request.getdispatcherservlet(url).forward(request,response);\n>     * 重定向：response.sendredirect(url);\n\n# 9.1 springmvc提供两种方式，处理响应数据\n\n * 使用modelandview作为方法返回值类型，处理响应数据\n * 使用model或map或modelmap作为方法参数入参，处理响应数据\n\n# 9.2 源码解析modelandview\n\npublic class modelandview {\n\n   /** view instance or view name string. */\n   @nullable\n   //视图对象\n   private object view;\n\n   /** model map. */\n   @nullable\n   //数据模型\n   private modelmap model;\n   \n   \n   /**\n   \t\t设置&获取视图名称\n   */\n   public void setviewname(@nullable string viewname) {\n\t\tthis.view = viewname;\n\t}\n\tpublic string getviewname() {\n\t\treturn (this.view instanceof string ? (string) this.view : null);\n\t}\n\t\n    /**\n    \t获取数据模型\n    */\n    public map<string, object> getmodel() {\n\t\treturn getmodelmap();\n\t}\n    public modelmap getmodelmap() {\n\t\tif (this.model == null) {\n\t\t\tthis.model = new modelmap();\n\t\t}\n\t\treturn this.model;\n\t}\n    protected map<string, object> getmodelinternal() {\n\t\treturn this.model;\n\t}\n    \n    /**\n    \t设置模型数据\n    */\n    public modelandview addobject(object attributevalue) {\n\t\tgetmodelmap().addattribute(attributevalue);\n\t\treturn this;\n\t}\n    public modelandview addobject(string attributename, @nullable object attributevalue) \t{\n\t\tgetmodelmap().addattribute(attributename, attributevalue);\n\t\treturn this;\n\t}\n   \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n\n\n# 9.3 使用modelandview作为方法返回值，处理响应数据【示例代码】\n\n@requestmapping("/responsedata")\npublic modelandview testresponsedata(){\n    modelandview mv = new modelandview();\n    //为mv设置数据模型\n    mv.addobject("deptid",1001);\n    mv.addobject("deptname","秘书部门");\n    //为mv设置视图对象\n    mv.setviewname("success");\n    return mv;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 10. 视图【view】和视图解析器【viewresolver】对象\n\n# 10.1 视图解析器对象【viewresolver】\n\n * 作用：将视图【view】对象从modelandview中解析出来\n\n# 10.2 视图对象【view】\n\n * 作用\n   * 将数据共享到域中\n   * 跳转路径\n\n\n# 11. mvc:view-controller标签\n\n * 作用：匹配请求路径与逻辑视图名【如不需要处理业务，只希望跳转路径时，使用该标签】\n\n * 注意：如添加当前标签，会导致@requestmapping注解失效，此时需要添加如下标签解决问题：\n   \n   <mvc:view-controller path="/" view-name="index"></mvc:view-controller>\n   <mvc:annotation-driven></mvc:annotation-driven>\n   \n   \n   1\n   2\n   \n\n\n# 12. springmvc重定向及静态资源加载问题\n\n# 12.1 重定向语法\n\n * redirect:/path.html\n\n * 注意：5.5中直接手动转发或重定向到html页面时会出现404。\n   \n   * 原因：请求静态资源【html、css、js文件】的请求被dispacherservlet拦截，但是没有找到映射该请求的处理方法。\n     \n     之前【javaweb】没有被拦截，现在被拦截原因：dispacherservlet配置url是【/】，将tomcat->config->web.xml中的defaultservlet配置url的【/】覆盖了。\n\n# 12.2 解决方案，添加如下配置\n\n\x3c!--配置处理静态资源--\x3e\n<mvc:default-servlet-handler></mvc:default-servlet-handler>\n\n\n1\n2\n\n * 配置了该标签之后将在 springmvc 上下文中定义一个 defaultservlethttprequesthandler，它会对进入 dispatcherservlet 的请求进行筛查，如果发现是没有经过映射的请求，就将该请求交由 web 应用服务器默认的 servlet 处理，如果不是静态资源的请求，才由 dispatcherservlet 继续处理。\n\n\n# 13. 消息转换器【httpmessageconverter】\n\n# 13.1 消息转换器简介\n\n * httpmessageconverter 是 spring3.0 新添加的一个接口，负责将请求信息转换为一个对象（类型为 t），将对象（类型为 t）输出为响应信息。\n    * 作用：将java对象与信息可以相互转换\n\n * 注意：springmvc的配置文件中一定要配置mvc:annotation-driven标签。如果不配置将只装配4个转换器，如果配置mvc:annotation-driven标签，装配7个转换器\n\n# 13.2 使用消息转换器\n\n * 处理请求数据\n   \n   * 使用@requestbody定义在处理请求方法入参中\n     \n     @requestmapping("/testrequestbody")\n     public string testrequestbody(@requestbody string rbody/*string username,string password*/){\n         system.out.println("rbody = " + rbody);\n         return success;\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     \n   \n   * 使用entity定义在处理请求方法入参中\n     \n     @requestmapping("/testhttpentity")\n     public string testtesthttpentity(httpentity<string> httpentity){\n         httpheaders headers = httpentity.getheaders();\n         system.out.println("headers = " + headers);\n         string body = httpentity.getbody();\n         system.out.println("body = " + body);\n         return success;\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     7\n     8\n     \n\n * 处理响应数据\n   \n   * 使用@responsebody注解定义在方法上【或类上面】，使用响应流响应数据【response.getwriter().write()】\n     \n     @responsebody\n     @requestmapping("/testresponsebody")\n     public string testresponsebody(){\n         system.out.println("测试testresponsebody！！！");\n         return "sfdsfds";\n     }\n     \n     \n     1\n     2\n     3\n     4\n     5\n     6\n     \n\n * 使用responseentity，定义在方法返回值位置，解决文件下载问题\n   \n   <h3>测试【responseentity】文件下载-0728资源库</h3>\n   <a th:href="@{/testdownload(filename=\'lss1.jpg\')}">lss1.jpg</a><br>\n   <a th:href="@{/testdownload(filename=\'zqbb2.jpg\')}">zqbb2.jpg</a><br>\n   <a th:href="@{/testdownload(filename=\'胜哥秘籍.txt\')}">胜哥秘籍.txt</a><br>\n   \n   \n   1\n   2\n   3\n   4\n   \n   \n   /**\n    * 处理文件下载\n    */\n   @requestmapping(value = "/testdownload")\n   public responseentity<byte[]> filedownload(string filename,\n                                              httpservletrequest request)throws exception{\n       system.out.println("filename = " + filename);\n       //获取下载目标文件，真实路径\n       string realpath = request.getservletcontext().getrealpath("/web-inf/dir/" + filename);\n       //创建输入流\n       inputstream is = new fileinputstream(realpath);\n       //定义存储文件字节数组\n       byte[] bytes = new byte[is.available()];\n       //通过流，将文件字节读取bytes数组中\n       is.read(bytes);\n       //响应头\n       //multivaluemap<string,string> headers = new httpheaders();\n       httpheaders headers = new httpheaders();\n   \n       //设置当前文件为附件【通知浏览器别打开，下载】\n       headers.add("content-disposition", "attachment;filename="+filename);\n       //处理文件中文名问题\n       headers.setcontentdispositionformdata("attachment", new string(filename.getbytes("utf-8"), "iso-8859-1"));\n       //响应码\n       httpstatus ok = httpstatus.ok;\n       //创建responseentity<byte[]>\n       responseentity<byte[]> responseentity =\n               new responseentity<>(bytes,headers,ok);\n       return responseentity;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   11\n   12\n   13\n   14\n   15\n   16\n   17\n   18\n   19\n   20\n   21\n   22\n   23\n   24\n   25\n   26\n   27\n   28\n   29\n   30\n   \n\n\n# 14. springmvc中使用httpmessageconverter处理json数据\n\n * 加载json相关jar包\n   \n   \x3c!-- jackson-databind --\x3e\n   <dependency>\n       <groupid>com.fasterxml.jackson.core</groupid>\n       <artifactid>jackson-databind</artifactid>\n       <version>2.10.5.1</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 在springmvc.xml配置文件中，添加<mvc:annotation-driven>\n   \n   \x3c!--    解决静态资源加载、view-controller后续问题等、解决jackson消息转换器问题--\x3e\n   <mvc:annotation-driven></mvc:annotation-driven>\n   \n   \n   1\n   2\n   \n\n * 返回需要转换为json格式数据\n   \n   @responsebody\n   @requestmapping("/testjsondata")\n   public employee testjsondata(){\n       employee employee = new employee();\n       employee.setid(1001);\n       employee.setlastname("zq");\n       employee.setemail("zq@163.com");\n       employee.setgender(1);\n       return employee;\n   }\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   8\n   9\n   10\n   \n\n\n# 15. mvc:annotation-driven主要作用\n\n# 15.1 添加mvc:view-controller标签\n\n * 添加上面标签，会导致未装配requsetmappinghandleradapter适配器，从而导致requestmapping失效。\n   \n   所以，添加mvc:annotation-driven标签，会将requsetmappinghandleradapter适配器装配，从而解决上述问题\n\n# 15.2 添加<mvc:default-servlet-handler></mvc:default-servlet-handler>\n\n * 添加上述标签，解决静态资源加载问题。但添加后出现其他请处理器失效，添加mvc:annotation-driven解决问题\n\n# 15.3 使用jackson2处理json数据，必须添加mvc:annotation-driven标签\n\n * 使用jackson2步骤\n   1. 添加jar包支持\n   2. 添加@responsebody\n   3. 添加配置：mvc:annotation-driven\n      * 注意：只有添加mvc:annotation-driven标签后，springmvc才会添加一个消息转换器【mappingjackson2httpmessageconverter:处理json数据消息转换器】\n\n\n# 16. springmvc实现文件上传\n\n# 16.1 使用 jakarta commons fileupload\n\n * 使用jakarta commons fileupload技术实现了一个 multipartresolver接口， 实现类是：commonsmultipartresolver\n\n# 16.2 使用步骤\n\n * 导入相关jar包【pom.xml】\n   \n   \x3c!-- 实现文件上传：commons-fileupload --\x3e\n   <dependency>\n       <groupid>commons-fileupload</groupid>\n       <artifactid>commons-fileupload</artifactid>\n       <version>1.4</version>\n   </dependency>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n * 装配commonsmultipartresolver\n   \n   \x3c!--    装配commonsmultipartresolver\n   \t注意：id必须是multipartresolver\n   --\x3e\n   <bean id="multipartresolver" class="org.springframework.web.multipart.commons.commonsmultipartresolver">\n       <property name="defaultencoding" value="utf-8"></property>\n       <property name="maxuploadsize" value="102400"></property>\n   </bean>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   7\n   \n\n * 实现文件上传\n   \n   <h2>上传文件</h2>\n   <form th:action="@{/fileupload}" method="post" enctype="multipart/form-data">\n       用户名：<input type="text" name="username"><br>\n       上传文件：<input type="file" name="ufile"><br>\n       <input type="submit">\n   </form>\n   \n   \n   1\n   2\n   3\n   4\n   5\n   6\n   \n\n@controller\npublic class test2fileuploadcontroller {\n\n    private static final string success = "success";\n\n    @requestmapping(value = "/fileupload", method = requestmethod.post)\n    public string dofileupload(string username,\n                               @requestparam("ufile") multipartfile multipartfile,\n                               httpsession session) {\n\n        try {\n            system.out.println("username = " + username);\n            system.out.println("multipartfile = " + multipartfile);\n\n            //1. 获取upload【文件上传-根目录】真实路径\n            string realpath = session.getservletcontext().getrealpath("/upload");\n            file pfile = new file(realpath);\n            if (pfile.exists() == false) {\n                pfile.mkdirs();\n            }\n            //2. 获取文件名\n            string filename = multipartfile.getoriginalfilename();\n            system.out.println("filename = " + filename);\n            string uuid = uuid.randomuuid().tostring().replace("-", "").touppercase();\n            system.out.println("uuid = " + uuid);\n            //3. 实现文件上传  file.separator:路劲分隔符\n            multipartfile.transferto(new file(realpath + file.separator + uuid + filename));\n\n        } catch (exception e) {\n            e.printstacktrace();\n        }\n        return success;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n\n# 16.3 优化文件上传\n\n * 允许同名文件上传\n   * 为文件名拼接一个不可重复随机数\n     * 时间戳\n     * uuid【是一个32位，十六进制全球唯一随机数】\n\n\n# 17. springmvc拦截器\n\n# 17.1 自定义拦截器两种方式\n\n * 实现handlerinterceptor接口\n * 继承handlerinterceptoradapter适配器类\n\n# 17.2 定义拦截器步骤\n\n * 定义拦截器实现接口或继承类\n   * 重写三个方法【prehandle()、posthandle()、aftercompletion()】\n * 将拦截器装配到ioc容器中\n   * 注解：@component\n   * xml：bean标签\n * 配置拦截器【将拦截器配置到指定请求处理器中（controller）】\n\n# 17.3 单个拦截器工作原理【执行流程】\n\n * 客户端【浏览器】端向服务器端发送请求\n * 前端控制器【略】\n * 执行拦截器中prehandle()方法\n * 执行controller中处理请求方法\n * 执行拦截器posthandle()方法\n * 前端控制器【略】\n * 执行拦截器aftercompletion()方法',charsets:{cjk:!0}},{title:"10Springboot如何运行",frontmatter:{title:"10Springboot如何运行",date:"2022-01-24T19:02:44.000Z",permalink:"/pages/d803de/",categories:["Spring系列","SpringBoot"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/30.SpringBoot/10Springboot%E5%A6%82%E4%BD%95%E8%BF%90%E8%A1%8C.html",relativePath:"35.Spring系列/30.SpringBoot/10Springboot如何运行.md",key:"v-63b96b96",path:"/pages/d803de/",headers:[{level:2,title:"SpringBoot如何运行",slug:"springboot如何运行",normalizedTitle:"springboot如何运行",charIndex:2},{level:3,title:"如何加载resources目录文件",slug:"如何加载resources目录文件",normalizedTitle:"如何加载resources目录文件",charIndex:229},{level:3,title:"自动配置原理",slug:"自动配置原理",normalizedTitle:"自动配置原理",charIndex:906}],headersStr:"SpringBoot如何运行 如何加载resources目录文件 自动配置原理",content:"# SpringBoot如何运行\n\nSpringBoot默认启动参数\n\n> Maven:org.springframework.boot:spring-boot-autoconfigur2.3.6.RELEASE\n> \n> spring-boot-autoconfigure-2.3.6.RELEASE.jar\n> \n> META-INF\n> \n> additonal-spring-configuration-metadata.json文件中\n\n\n\n\n# 如何加载resources目录文件\n\n在spring-boot-starter-parent中\n\n<resources>\n  <resource>\n    <directory>${basedir}/src/main/resources</directory>\n    <filtering>true</filtering>\n    <includes>\n      <include>**/application*.yml</include>\n      <include>**/application*.yaml</include>\n      <include>**/application*.properties</include>\n    </includes>\n  </resource>\n  <resource>\n    <directory>${basedir}/src/main/resources</directory>\n    <excludes>\n      <exclude>**/application*.yml</exclude>\n      <exclude>**/application*.yaml</exclude>\n      <exclude>**/application*.properties</exclude>\n    </excludes>\n  </resource>\n</resources>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 自动配置原理\n\n首先从SpringApplication主启动类的run方法开始进入\n\n\n\n传入.class和参数，跟进run方法，进入SpringApplication类\n\n",normalizedContent:"# springboot如何运行\n\nspringboot默认启动参数\n\n> maven:org.springframework.boot:spring-boot-autoconfigur2.3.6.release\n> \n> spring-boot-autoconfigure-2.3.6.release.jar\n> \n> meta-inf\n> \n> additonal-spring-configuration-metadata.json文件中\n\n\n\n\n# 如何加载resources目录文件\n\n在spring-boot-starter-parent中\n\n<resources>\n  <resource>\n    <directory>${basedir}/src/main/resources</directory>\n    <filtering>true</filtering>\n    <includes>\n      <include>**/application*.yml</include>\n      <include>**/application*.yaml</include>\n      <include>**/application*.properties</include>\n    </includes>\n  </resource>\n  <resource>\n    <directory>${basedir}/src/main/resources</directory>\n    <excludes>\n      <exclude>**/application*.yml</exclude>\n      <exclude>**/application*.yaml</exclude>\n      <exclude>**/application*.properties</exclude>\n    </excludes>\n  </resource>\n</resources>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 自动配置原理\n\n首先从springapplication主启动类的run方法开始进入\n\n\n\n传入.class和参数，跟进run方法，进入springapplication类\n\n",charsets:{cjk:!0}},{title:"常用注解",frontmatter:{title:"常用注解",date:"2022-01-24T20:24:19.000Z",permalink:"/pages/5eb237/",categories:["Spring系列","SpringBoot"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/30.SpringBoot/30.%E5%B8%B8%E7%94%A8%E6%B3%A8%E8%A7%A3.html",relativePath:"35.Spring系列/30.SpringBoot/30.常用注解.md",key:"v-6bd8a556",path:"/pages/5eb237/",headers:[{level:2,title:"SpringMVC常用注解",slug:"springmvc常用注解",normalizedTitle:"springmvc常用注解",charIndex:2},{level:3,title:"@SpringBootApplication",slug:"springbootapplication",normalizedTitle:"@springbootapplication",charIndex:20},{level:3,title:"@EnableAutoConfiguration",slug:"enableautoconfiguration",normalizedTitle:"@enableautoconfiguration",charIndex:171},{level:3,title:"@Configuration",slug:"configuration",normalizedTitle:"@configuration",charIndex:99},{level:3,title:"@ComponentScan",slug:"componentscan",normalizedTitle:"@componentscan",charIndex:121},{level:3,title:"@Component",slug:"component",normalizedTitle:"@component",charIndex:121},{level:3,title:"@Repository",slug:"repository",normalizedTitle:"@repository",charIndex:554},{level:3,title:"@Controller",slug:"controller",normalizedTitle:"@controller",charIndex:570},{level:3,title:"@Service",slug:"service",normalizedTitle:"@service",charIndex:586},{level:3,title:"@RestController",slug:"restcontroller",normalizedTitle:"@restcontroller",charIndex:632},{level:3,title:"@ResponseBody",slug:"responsebody",normalizedTitle:"@responsebody",charIndex:657},{level:3,title:"@ConfigurationProperties",slug:"configurationproperties",normalizedTitle:"@configurationproperties",charIndex:807}],headersStr:"SpringMVC常用注解 @SpringBootApplication @EnableAutoConfiguration @Configuration @ComponentScan @Component @Repository @Controller @Service @RestController @ResponseBody @ConfigurationProperties",content:"# SpringMVC常用注解\n\n\n# @SpringBootApplication\n\n组合注解\n\n> @SpringBootConfiguration : 代表这个类就是一个配置类 , 本质上就是@Configuration注解\n> \n> @ComponentScan : 组件扫描, 默认扫描启动类所在包及子包下的类身上的注解\n> \n> @EnableAutoConfiguration : 自动配置注解 , 添加了此注解会自动去读取spring.factories配置文件中的自动配置类\n\n用途\n\n> 标识这是一个SpringBoot应用，用来开启SpringBoot的各项功能\n\n\n# @EnableAutoConfiguration\n\n用途\n\n> 允许SpringBoot自动配置注解，开启这个注解之后，SpringBoot就能根据当前类路径下的包或者类来配置Spring Bean。\n\n\n# @Configuration\n\n用途\n\n> 用于定义配置类，指出该类是 Bean 配置的信息源\n\n\n# @ComponentScan\n\n用途\n\n> 组件扫描。让springBoot扫描到Configuration类并把它加入到程序上下文。\n\n\n# @Component\n\n用途\n\n> 泛指组件，\n\n\n# @Repository\n\n\n# @Controller\n\n\n# @Service\n\n> 分别表示Dao，Cotroller，Service层的标注\n\n\n# @RestController\n\n组合注解\n\n> @ResponseBody\n> \n> @Controller\n\n用途\n\n> 表示这是个控制器bean,并且是将函数的返回值直 接填入HTTP响应体中,是REST风格的控制器\n\n\n# @ResponseBody\n\n用途\n\n> 表示该方法的返回结果直接写入HTTP response body中\n\n\n# @ConfigurationProperties\n\n用途\n\n> 将一些配置属性(如yml/properties中的属性)批量注入到bean对象。",normalizedContent:"# springmvc常用注解\n\n\n# @springbootapplication\n\n组合注解\n\n> @springbootconfiguration : 代表这个类就是一个配置类 , 本质上就是@configuration注解\n> \n> @componentscan : 组件扫描, 默认扫描启动类所在包及子包下的类身上的注解\n> \n> @enableautoconfiguration : 自动配置注解 , 添加了此注解会自动去读取spring.factories配置文件中的自动配置类\n\n用途\n\n> 标识这是一个springboot应用，用来开启springboot的各项功能\n\n\n# @enableautoconfiguration\n\n用途\n\n> 允许springboot自动配置注解，开启这个注解之后，springboot就能根据当前类路径下的包或者类来配置spring bean。\n\n\n# @configuration\n\n用途\n\n> 用于定义配置类，指出该类是 bean 配置的信息源\n\n\n# @componentscan\n\n用途\n\n> 组件扫描。让springboot扫描到configuration类并把它加入到程序上下文。\n\n\n# @component\n\n用途\n\n> 泛指组件，\n\n\n# @repository\n\n\n# @controller\n\n\n# @service\n\n> 分别表示dao，cotroller，service层的标注\n\n\n# @restcontroller\n\n组合注解\n\n> @responsebody\n> \n> @controller\n\n用途\n\n> 表示这是个控制器bean,并且是将函数的返回值直 接填入http响应体中,是rest风格的控制器\n\n\n# @responsebody\n\n用途\n\n> 表示该方法的返回结果直接写入http response body中\n\n\n# @configurationproperties\n\n用途\n\n> 将一些配置属性(如yml/properties中的属性)批量注入到bean对象。",charsets:{cjk:!0}},{title:"Springboot基础配置",frontmatter:{title:"Springboot基础配置",date:"2022-01-24T19:33:40.000Z",permalink:"/pages/87a76e/",categories:["Spring系列","SpringBoot"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/30.SpringBoot/20.Springboot%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE.html",relativePath:"35.Spring系列/30.SpringBoot/20.Springboot基础配置.md",key:"v-48a7f63f",path:"/pages/87a76e/",headers:[{level:2,title:"Springboot基础配置",slug:"springboot基础配置",normalizedTitle:"springboot基础配置",charIndex:2},{level:3,title:"profiles配置多环境",slug:"profiles配置多环境",normalizedTitle:"profiles配置多环境",charIndex:21}],headersStr:"Springboot基础配置 profiles配置多环境",content:"# Springboot基础配置\n\n\n# profiles配置多环境\n\n参考\n\napplication-xxx.yml\n\napplication-xxx.yaml\n\napplication-xxx.properties\n\n在application.properties或application.yml中激活\n\n#properties方式\nspring.profiles.active=dev\n\n#yaml方式\nspring:\n  profiles:\n  \tactive: pro\n\n\n1\n2\n3\n4\n5\n6\n7\n",normalizedContent:"# springboot基础配置\n\n\n# profiles配置多环境\n\n参考\n\napplication-xxx.yml\n\napplication-xxx.yaml\n\napplication-xxx.properties\n\n在application.properties或application.yml中激活\n\n#properties方式\nspring.profiles.active=dev\n\n#yaml方式\nspring:\n  profiles:\n  \tactive: pro\n\n\n1\n2\n3\n4\n5\n6\n7\n",charsets:{cjk:!0}},{title:"源码分析",frontmatter:{title:"源码分析",date:"2022-01-24T20:59:01.000Z",permalink:"/pages/e37732/",categories:["Spring系列","SpringBoot"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/30.SpringBoot/40.%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90.html",relativePath:"35.Spring系列/30.SpringBoot/40.源码分析.md",key:"v-7f98913b",path:"/pages/e37732/",headers:[{level:2,title:"SpringBoot源码分析",slug:"springboot源码分析",normalizedTitle:"springboot源码分析",charIndex:2},{level:3,title:"WebMvcAutoConfiguration源码",slug:"webmvcautoconfiguration源码",normalizedTitle:"webmvcautoconfiguration源码",charIndex:21}],headersStr:"SpringBoot源码分析 WebMvcAutoConfiguration源码",content:'# SpringBoot源码分析\n\n\n# WebMvcAutoConfiguration源码\n\n> ConditionalXxx条件化选择注解，决定某个配置类是否满足条件，满足则生效\n\n注解                                作用\n@ConditionalOnBean                如果存在某个Bean, 配置类生效\n@ConditionalOnMissingBean         如果不存在某个Bean, 配置类生效\n@ConditionalOnClass               如果存在某个类, 配置类生效\n@ConditionalOnMissingClass        如果不存在某个类, 配置类生效\n@ConditionalOnProperty            如果存在某个属性配置, 配置类生效\n@ConditionalOnWebApplication      如果是一个web应用, 配置类生效\n@ConditionalOnNotWebApplication   如果不是一个web应用, 配置类生效\n\n举个例子\n\npackage org.springframework.boot.autoconfigure.web.servlet;\n\nimport java.time.Duration;\nimport java.util.Arrays;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.Map;\nimport java.util.Optional;\nimport java.util.stream.Stream;\nimport javax.servlet.Servlet;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.springframework.beans.factory.BeanFactory;\nimport org.springframework.beans.factory.ListableBeanFactory;\nimport org.springframework.beans.factory.NoSuchBeanDefinitionException;\nimport org.springframework.beans.factory.ObjectProvider;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.AutoConfigureOrder;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication.Type;\nimport org.springframework.boot.autoconfigure.http.HttpMessageConverters;\nimport org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration;\nimport org.springframework.boot.autoconfigure.template.TemplateAvailabilityProviders;\nimport org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration;\nimport org.springframework.boot.autoconfigure.validation.ValidatorAdapter;\nimport org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain;\nimport org.springframework.boot.autoconfigure.web.ResourceProperties;\nimport org.springframework.boot.autoconfigure.web.ResourceProperties.Chain;\nimport org.springframework.boot.autoconfigure.web.ResourceProperties.Strategy;\nimport org.springframework.boot.autoconfigure.web.format.DateTimeFormatters;\nimport org.springframework.boot.autoconfigure.web.format.WebConversionService;\nimport org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.Contentnegotiation;\nimport org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.Format;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.boot.convert.ApplicationConversionService;\nimport org.springframework.boot.web.servlet.ServletRegistrationBean;\nimport org.springframework.boot.web.servlet.filter.OrderedFormContentFilter;\nimport org.springframework.boot.web.servlet.filter.OrderedHiddenHttpMethodFilter;\nimport org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.ResourceLoaderAware;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\nimport org.springframework.context.annotation.Primary;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.core.io.Resource;\nimport org.springframework.core.io.ResourceLoader;\nimport org.springframework.core.task.AsyncTaskExecutor;\nimport org.springframework.format.FormatterRegistry;\nimport org.springframework.format.support.FormattingConversionService;\nimport org.springframework.http.CacheControl;\nimport org.springframework.http.MediaType;\nimport org.springframework.http.converter.HttpMessageConverter;\nimport org.springframework.util.ClassUtils;\nimport org.springframework.validation.DefaultMessageCodesResolver;\nimport org.springframework.validation.MessageCodesResolver;\nimport org.springframework.validation.Validator;\nimport org.springframework.web.HttpMediaTypeNotAcceptableException;\nimport org.springframework.web.accept.ContentNegotiationManager;\nimport org.springframework.web.accept.ContentNegotiationStrategy;\nimport org.springframework.web.accept.PathExtensionContentNegotiationStrategy;\nimport org.springframework.web.bind.support.ConfigurableWebBindingInitializer;\nimport org.springframework.web.context.request.NativeWebRequest;\nimport org.springframework.web.context.request.RequestContextListener;\nimport org.springframework.web.filter.FormContentFilter;\nimport org.springframework.web.filter.HiddenHttpMethodFilter;\nimport org.springframework.web.filter.RequestContextFilter;\nimport org.springframework.web.servlet.DispatcherServlet;\nimport org.springframework.web.servlet.HandlerExceptionResolver;\nimport org.springframework.web.servlet.LocaleResolver;\nimport org.springframework.web.servlet.View;\nimport org.springframework.web.servlet.ViewResolver;\nimport org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer;\nimport org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer;\nimport org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration;\nimport org.springframework.web.servlet.config.annotation.PathMatchConfigurer;\nimport org.springframework.web.servlet.config.annotation.ResourceChainRegistration;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\nimport org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver;\nimport org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver;\nimport org.springframework.web.servlet.i18n.FixedLocaleResolver;\nimport org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver;\nimport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter;\nimport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;\nimport org.springframework.web.servlet.resource.AppCacheManifestTransformer;\nimport org.springframework.web.servlet.resource.EncodedResourceResolver;\nimport org.springframework.web.servlet.resource.ResourceResolver;\nimport org.springframework.web.servlet.resource.ResourceUrlProvider;\nimport org.springframework.web.servlet.resource.VersionResourceResolver;\nimport org.springframework.web.servlet.view.BeanNameViewResolver;\nimport org.springframework.web.servlet.view.ContentNegotiatingViewResolver;\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\nimport org.springframework.web.util.UrlPathHelper;\n\n@Configuration(\n    proxyBeanMethods = false\n)\n//是否为一个web应用，pom引入了starter-web则表示一个web应用\n@ConditionalOnWebApplication(\n    type = Type.SERVLET\n)\n//是否存在这三个类，存在则生效\n@ConditionalOnClass({Servlet.class, DispatcherServlet.class, WebMvcConfigurer.class})\n//不存在WebMvcConfigurationSupport则生效\n@ConditionalOnMissingBean({WebMvcConfigurationSupport.class})\n//优先级\n@AutoConfigureOrder(-2147483638)\n//等这些配置类配置完后才生效\n@AutoConfigureAfter({DispatcherServletAutoConfiguration.class, TaskExecutionAutoConfiguration.class, ValidationAutoConfiguration.class})\n\n//满足以上调教则该配置类开始自动配置生效\npublic class WebMvcAutoConfiguration {\n    public static final String DEFAULT_PREFIX = "";\n    public static final String DEFAULT_SUFFIX = "";\n    private static final String[] SERVLET_LOCATIONS = new String[]{"/"};\n\n    public WebMvcAutoConfiguration() {\n    }\n\n    //做Restful风格的\n    @Bean\n    //如果存在了就不用z\n    @ConditionalOnMissingBean({HiddenHttpMethodFilter.class})\n    @ConditionalOnProperty(\n        prefix = "spring.mvc.hiddenmethod.filter",\n        name = {"enabled"},\n        matchIfMissing = false\n    )\n    public OrderedHiddenHttpMethodFilter hiddenHttpMethodFilter() {\n        return new OrderedHiddenHttpMethodFilter();\n    }\n\n    @Bean\n    @ConditionalOnMissingBean({FormContentFilter.class})\n    @ConditionalOnProperty(\n        prefix = "spring.mvc.formcontent.filter",\n        name = {"enabled"},\n        matchIfMissing = true\n    )\n    public OrderedFormContentFilter formContentFilter() {\n        return new OrderedFormContentFilter();\n    }\n\n    static String[] getResourceLocations(String[] staticLocations) {\n        String[] locations = new String[staticLocations.length + SERVLET_LOCATIONS.length];\n        System.arraycopy(staticLocations, 0, locations, 0, staticLocations.length);\n        System.arraycopy(SERVLET_LOCATIONS, 0, locations, staticLocations.length, SERVLET_LOCATIONS.length);\n        return locations;\n    }\n\n    static class OptionalPathExtensionContentNegotiationStrategy implements ContentNegotiationStrategy {\n        private static final String SKIP_ATTRIBUTE = PathExtensionContentNegotiationStrategy.class.getName() + ".SKIP";\n        private final ContentNegotiationStrategy delegate;\n\n        OptionalPathExtensionContentNegotiationStrategy(ContentNegotiationStrategy delegate) {\n            this.delegate = delegate;\n        }\n\n        public List<MediaType> resolveMediaTypes(NativeWebRequest webRequest) throws HttpMediaTypeNotAcceptableException {\n            Object skip = webRequest.getAttribute(SKIP_ATTRIBUTE, 0);\n            return skip != null && Boolean.parseBoolean(skip.toString()) ? MEDIA_TYPE_ALL_LIST : this.delegate.resolveMediaTypes(webRequest);\n        }\n    }\n\n    static class ResourceChainResourceHandlerRegistrationCustomizer implements WebMvcAutoConfiguration.ResourceHandlerRegistrationCustomizer {\n        @Autowired\n        private ResourceProperties resourceProperties = new ResourceProperties();\n\n        ResourceChainResourceHandlerRegistrationCustomizer() {\n        }\n\n        public void customize(ResourceHandlerRegistration registration) {\n            Chain properties = this.resourceProperties.getChain();\n            this.configureResourceChain(properties, registration.resourceChain(properties.isCache()));\n        }\n\n        private void configureResourceChain(Chain properties, ResourceChainRegistration chain) {\n            Strategy strategy = properties.getStrategy();\n            if (properties.isCompressed()) {\n                chain.addResolver(new EncodedResourceResolver());\n            }\n\n            if (strategy.getFixed().isEnabled() || strategy.getContent().isEnabled()) {\n                chain.addResolver(this.getVersionResourceResolver(strategy));\n            }\n\n            if (properties.isHtmlApplicationCache()) {\n                chain.addTransformer(new AppCacheManifestTransformer());\n            }\n\n        }\n\n        private ResourceResolver getVersionResourceResolver(Strategy properties) {\n            VersionResourceResolver resolver = new VersionResourceResolver();\n            if (properties.getFixed().isEnabled()) {\n                String version = properties.getFixed().getVersion();\n                String[] paths = properties.getFixed().getPaths();\n                resolver.addFixedVersionStrategy(version, paths);\n            }\n\n            if (properties.getContent().isEnabled()) {\n                String[] paths = properties.getContent().getPaths();\n                resolver.addContentVersionStrategy(paths);\n            }\n\n            return resolver;\n        }\n    }\n\n    interface ResourceHandlerRegistrationCustomizer {\n        void customize(ResourceHandlerRegistration registration);\n    }\n\n    @Configuration(\n        proxyBeanMethods = false\n    )\n    @ConditionalOnEnabledResourceChain\n    static class ResourceChainCustomizerConfiguration {\n        ResourceChainCustomizerConfiguration() {\n        }\n\n        @Bean\n        WebMvcAutoConfiguration.ResourceChainResourceHandlerRegistrationCustomizer resourceHandlerRegistrationCustomizer() {\n            return new WebMvcAutoConfiguration.ResourceChainResourceHandlerRegistrationCustomizer();\n        }\n    }\n\n    @Configuration(\n        proxyBeanMethods = false\n    )\n    public static class EnableWebMvcConfiguration extends DelegatingWebMvcConfiguration implements ResourceLoaderAware {\n        private final ResourceProperties resourceProperties;\n        private final WebMvcProperties mvcProperties;\n        private final ListableBeanFactory beanFactory;\n        private final WebMvcRegistrations mvcRegistrations;\n        private ResourceLoader resourceLoader;\n\n        public EnableWebMvcConfiguration(ResourceProperties resourceProperties, ObjectProvider<WebMvcProperties> mvcPropertiesProvider, ObjectProvider<WebMvcRegistrations> mvcRegistrationsProvider, ListableBeanFactory beanFactory) {\n            this.resourceProperties = resourceProperties;\n            this.mvcProperties = (WebMvcProperties)mvcPropertiesProvider.getIfAvailable();\n            this.mvcRegistrations = (WebMvcRegistrations)mvcRegistrationsProvider.getIfUnique();\n            this.beanFactory = beanFactory;\n        }\n\n        @Bean\n        public RequestMappingHandlerAdapter requestMappingHandlerAdapter(@Qualifier("mvcContentNegotiationManager") ContentNegotiationManager contentNegotiationManager, @Qualifier("mvcConversionService") FormattingConversionService conversionService, @Qualifier("mvcValidator") Validator validator) {\n            RequestMappingHandlerAdapter adapter = super.requestMappingHandlerAdapter(contentNegotiationManager, conversionService, validator);\n            adapter.setIgnoreDefaultModelOnRedirect(this.mvcProperties == null || this.mvcProperties.isIgnoreDefaultModelOnRedirect());\n            return adapter;\n        }\n\n        protected RequestMappingHandlerAdapter createRequestMappingHandlerAdapter() {\n            if (this.mvcRegistrations != null) {\n                RequestMappingHandlerAdapter adapter = this.mvcRegistrations.getRequestMappingHandlerAdapter();\n                if (adapter != null) {\n                    return adapter;\n                }\n            }\n\n            return super.createRequestMappingHandlerAdapter();\n        }\n\n        @Bean\n        @Primary\n        public RequestMappingHandlerMapping requestMappingHandlerMapping(@Qualifier("mvcContentNegotiationManager") ContentNegotiationManager contentNegotiationManager, @Qualifier("mvcConversionService") FormattingConversionService conversionService, @Qualifier("mvcResourceUrlProvider") ResourceUrlProvider resourceUrlProvider) {\n            return super.requestMappingHandlerMapping(contentNegotiationManager, conversionService, resourceUrlProvider);\n        }\n\n        @Bean\n        public WelcomePageHandlerMapping welcomePageHandlerMapping(ApplicationContext applicationContext, FormattingConversionService mvcConversionService, ResourceUrlProvider mvcResourceUrlProvider) {\n            WelcomePageHandlerMapping welcomePageHandlerMapping = new WelcomePageHandlerMapping(new TemplateAvailabilityProviders(applicationContext), applicationContext, this.getWelcomePage(), this.mvcProperties.getStaticPathPattern());\n            welcomePageHandlerMapping.setInterceptors(this.getInterceptors(mvcConversionService, mvcResourceUrlProvider));\n            welcomePageHandlerMapping.setCorsConfigurations(this.getCorsConfigurations());\n            return welcomePageHandlerMapping;\n        }\n\n        private Optional<Resource> getWelcomePage() {\n            String[] locations = WebMvcAutoConfiguration.getResourceLocations(this.resourceProperties.getStaticLocations());\n            return Arrays.stream(locations).map(this::getIndexHtml).filter(this::isReadable).findFirst();\n        }\n\n        private Resource getIndexHtml(String location) {\n            return this.resourceLoader.getResource(location + "index.html");\n        }\n\n        private boolean isReadable(Resource resource) {\n            try {\n                return resource.exists() && resource.getURL() != null;\n            } catch (Exception var3) {\n                return false;\n            }\n        }\n\n        @Bean\n        public FormattingConversionService mvcConversionService() {\n            Format format = this.mvcProperties.getFormat();\n            WebConversionService conversionService = new WebConversionService((new DateTimeFormatters()).dateFormat(format.getDate()).timeFormat(format.getTime()).dateTimeFormat(format.getDateTime()));\n            this.addFormatters(conversionService);\n            return conversionService;\n        }\n\n        @Bean\n        public Validator mvcValidator() {\n            return !ClassUtils.isPresent("javax.validation.Validator", this.getClass().getClassLoader()) ? super.mvcValidator() : ValidatorAdapter.get(this.getApplicationContext(), this.getValidator());\n        }\n\n        protected RequestMappingHandlerMapping createRequestMappingHandlerMapping() {\n            if (this.mvcRegistrations != null) {\n                RequestMappingHandlerMapping mapping = this.mvcRegistrations.getRequestMappingHandlerMapping();\n                if (mapping != null) {\n                    return mapping;\n                }\n            }\n\n            return super.createRequestMappingHandlerMapping();\n        }\n\n        protected ConfigurableWebBindingInitializer getConfigurableWebBindingInitializer(FormattingConversionService mvcConversionService, Validator mvcValidator) {\n            try {\n                return (ConfigurableWebBindingInitializer)this.beanFactory.getBean(ConfigurableWebBindingInitializer.class);\n            } catch (NoSuchBeanDefinitionException var4) {\n                return super.getConfigurableWebBindingInitializer(mvcConversionService, mvcValidator);\n            }\n        }\n\n        protected ExceptionHandlerExceptionResolver createExceptionHandlerExceptionResolver() {\n            if (this.mvcRegistrations != null) {\n                ExceptionHandlerExceptionResolver resolver = this.mvcRegistrations.getExceptionHandlerExceptionResolver();\n                if (resolver != null) {\n                    return resolver;\n                }\n            }\n\n            return super.createExceptionHandlerExceptionResolver();\n        }\n\n        protected void extendHandlerExceptionResolvers(List<HandlerExceptionResolver> exceptionResolvers) {\n            super.extendHandlerExceptionResolvers(exceptionResolvers);\n            if (this.mvcProperties.isLogResolvedException()) {\n                Iterator var2 = exceptionResolvers.iterator();\n\n                while(var2.hasNext()) {\n                    HandlerExceptionResolver resolver = (HandlerExceptionResolver)var2.next();\n                    if (resolver instanceof AbstractHandlerExceptionResolver) {\n                        ((AbstractHandlerExceptionResolver)resolver).setWarnLogCategory(resolver.getClass().getName());\n                    }\n                }\n            }\n\n        }\n\n        @Bean\n        public ContentNegotiationManager mvcContentNegotiationManager() {\n            ContentNegotiationManager manager = super.mvcContentNegotiationManager();\n            List<ContentNegotiationStrategy> strategies = manager.getStrategies();\n            ListIterator iterator = strategies.listIterator();\n\n            while(iterator.hasNext()) {\n                ContentNegotiationStrategy strategy = (ContentNegotiationStrategy)iterator.next();\n                if (strategy instanceof PathExtensionContentNegotiationStrategy) {\n                    iterator.set(new WebMvcAutoConfiguration.OptionalPathExtensionContentNegotiationStrategy(strategy));\n                }\n            }\n\n            return manager;\n        }\n\n        public void setResourceLoader(ResourceLoader resourceLoader) {\n            this.resourceLoader = resourceLoader;\n        }\n    }\n\n    @Configuration(\n        proxyBeanMethods = false\n    )\n    @Import({WebMvcAutoConfiguration.EnableWebMvcConfiguration.class})\n    @EnableConfigurationProperties({WebMvcProperties.class, ResourceProperties.class})\n    @Order(0)\n    public static class WebMvcAutoConfigurationAdapter implements WebMvcConfigurer {\n        private static final Log logger = LogFactory.getLog(WebMvcConfigurer.class);\n        private final ResourceProperties resourceProperties;\n        private final WebMvcProperties mvcProperties;\n        private final ListableBeanFactory beanFactory;\n        private final ObjectProvider<HttpMessageConverters> messageConvertersProvider;\n        private final ObjectProvider<DispatcherServletPath> dispatcherServletPath;\n        private final ObjectProvider<ServletRegistrationBean<?>> servletRegistrations;\n        final WebMvcAutoConfiguration.ResourceHandlerRegistrationCustomizer resourceHandlerRegistrationCustomizer;\n\n        public WebMvcAutoConfigurationAdapter(ResourceProperties resourceProperties, WebMvcProperties mvcProperties, ListableBeanFactory beanFactory, ObjectProvider<HttpMessageConverters> messageConvertersProvider, ObjectProvider<WebMvcAutoConfiguration.ResourceHandlerRegistrationCustomizer> resourceHandlerRegistrationCustomizerProvider, ObjectProvider<DispatcherServletPath> dispatcherServletPath, ObjectProvider<ServletRegistrationBean<?>> servletRegistrations) {\n            this.resourceProperties = resourceProperties;\n            this.mvcProperties = mvcProperties;\n            this.beanFactory = beanFactory;\n            this.messageConvertersProvider = messageConvertersProvider;\n            this.resourceHandlerRegistrationCustomizer = (WebMvcAutoConfiguration.ResourceHandlerRegistrationCustomizer)resourceHandlerRegistrationCustomizerProvider.getIfAvailable();\n            this.dispatcherServletPath = dispatcherServletPath;\n            this.servletRegistrations = servletRegistrations;\n        }\n\n        public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n            this.messageConvertersProvider.ifAvailable((customConverters) -> {\n                converters.addAll(customConverters.getConverters());\n            });\n        }\n\n        public void configureAsyncSupport(AsyncSupportConfigurer configurer) {\n            if (this.beanFactory.containsBean("applicationTaskExecutor")) {\n                Object taskExecutor = this.beanFactory.getBean("applicationTaskExecutor");\n                if (taskExecutor instanceof AsyncTaskExecutor) {\n                    configurer.setTaskExecutor((AsyncTaskExecutor)taskExecutor);\n                }\n            }\n\n            Duration timeout = this.mvcProperties.getAsync().getRequestTimeout();\n            if (timeout != null) {\n                configurer.setDefaultTimeout(timeout.toMillis());\n            }\n\n        }\n\n        public void configurePathMatch(PathMatchConfigurer configurer) {\n            configurer.setUseSuffixPatternMatch(this.mvcProperties.getPathmatch().isUseSuffixPattern());\n            configurer.setUseRegisteredSuffixPatternMatch(this.mvcProperties.getPathmatch().isUseRegisteredSuffixPattern());\n            this.dispatcherServletPath.ifAvailable((dispatcherPath) -> {\n                String servletUrlMapping = dispatcherPath.getServletUrlMapping();\n                if (servletUrlMapping.equals("/") && this.singleDispatcherServlet()) {\n                    UrlPathHelper urlPathHelper = new UrlPathHelper();\n                    urlPathHelper.setAlwaysUseFullPath(true);\n                    configurer.setUrlPathHelper(urlPathHelper);\n                }\n\n            });\n        }\n\n        private boolean singleDispatcherServlet() {\n            Stream var10000 = this.servletRegistrations.stream().map(ServletRegistrationBean::getServlet);\n            DispatcherServlet.class.getClass();\n            return var10000.filter(DispatcherServlet.class::isInstance).count() == 1L;\n        }\n\n        public void configureContentNegotiation(ContentNegotiationConfigurer configurer) {\n            Contentnegotiation contentnegotiation = this.mvcProperties.getContentnegotiation();\n            configurer.favorPathExtension(contentnegotiation.isFavorPathExtension());\n            configurer.favorParameter(contentnegotiation.isFavorParameter());\n            if (contentnegotiation.getParameterName() != null) {\n                configurer.parameterName(contentnegotiation.getParameterName());\n            }\n\n            Map<String, MediaType> mediaTypes = this.mvcProperties.getContentnegotiation().getMediaTypes();\n            mediaTypes.forEach(configurer::mediaType);\n        }\n\n        @Bean\n        @ConditionalOnMissingBean\n        public InternalResourceViewResolver defaultViewResolver() {\n            InternalResourceViewResolver resolver = new InternalResourceViewResolver();\n            resolver.setPrefix(this.mvcProperties.getView().getPrefix());\n            resolver.setSuffix(this.mvcProperties.getView().getSuffix());\n            return resolver;\n        }\n\n        @Bean\n        @ConditionalOnBean({View.class})\n        @ConditionalOnMissingBean\n        public BeanNameViewResolver beanNameViewResolver() {\n            BeanNameViewResolver resolver = new BeanNameViewResolver();\n            resolver.setOrder(2147483637);\n            return resolver;\n        }\n\n        @Bean\n        @ConditionalOnBean({ViewResolver.class})\n        @ConditionalOnMissingBean(\n            name = {"viewResolver"},\n            value = {ContentNegotiatingViewResolver.class}\n        )\n        public ContentNegotiatingViewResolver viewResolver(BeanFactory beanFactory) {\n            ContentNegotiatingViewResolver resolver = new ContentNegotiatingViewResolver();\n            resolver.setContentNegotiationManager((ContentNegotiationManager)beanFactory.getBean(ContentNegotiationManager.class));\n            resolver.setOrder(-2147483648);\n            return resolver;\n        }\n\n        @Bean\n        @ConditionalOnMissingBean\n        @ConditionalOnProperty(\n            prefix = "spring.mvc",\n            name = {"locale"}\n        )\n        public LocaleResolver localeResolver() {\n            if (this.mvcProperties.getLocaleResolver() == org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties.LocaleResolver.FIXED) {\n                return new FixedLocaleResolver(this.mvcProperties.getLocale());\n            } else {\n                AcceptHeaderLocaleResolver localeResolver = new AcceptHeaderLocaleResolver();\n                localeResolver.setDefaultLocale(this.mvcProperties.getLocale());\n                return localeResolver;\n            }\n        }\n\n        public MessageCodesResolver getMessageCodesResolver() {\n            if (this.mvcProperties.getMessageCodesResolverFormat() != null) {\n                DefaultMessageCodesResolver resolver = new DefaultMessageCodesResolver();\n                resolver.setMessageCodeFormatter(this.mvcProperties.getMessageCodesResolverFormat());\n                return resolver;\n            } else {\n                return null;\n            }\n        }\n\n        public void addFormatters(FormatterRegistry registry) {\n            ApplicationConversionService.addBeans(registry, this.beanFactory);\n        }\n\n        public void addResourceHandlers(ResourceHandlerRegistry registry) {\n            if (!this.resourceProperties.isAddMappings()) {\n                logger.debug("Default resource handling disabled");\n            } else {\n                Duration cachePeriod = this.resourceProperties.getCache().getPeriod();\n                CacheControl cacheControl = this.resourceProperties.getCache().getCachecontrol().toHttpCacheControl();\n                if (!registry.hasMappingForPattern("/webjars/**")) {\n                    this.customizeResourceHandlerRegistration(registry.addResourceHandler(new String[]{"/webjars/**"}).addResourceLocations(new String[]{"classpath:/META-INF/resources/webjars/"}).setCachePeriod(this.getSeconds(cachePeriod)).setCacheControl(cacheControl));\n                }\n\n                String staticPathPattern = this.mvcProperties.getStaticPathPattern();\n                if (!registry.hasMappingForPattern(staticPathPattern)) {\n                    this.customizeResourceHandlerRegistration(registry.addResourceHandler(new String[]{staticPathPattern}).addResourceLocations(WebMvcAutoConfiguration.getResourceLocations(this.resourceProperties.getStaticLocations())).setCachePeriod(this.getSeconds(cachePeriod)).setCacheControl(cacheControl));\n                }\n\n            }\n        }\n\n        private Integer getSeconds(Duration cachePeriod) {\n            return cachePeriod != null ? (int)cachePeriod.getSeconds() : null;\n        }\n\n        private void customizeResourceHandlerRegistration(ResourceHandlerRegistration registration) {\n            if (this.resourceHandlerRegistrationCustomizer != null) {\n                this.resourceHandlerRegistrationCustomizer.customize(registration);\n            }\n\n        }\n\n        @Bean\n        @ConditionalOnMissingBean({RequestContextListener.class, RequestContextFilter.class})\n        @ConditionalOnMissingFilterBean({RequestContextFilter.class})\n        public static RequestContextFilter requestContextFilter() {\n            return new OrderedRequestContextFilter();\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n',normalizedContent:'# springboot源码分析\n\n\n# webmvcautoconfiguration源码\n\n> conditionalxxx条件化选择注解，决定某个配置类是否满足条件，满足则生效\n\n注解                                作用\n@conditionalonbean                如果存在某个bean, 配置类生效\n@conditionalonmissingbean         如果不存在某个bean, 配置类生效\n@conditionalonclass               如果存在某个类, 配置类生效\n@conditionalonmissingclass        如果不存在某个类, 配置类生效\n@conditionalonproperty            如果存在某个属性配置, 配置类生效\n@conditionalonwebapplication      如果是一个web应用, 配置类生效\n@conditionalonnotwebapplication   如果不是一个web应用, 配置类生效\n\n举个例子\n\npackage org.springframework.boot.autoconfigure.web.servlet;\n\nimport java.time.duration;\nimport java.util.arrays;\nimport java.util.iterator;\nimport java.util.list;\nimport java.util.listiterator;\nimport java.util.map;\nimport java.util.optional;\nimport java.util.stream.stream;\nimport javax.servlet.servlet;\nimport org.apache.commons.logging.log;\nimport org.apache.commons.logging.logfactory;\nimport org.springframework.beans.factory.beanfactory;\nimport org.springframework.beans.factory.listablebeanfactory;\nimport org.springframework.beans.factory.nosuchbeandefinitionexception;\nimport org.springframework.beans.factory.objectprovider;\nimport org.springframework.beans.factory.annotation.autowired;\nimport org.springframework.beans.factory.annotation.qualifier;\nimport org.springframework.boot.autoconfigure.autoconfigureafter;\nimport org.springframework.boot.autoconfigure.autoconfigureorder;\nimport org.springframework.boot.autoconfigure.condition.conditionalonbean;\nimport org.springframework.boot.autoconfigure.condition.conditionalonclass;\nimport org.springframework.boot.autoconfigure.condition.conditionalonmissingbean;\nimport org.springframework.boot.autoconfigure.condition.conditionalonproperty;\nimport org.springframework.boot.autoconfigure.condition.conditionalonwebapplication;\nimport org.springframework.boot.autoconfigure.condition.conditionalonwebapplication.type;\nimport org.springframework.boot.autoconfigure.http.httpmessageconverters;\nimport org.springframework.boot.autoconfigure.task.taskexecutionautoconfiguration;\nimport org.springframework.boot.autoconfigure.template.templateavailabilityproviders;\nimport org.springframework.boot.autoconfigure.validation.validationautoconfiguration;\nimport org.springframework.boot.autoconfigure.validation.validatoradapter;\nimport org.springframework.boot.autoconfigure.web.conditionalonenabledresourcechain;\nimport org.springframework.boot.autoconfigure.web.resourceproperties;\nimport org.springframework.boot.autoconfigure.web.resourceproperties.chain;\nimport org.springframework.boot.autoconfigure.web.resourceproperties.strategy;\nimport org.springframework.boot.autoconfigure.web.format.datetimeformatters;\nimport org.springframework.boot.autoconfigure.web.format.webconversionservice;\nimport org.springframework.boot.autoconfigure.web.servlet.webmvcproperties.contentnegotiation;\nimport org.springframework.boot.autoconfigure.web.servlet.webmvcproperties.format;\nimport org.springframework.boot.context.properties.enableconfigurationproperties;\nimport org.springframework.boot.convert.applicationconversionservice;\nimport org.springframework.boot.web.servlet.servletregistrationbean;\nimport org.springframework.boot.web.servlet.filter.orderedformcontentfilter;\nimport org.springframework.boot.web.servlet.filter.orderedhiddenhttpmethodfilter;\nimport org.springframework.boot.web.servlet.filter.orderedrequestcontextfilter;\nimport org.springframework.context.applicationcontext;\nimport org.springframework.context.resourceloaderaware;\nimport org.springframework.context.annotation.bean;\nimport org.springframework.context.annotation.configuration;\nimport org.springframework.context.annotation.import;\nimport org.springframework.context.annotation.primary;\nimport org.springframework.core.annotation.order;\nimport org.springframework.core.io.resource;\nimport org.springframework.core.io.resourceloader;\nimport org.springframework.core.task.asynctaskexecutor;\nimport org.springframework.format.formatterregistry;\nimport org.springframework.format.support.formattingconversionservice;\nimport org.springframework.http.cachecontrol;\nimport org.springframework.http.mediatype;\nimport org.springframework.http.converter.httpmessageconverter;\nimport org.springframework.util.classutils;\nimport org.springframework.validation.defaultmessagecodesresolver;\nimport org.springframework.validation.messagecodesresolver;\nimport org.springframework.validation.validator;\nimport org.springframework.web.httpmediatypenotacceptableexception;\nimport org.springframework.web.accept.contentnegotiationmanager;\nimport org.springframework.web.accept.contentnegotiationstrategy;\nimport org.springframework.web.accept.pathextensioncontentnegotiationstrategy;\nimport org.springframework.web.bind.support.configurablewebbindinginitializer;\nimport org.springframework.web.context.request.nativewebrequest;\nimport org.springframework.web.context.request.requestcontextlistener;\nimport org.springframework.web.filter.formcontentfilter;\nimport org.springframework.web.filter.hiddenhttpmethodfilter;\nimport org.springframework.web.filter.requestcontextfilter;\nimport org.springframework.web.servlet.dispatcherservlet;\nimport org.springframework.web.servlet.handlerexceptionresolver;\nimport org.springframework.web.servlet.localeresolver;\nimport org.springframework.web.servlet.view;\nimport org.springframework.web.servlet.viewresolver;\nimport org.springframework.web.servlet.config.annotation.asyncsupportconfigurer;\nimport org.springframework.web.servlet.config.annotation.contentnegotiationconfigurer;\nimport org.springframework.web.servlet.config.annotation.delegatingwebmvcconfiguration;\nimport org.springframework.web.servlet.config.annotation.pathmatchconfigurer;\nimport org.springframework.web.servlet.config.annotation.resourcechainregistration;\nimport org.springframework.web.servlet.config.annotation.resourcehandlerregistration;\nimport org.springframework.web.servlet.config.annotation.resourcehandlerregistry;\nimport org.springframework.web.servlet.config.annotation.webmvcconfigurationsupport;\nimport org.springframework.web.servlet.config.annotation.webmvcconfigurer;\nimport org.springframework.web.servlet.handler.abstracthandlerexceptionresolver;\nimport org.springframework.web.servlet.i18n.acceptheaderlocaleresolver;\nimport org.springframework.web.servlet.i18n.fixedlocaleresolver;\nimport org.springframework.web.servlet.mvc.method.annotation.exceptionhandlerexceptionresolver;\nimport org.springframework.web.servlet.mvc.method.annotation.requestmappinghandleradapter;\nimport org.springframework.web.servlet.mvc.method.annotation.requestmappinghandlermapping;\nimport org.springframework.web.servlet.resource.appcachemanifesttransformer;\nimport org.springframework.web.servlet.resource.encodedresourceresolver;\nimport org.springframework.web.servlet.resource.resourceresolver;\nimport org.springframework.web.servlet.resource.resourceurlprovider;\nimport org.springframework.web.servlet.resource.versionresourceresolver;\nimport org.springframework.web.servlet.view.beannameviewresolver;\nimport org.springframework.web.servlet.view.contentnegotiatingviewresolver;\nimport org.springframework.web.servlet.view.internalresourceviewresolver;\nimport org.springframework.web.util.urlpathhelper;\n\n@configuration(\n    proxybeanmethods = false\n)\n//是否为一个web应用，pom引入了starter-web则表示一个web应用\n@conditionalonwebapplication(\n    type = type.servlet\n)\n//是否存在这三个类，存在则生效\n@conditionalonclass({servlet.class, dispatcherservlet.class, webmvcconfigurer.class})\n//不存在webmvcconfigurationsupport则生效\n@conditionalonmissingbean({webmvcconfigurationsupport.class})\n//优先级\n@autoconfigureorder(-2147483638)\n//等这些配置类配置完后才生效\n@autoconfigureafter({dispatcherservletautoconfiguration.class, taskexecutionautoconfiguration.class, validationautoconfiguration.class})\n\n//满足以上调教则该配置类开始自动配置生效\npublic class webmvcautoconfiguration {\n    public static final string default_prefix = "";\n    public static final string default_suffix = "";\n    private static final string[] servlet_locations = new string[]{"/"};\n\n    public webmvcautoconfiguration() {\n    }\n\n    //做restful风格的\n    @bean\n    //如果存在了就不用z\n    @conditionalonmissingbean({hiddenhttpmethodfilter.class})\n    @conditionalonproperty(\n        prefix = "spring.mvc.hiddenmethod.filter",\n        name = {"enabled"},\n        matchifmissing = false\n    )\n    public orderedhiddenhttpmethodfilter hiddenhttpmethodfilter() {\n        return new orderedhiddenhttpmethodfilter();\n    }\n\n    @bean\n    @conditionalonmissingbean({formcontentfilter.class})\n    @conditionalonproperty(\n        prefix = "spring.mvc.formcontent.filter",\n        name = {"enabled"},\n        matchifmissing = true\n    )\n    public orderedformcontentfilter formcontentfilter() {\n        return new orderedformcontentfilter();\n    }\n\n    static string[] getresourcelocations(string[] staticlocations) {\n        string[] locations = new string[staticlocations.length + servlet_locations.length];\n        system.arraycopy(staticlocations, 0, locations, 0, staticlocations.length);\n        system.arraycopy(servlet_locations, 0, locations, staticlocations.length, servlet_locations.length);\n        return locations;\n    }\n\n    static class optionalpathextensioncontentnegotiationstrategy implements contentnegotiationstrategy {\n        private static final string skip_attribute = pathextensioncontentnegotiationstrategy.class.getname() + ".skip";\n        private final contentnegotiationstrategy delegate;\n\n        optionalpathextensioncontentnegotiationstrategy(contentnegotiationstrategy delegate) {\n            this.delegate = delegate;\n        }\n\n        public list<mediatype> resolvemediatypes(nativewebrequest webrequest) throws httpmediatypenotacceptableexception {\n            object skip = webrequest.getattribute(skip_attribute, 0);\n            return skip != null && boolean.parseboolean(skip.tostring()) ? media_type_all_list : this.delegate.resolvemediatypes(webrequest);\n        }\n    }\n\n    static class resourcechainresourcehandlerregistrationcustomizer implements webmvcautoconfiguration.resourcehandlerregistrationcustomizer {\n        @autowired\n        private resourceproperties resourceproperties = new resourceproperties();\n\n        resourcechainresourcehandlerregistrationcustomizer() {\n        }\n\n        public void customize(resourcehandlerregistration registration) {\n            chain properties = this.resourceproperties.getchain();\n            this.configureresourcechain(properties, registration.resourcechain(properties.iscache()));\n        }\n\n        private void configureresourcechain(chain properties, resourcechainregistration chain) {\n            strategy strategy = properties.getstrategy();\n            if (properties.iscompressed()) {\n                chain.addresolver(new encodedresourceresolver());\n            }\n\n            if (strategy.getfixed().isenabled() || strategy.getcontent().isenabled()) {\n                chain.addresolver(this.getversionresourceresolver(strategy));\n            }\n\n            if (properties.ishtmlapplicationcache()) {\n                chain.addtransformer(new appcachemanifesttransformer());\n            }\n\n        }\n\n        private resourceresolver getversionresourceresolver(strategy properties) {\n            versionresourceresolver resolver = new versionresourceresolver();\n            if (properties.getfixed().isenabled()) {\n                string version = properties.getfixed().getversion();\n                string[] paths = properties.getfixed().getpaths();\n                resolver.addfixedversionstrategy(version, paths);\n            }\n\n            if (properties.getcontent().isenabled()) {\n                string[] paths = properties.getcontent().getpaths();\n                resolver.addcontentversionstrategy(paths);\n            }\n\n            return resolver;\n        }\n    }\n\n    interface resourcehandlerregistrationcustomizer {\n        void customize(resourcehandlerregistration registration);\n    }\n\n    @configuration(\n        proxybeanmethods = false\n    )\n    @conditionalonenabledresourcechain\n    static class resourcechaincustomizerconfiguration {\n        resourcechaincustomizerconfiguration() {\n        }\n\n        @bean\n        webmvcautoconfiguration.resourcechainresourcehandlerregistrationcustomizer resourcehandlerregistrationcustomizer() {\n            return new webmvcautoconfiguration.resourcechainresourcehandlerregistrationcustomizer();\n        }\n    }\n\n    @configuration(\n        proxybeanmethods = false\n    )\n    public static class enablewebmvcconfiguration extends delegatingwebmvcconfiguration implements resourceloaderaware {\n        private final resourceproperties resourceproperties;\n        private final webmvcproperties mvcproperties;\n        private final listablebeanfactory beanfactory;\n        private final webmvcregistrations mvcregistrations;\n        private resourceloader resourceloader;\n\n        public enablewebmvcconfiguration(resourceproperties resourceproperties, objectprovider<webmvcproperties> mvcpropertiesprovider, objectprovider<webmvcregistrations> mvcregistrationsprovider, listablebeanfactory beanfactory) {\n            this.resourceproperties = resourceproperties;\n            this.mvcproperties = (webmvcproperties)mvcpropertiesprovider.getifavailable();\n            this.mvcregistrations = (webmvcregistrations)mvcregistrationsprovider.getifunique();\n            this.beanfactory = beanfactory;\n        }\n\n        @bean\n        public requestmappinghandleradapter requestmappinghandleradapter(@qualifier("mvccontentnegotiationmanager") contentnegotiationmanager contentnegotiationmanager, @qualifier("mvcconversionservice") formattingconversionservice conversionservice, @qualifier("mvcvalidator") validator validator) {\n            requestmappinghandleradapter adapter = super.requestmappinghandleradapter(contentnegotiationmanager, conversionservice, validator);\n            adapter.setignoredefaultmodelonredirect(this.mvcproperties == null || this.mvcproperties.isignoredefaultmodelonredirect());\n            return adapter;\n        }\n\n        protected requestmappinghandleradapter createrequestmappinghandleradapter() {\n            if (this.mvcregistrations != null) {\n                requestmappinghandleradapter adapter = this.mvcregistrations.getrequestmappinghandleradapter();\n                if (adapter != null) {\n                    return adapter;\n                }\n            }\n\n            return super.createrequestmappinghandleradapter();\n        }\n\n        @bean\n        @primary\n        public requestmappinghandlermapping requestmappinghandlermapping(@qualifier("mvccontentnegotiationmanager") contentnegotiationmanager contentnegotiationmanager, @qualifier("mvcconversionservice") formattingconversionservice conversionservice, @qualifier("mvcresourceurlprovider") resourceurlprovider resourceurlprovider) {\n            return super.requestmappinghandlermapping(contentnegotiationmanager, conversionservice, resourceurlprovider);\n        }\n\n        @bean\n        public welcomepagehandlermapping welcomepagehandlermapping(applicationcontext applicationcontext, formattingconversionservice mvcconversionservice, resourceurlprovider mvcresourceurlprovider) {\n            welcomepagehandlermapping welcomepagehandlermapping = new welcomepagehandlermapping(new templateavailabilityproviders(applicationcontext), applicationcontext, this.getwelcomepage(), this.mvcproperties.getstaticpathpattern());\n            welcomepagehandlermapping.setinterceptors(this.getinterceptors(mvcconversionservice, mvcresourceurlprovider));\n            welcomepagehandlermapping.setcorsconfigurations(this.getcorsconfigurations());\n            return welcomepagehandlermapping;\n        }\n\n        private optional<resource> getwelcomepage() {\n            string[] locations = webmvcautoconfiguration.getresourcelocations(this.resourceproperties.getstaticlocations());\n            return arrays.stream(locations).map(this::getindexhtml).filter(this::isreadable).findfirst();\n        }\n\n        private resource getindexhtml(string location) {\n            return this.resourceloader.getresource(location + "index.html");\n        }\n\n        private boolean isreadable(resource resource) {\n            try {\n                return resource.exists() && resource.geturl() != null;\n            } catch (exception var3) {\n                return false;\n            }\n        }\n\n        @bean\n        public formattingconversionservice mvcconversionservice() {\n            format format = this.mvcproperties.getformat();\n            webconversionservice conversionservice = new webconversionservice((new datetimeformatters()).dateformat(format.getdate()).timeformat(format.gettime()).datetimeformat(format.getdatetime()));\n            this.addformatters(conversionservice);\n            return conversionservice;\n        }\n\n        @bean\n        public validator mvcvalidator() {\n            return !classutils.ispresent("javax.validation.validator", this.getclass().getclassloader()) ? super.mvcvalidator() : validatoradapter.get(this.getapplicationcontext(), this.getvalidator());\n        }\n\n        protected requestmappinghandlermapping createrequestmappinghandlermapping() {\n            if (this.mvcregistrations != null) {\n                requestmappinghandlermapping mapping = this.mvcregistrations.getrequestmappinghandlermapping();\n                if (mapping != null) {\n                    return mapping;\n                }\n            }\n\n            return super.createrequestmappinghandlermapping();\n        }\n\n        protected configurablewebbindinginitializer getconfigurablewebbindinginitializer(formattingconversionservice mvcconversionservice, validator mvcvalidator) {\n            try {\n                return (configurablewebbindinginitializer)this.beanfactory.getbean(configurablewebbindinginitializer.class);\n            } catch (nosuchbeandefinitionexception var4) {\n                return super.getconfigurablewebbindinginitializer(mvcconversionservice, mvcvalidator);\n            }\n        }\n\n        protected exceptionhandlerexceptionresolver createexceptionhandlerexceptionresolver() {\n            if (this.mvcregistrations != null) {\n                exceptionhandlerexceptionresolver resolver = this.mvcregistrations.getexceptionhandlerexceptionresolver();\n                if (resolver != null) {\n                    return resolver;\n                }\n            }\n\n            return super.createexceptionhandlerexceptionresolver();\n        }\n\n        protected void extendhandlerexceptionresolvers(list<handlerexceptionresolver> exceptionresolvers) {\n            super.extendhandlerexceptionresolvers(exceptionresolvers);\n            if (this.mvcproperties.islogresolvedexception()) {\n                iterator var2 = exceptionresolvers.iterator();\n\n                while(var2.hasnext()) {\n                    handlerexceptionresolver resolver = (handlerexceptionresolver)var2.next();\n                    if (resolver instanceof abstracthandlerexceptionresolver) {\n                        ((abstracthandlerexceptionresolver)resolver).setwarnlogcategory(resolver.getclass().getname());\n                    }\n                }\n            }\n\n        }\n\n        @bean\n        public contentnegotiationmanager mvccontentnegotiationmanager() {\n            contentnegotiationmanager manager = super.mvccontentnegotiationmanager();\n            list<contentnegotiationstrategy> strategies = manager.getstrategies();\n            listiterator iterator = strategies.listiterator();\n\n            while(iterator.hasnext()) {\n                contentnegotiationstrategy strategy = (contentnegotiationstrategy)iterator.next();\n                if (strategy instanceof pathextensioncontentnegotiationstrategy) {\n                    iterator.set(new webmvcautoconfiguration.optionalpathextensioncontentnegotiationstrategy(strategy));\n                }\n            }\n\n            return manager;\n        }\n\n        public void setresourceloader(resourceloader resourceloader) {\n            this.resourceloader = resourceloader;\n        }\n    }\n\n    @configuration(\n        proxybeanmethods = false\n    )\n    @import({webmvcautoconfiguration.enablewebmvcconfiguration.class})\n    @enableconfigurationproperties({webmvcproperties.class, resourceproperties.class})\n    @order(0)\n    public static class webmvcautoconfigurationadapter implements webmvcconfigurer {\n        private static final log logger = logfactory.getlog(webmvcconfigurer.class);\n        private final resourceproperties resourceproperties;\n        private final webmvcproperties mvcproperties;\n        private final listablebeanfactory beanfactory;\n        private final objectprovider<httpmessageconverters> messageconvertersprovider;\n        private final objectprovider<dispatcherservletpath> dispatcherservletpath;\n        private final objectprovider<servletregistrationbean<?>> servletregistrations;\n        final webmvcautoconfiguration.resourcehandlerregistrationcustomizer resourcehandlerregistrationcustomizer;\n\n        public webmvcautoconfigurationadapter(resourceproperties resourceproperties, webmvcproperties mvcproperties, listablebeanfactory beanfactory, objectprovider<httpmessageconverters> messageconvertersprovider, objectprovider<webmvcautoconfiguration.resourcehandlerregistrationcustomizer> resourcehandlerregistrationcustomizerprovider, objectprovider<dispatcherservletpath> dispatcherservletpath, objectprovider<servletregistrationbean<?>> servletregistrations) {\n            this.resourceproperties = resourceproperties;\n            this.mvcproperties = mvcproperties;\n            this.beanfactory = beanfactory;\n            this.messageconvertersprovider = messageconvertersprovider;\n            this.resourcehandlerregistrationcustomizer = (webmvcautoconfiguration.resourcehandlerregistrationcustomizer)resourcehandlerregistrationcustomizerprovider.getifavailable();\n            this.dispatcherservletpath = dispatcherservletpath;\n            this.servletregistrations = servletregistrations;\n        }\n\n        public void configuremessageconverters(list<httpmessageconverter<?>> converters) {\n            this.messageconvertersprovider.ifavailable((customconverters) -> {\n                converters.addall(customconverters.getconverters());\n            });\n        }\n\n        public void configureasyncsupport(asyncsupportconfigurer configurer) {\n            if (this.beanfactory.containsbean("applicationtaskexecutor")) {\n                object taskexecutor = this.beanfactory.getbean("applicationtaskexecutor");\n                if (taskexecutor instanceof asynctaskexecutor) {\n                    configurer.settaskexecutor((asynctaskexecutor)taskexecutor);\n                }\n            }\n\n            duration timeout = this.mvcproperties.getasync().getrequesttimeout();\n            if (timeout != null) {\n                configurer.setdefaulttimeout(timeout.tomillis());\n            }\n\n        }\n\n        public void configurepathmatch(pathmatchconfigurer configurer) {\n            configurer.setusesuffixpatternmatch(this.mvcproperties.getpathmatch().isusesuffixpattern());\n            configurer.setuseregisteredsuffixpatternmatch(this.mvcproperties.getpathmatch().isuseregisteredsuffixpattern());\n            this.dispatcherservletpath.ifavailable((dispatcherpath) -> {\n                string servleturlmapping = dispatcherpath.getservleturlmapping();\n                if (servleturlmapping.equals("/") && this.singledispatcherservlet()) {\n                    urlpathhelper urlpathhelper = new urlpathhelper();\n                    urlpathhelper.setalwaysusefullpath(true);\n                    configurer.seturlpathhelper(urlpathhelper);\n                }\n\n            });\n        }\n\n        private boolean singledispatcherservlet() {\n            stream var10000 = this.servletregistrations.stream().map(servletregistrationbean::getservlet);\n            dispatcherservlet.class.getclass();\n            return var10000.filter(dispatcherservlet.class::isinstance).count() == 1l;\n        }\n\n        public void configurecontentnegotiation(contentnegotiationconfigurer configurer) {\n            contentnegotiation contentnegotiation = this.mvcproperties.getcontentnegotiation();\n            configurer.favorpathextension(contentnegotiation.isfavorpathextension());\n            configurer.favorparameter(contentnegotiation.isfavorparameter());\n            if (contentnegotiation.getparametername() != null) {\n                configurer.parametername(contentnegotiation.getparametername());\n            }\n\n            map<string, mediatype> mediatypes = this.mvcproperties.getcontentnegotiation().getmediatypes();\n            mediatypes.foreach(configurer::mediatype);\n        }\n\n        @bean\n        @conditionalonmissingbean\n        public internalresourceviewresolver defaultviewresolver() {\n            internalresourceviewresolver resolver = new internalresourceviewresolver();\n            resolver.setprefix(this.mvcproperties.getview().getprefix());\n            resolver.setsuffix(this.mvcproperties.getview().getsuffix());\n            return resolver;\n        }\n\n        @bean\n        @conditionalonbean({view.class})\n        @conditionalonmissingbean\n        public beannameviewresolver beannameviewresolver() {\n            beannameviewresolver resolver = new beannameviewresolver();\n            resolver.setorder(2147483637);\n            return resolver;\n        }\n\n        @bean\n        @conditionalonbean({viewresolver.class})\n        @conditionalonmissingbean(\n            name = {"viewresolver"},\n            value = {contentnegotiatingviewresolver.class}\n        )\n        public contentnegotiatingviewresolver viewresolver(beanfactory beanfactory) {\n            contentnegotiatingviewresolver resolver = new contentnegotiatingviewresolver();\n            resolver.setcontentnegotiationmanager((contentnegotiationmanager)beanfactory.getbean(contentnegotiationmanager.class));\n            resolver.setorder(-2147483648);\n            return resolver;\n        }\n\n        @bean\n        @conditionalonmissingbean\n        @conditionalonproperty(\n            prefix = "spring.mvc",\n            name = {"locale"}\n        )\n        public localeresolver localeresolver() {\n            if (this.mvcproperties.getlocaleresolver() == org.springframework.boot.autoconfigure.web.servlet.webmvcproperties.localeresolver.fixed) {\n                return new fixedlocaleresolver(this.mvcproperties.getlocale());\n            } else {\n                acceptheaderlocaleresolver localeresolver = new acceptheaderlocaleresolver();\n                localeresolver.setdefaultlocale(this.mvcproperties.getlocale());\n                return localeresolver;\n            }\n        }\n\n        public messagecodesresolver getmessagecodesresolver() {\n            if (this.mvcproperties.getmessagecodesresolverformat() != null) {\n                defaultmessagecodesresolver resolver = new defaultmessagecodesresolver();\n                resolver.setmessagecodeformatter(this.mvcproperties.getmessagecodesresolverformat());\n                return resolver;\n            } else {\n                return null;\n            }\n        }\n\n        public void addformatters(formatterregistry registry) {\n            applicationconversionservice.addbeans(registry, this.beanfactory);\n        }\n\n        public void addresourcehandlers(resourcehandlerregistry registry) {\n            if (!this.resourceproperties.isaddmappings()) {\n                logger.debug("default resource handling disabled");\n            } else {\n                duration cacheperiod = this.resourceproperties.getcache().getperiod();\n                cachecontrol cachecontrol = this.resourceproperties.getcache().getcachecontrol().tohttpcachecontrol();\n                if (!registry.hasmappingforpattern("/webjars/**")) {\n                    this.customizeresourcehandlerregistration(registry.addresourcehandler(new string[]{"/webjars/**"}).addresourcelocations(new string[]{"classpath:/meta-inf/resources/webjars/"}).setcacheperiod(this.getseconds(cacheperiod)).setcachecontrol(cachecontrol));\n                }\n\n                string staticpathpattern = this.mvcproperties.getstaticpathpattern();\n                if (!registry.hasmappingforpattern(staticpathpattern)) {\n                    this.customizeresourcehandlerregistration(registry.addresourcehandler(new string[]{staticpathpattern}).addresourcelocations(webmvcautoconfiguration.getresourcelocations(this.resourceproperties.getstaticlocations())).setcacheperiod(this.getseconds(cacheperiod)).setcachecontrol(cachecontrol));\n                }\n\n            }\n        }\n\n        private integer getseconds(duration cacheperiod) {\n            return cacheperiod != null ? (int)cacheperiod.getseconds() : null;\n        }\n\n        private void customizeresourcehandlerregistration(resourcehandlerregistration registration) {\n            if (this.resourcehandlerregistrationcustomizer != null) {\n                this.resourcehandlerregistrationcustomizer.customize(registration);\n            }\n\n        }\n\n        @bean\n        @conditionalonmissingbean({requestcontextlistener.class, requestcontextfilter.class})\n        @conditionalonmissingfilterbean({requestcontextfilter.class})\n        public static requestcontextfilter requestcontextfilter() {\n            return new orderedrequestcontextfilter();\n        }\n    }\n}\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n',charsets:{cjk:!0}},{title:"Transactiona事务注解",frontmatter:{title:"Transactiona事务注解",date:"2022-01-24T14:14:35.000Z",permalink:"/pages/8e5ec8/",categories:["Spring系列","源码速查"],tags:[null]},regularPath:"/35.Spring%E7%B3%BB%E5%88%97/40.%E6%BA%90%E7%A0%81%E9%80%9F%E6%9F%A5/10.Transactiona%E4%BA%8B%E5%8A%A1%E6%B3%A8%E8%A7%A3.html",relativePath:"35.Spring系列/40.源码速查/10.Transactiona事务注解.md",key:"v-67c86f9c",path:"/pages/8e5ec8/",headers:[{level:2,title:"Spring事务源码",slug:"spring事务源码",normalizedTitle:"spring事务源码",charIndex:2},{level:3,title:"@Transcational注解",slug:"transcational注解",normalizedTitle:"@transcational注解",charIndex:17}],headersStr:"Spring事务源码 @Transcational注解",content:'# Spring事务源码\n\n\n# @Transcational注解\n\npackage org.springframework.transaction.annotation;\n\nimport java.lang.annotation.Documented;\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Inherited;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.springframework.core.annotation.AliasFor;\nimport org.springframework.transaction.TransactionDefinition;\n\n@Target({ElementType.TYPE, ElementType.METHOD})\n@Retention(RetentionPolicy.RUNTIME)\n@Inherited\n@Documented\npublic @interface Transactional {\n\n\t@AliasFor("transactionManager")\n\tString value() default "";\n\n\t@AliasFor("value")\n\tString transactionManager() default "";\n\n\tPropagation propagation() default Propagation.REQUIRED;\n\n\tIsolation isolation() default Isolation.DEFAULT;\n\n\tint timeout() default TransactionDefinition.TIMEOUT_DEFAULT;\n\n\tboolean readOnly() default false;\n\n\tClass<? extends Throwable>[] rollbackFor() default {};\n\n\tString[] rollbackForClassName() default {};\n\n\tClass<? extends Throwable>[] noRollbackFor() default {};\n\n\tString[] noRollbackForClassName() default {};\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n',normalizedContent:'# spring事务源码\n\n\n# @transcational注解\n\npackage org.springframework.transaction.annotation;\n\nimport java.lang.annotation.documented;\nimport java.lang.annotation.elementtype;\nimport java.lang.annotation.inherited;\nimport java.lang.annotation.retention;\nimport java.lang.annotation.retentionpolicy;\nimport java.lang.annotation.target;\n\nimport org.springframework.core.annotation.aliasfor;\nimport org.springframework.transaction.transactiondefinition;\n\n@target({elementtype.type, elementtype.method})\n@retention(retentionpolicy.runtime)\n@inherited\n@documented\npublic @interface transactional {\n\n\t@aliasfor("transactionmanager")\n\tstring value() default "";\n\n\t@aliasfor("value")\n\tstring transactionmanager() default "";\n\n\tpropagation propagation() default propagation.required;\n\n\tisolation isolation() default isolation.default;\n\n\tint timeout() default transactiondefinition.timeout_default;\n\n\tboolean readonly() default false;\n\n\tclass<? extends throwable>[] rollbackfor() default {};\n\n\tstring[] rollbackforclassname() default {};\n\n\tclass<? extends throwable>[] norollbackfor() default {};\n\n\tstring[] norollbackforclassname() default {};\n\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n',charsets:{cjk:!0}},{title:"JDBC&SQL注入",frontmatter:{title:"JDBC&SQL注入",date:"2022-02-07T22:26:44.000Z",permalink:"/pages/5c205b/",categories:["ORM框架","Mybatis"],tags:[null]},regularPath:"/37.ORM%E6%A1%86%E6%9E%B6/10.Mybatis/10.JDBC&SQL%E6%B3%A8%E5%85%A5.html",relativePath:"37.ORM框架/10.Mybatis/10.JDBC&SQL注入.md",key:"v-15a97d63",path:"/pages/5c205b/",headers:[{level:2,title:"原生JDBC",slug:"原生jdbc",normalizedTitle:"原生jdbc",charIndex:2},{level:2,title:"原生JDBC弊端",slug:"原生jdbc弊端",normalizedTitle:"原生jdbc弊端",charIndex:35},{level:2,title:"SQL注入问题",slug:"sql注入问题",normalizedTitle:"sql注入问题",charIndex:2126}],headersStr:"原生JDBC 原生JDBC弊端 SQL注入问题",content:"# 原生JDBC\n\nJava原生操作JDBC连接以及原理详解\n\n\n# 原生JDBC弊端\n\n①通用性比较差 ===> 配置文件方式，反射创建对象解决\n\n②频繁的连接数据库 ===> 连接池解决\n\n③sql语句&查询流程是硬编码 ===> 也就是通用性差，不好维护，参考①\n\n④需要及时释放连接资源 ===> 消耗性能，阻塞IO，缓存\n\npackage com.viki.jdbc;\n\nimport com.viki.pojo.User;\n\nimport java.sql.*;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class UserDaoImpl {\n    /**\n     * 数据库连接,4大信息必须有\n     * 存储在配置文件,读取文件\n     */\n    private String driverClass = \"com.mysql.jdbc.Driver\";\n    private String url = \"jdbc:mysql://localhost:3306/test\";\n    private String username = \"root\";\n    private String password = \"root\";\n\n    public List<User> queryUserList() throws Exception {\n        /**\n         * 查询数据表,返回集合List,泛型User对象\n         * 查询的结果,一定是User对象吗\n         * TODO 通用性比较差  List<User>\n         */\n        List<User> list = new ArrayList<User>();\n        Class.forName(driverClass);\n        /**\n         * 频繁的去连接数据库,连接池\n         */\n        Connection conn = DriverManager.getConnection(url, username, password);\n\n        /**\n         *  SQL语句存在问题:硬编码 (程序中固定,只能修改源码)\n         *  TODO 解决SQL语句的硬编码, 写配置文件中\n         */\n        String sql = \"select * from user where id=? and name = ?\";\n        PreparedStatement pst = conn.prepareStatement(sql);\n        /**\n         * SQL语句变化,参数设置也会变化\n         */\n        pst.setObject(1, 1);\n        pst.setObject(2, \"a\");\n        ResultSet rs = pst.executeQuery();\n        /**\n         * 查询的数据表不是User\n         * 下面的所有程序,都不能了\n         * TODO 解决,反射创建对象\n         */\n        User user = null;\n        while (rs.next()) {\n            user = new User();\n             /*   user.setId(rs.getInt(\"id\"));\n                user.setUsername(rs.getString(\"username\"));\n                user.setSex(rs.getString(\"sex\"));\n                user.setBirthday(rs.getDate(\"birthday\"));\n                user.setAddress(rs.getString(\"address\"));*/\n            list.add(user);\n        }\n        rs.close();\n        pst.close();\n        conn.close();\n        return list;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n\n\n\n# SQL注入问题\n\n> PreparedStatement和Statement对应mybatis中的 #{} &{}\n\n为什么使用PreparedStatement就能防止SQL注入呢？\n\n参考文章\n\n用java PreparedStatement就不用担心sql注入了吗？\n\n看了很多网上的帖子，只是讲到了因为预编译防止了SQL注入，底层使用了转义，没有再下细说明。\n\n为什么预编译能够防止SQL注入，底层转义源码又是如何实现的呢？\n\n> mysql的底层的setString();方法，其实就是用值代替了？的位置，并且在值的两边加上了单引号，然后再把值当中的所有单引号替换成了斜杠单引号，说白了就是把值当中的所有单引号给转义了!这就达到了防止sql注入的目的\n\n参考这篇文章\n\nPreparedStatement防止sql注入原理\n\nsetString()源码\n\nbuf.append('\\'');\nbuf.append(x);\nbuf.append('\\'');\n\n\n1\n2\n3\n\n\npublic void setString(int parameterIndex, String x) throws SQLException {\n    synchronized (checkClosed().getConnectionMutex()) {\n        // if the passed string is null, then set this column to null\n        if (x == null) {\n            setNull(parameterIndex, Types.CHAR);\n        } else {\n            checkClosed();\n\n            int stringLength = x.length();\n\n            if (this.connection.isNoBackslashEscapesSet()) {\n                // Scan for any nasty chars\n\t\t\t\t//是否许需要转义，true需要，false不需要\n                boolean needsHexEscape = isEscapeNeededForString(x, stringLength);\n\n                if (!needsHexEscape) {\n                    byte[] parameterAsBytes = null;\n\n                    StringBuilder quotedString = new StringBuilder(x.length() + 2);\n                    quotedString.append('\\'');\n                    quotedString.append(x);\n                    quotedString.append('\\'');\n\n                    if (!this.isLoadDataQuery) {\n                        parameterAsBytes = StringUtils.getBytes(quotedString.toString(), this.charConverter, this.charEncoding,\n                                                                this.connection.getServerCharset(), this.connection.parserKnowsUnicode(), getExceptionInterceptor());\n                    } else {\n                        // Send with platform character encoding\n                        parameterAsBytes = StringUtils.getBytes(quotedString.toString());\n                    }\n\n                    setInternal(parameterIndex, parameterAsBytes);\n                } else {\n                    byte[] parameterAsBytes = null;\n\n                    if (!this.isLoadDataQuery) {\n                        parameterAsBytes = StringUtils.getBytes(x, this.charConverter, this.charEncoding, this.connection.getServerCharset(),\n                                                                this.connection.parserKnowsUnicode(), getExceptionInterceptor());\n                    } else {\n                        // Send with platform character encoding\n                        parameterAsBytes = StringUtils.getBytes(x);\n                    }\n\n                    setBytes(parameterIndex, parameterAsBytes);\n                }\n\n                return;\n            }\n\n            String parameterAsString = x;\n            boolean needsQuoted = true;\n\n            if (this.isLoadDataQuery || isEscapeNeededForString(x, stringLength)) {\n                needsQuoted = false; // saves an allocation later\n\n                StringBuilder buf = new StringBuilder((int) (x.length() * 1.1));\n\n                buf.append('\\'');\n\n                //\n                // Note: buf.append(char) is _faster_ than appending in blocks, because the block append requires a System.arraycopy().... go figure...\n                //\n\n                for (int i = 0; i < stringLength; ++i) {\n                    char c = x.charAt(i);\n\n                    switch (c) {\n                        case 0: /* Must be escaped for 'mysql' */\n                            buf.append('\\\\');\n                            buf.append('0');\n\n                            break;\n\n                        case '\\n': /* Must be escaped for logs */\n                            buf.append('\\\\');\n                            buf.append('n');\n\n                            break;\n\n                        case '\\r':\n                            buf.append('\\\\');\n                            buf.append('r');\n\n                            break;\n\n                        case '\\\\':\n                            buf.append('\\\\');\n                            buf.append('\\\\');\n\n                            break;\n\n                        case '\\'':\n                            buf.append('\\\\');\n                            buf.append('\\'');\n\n                            break;\n\n                        case '\"': /* Better safe than sorry */\n                            if (this.usingAnsiMode) {\n                                buf.append('\\\\');\n                            }\n\n                            buf.append('\"');\n\n                            break;\n\n                        case '\\032': /* This gives problems on Win32 */\n                            buf.append('\\\\');\n                            buf.append('Z');\n\n                            break;\n\n                        case '\\u00a5':\n                        case '\\u20a9':\n                            // escape characters interpreted as backslash by mysql\n                            if (this.charsetEncoder != null) {\n                                CharBuffer cbuf = CharBuffer.allocate(1);\n                                ByteBuffer bbuf = ByteBuffer.allocate(1);\n                                cbuf.put(c);\n                                cbuf.position(0);\n                                this.charsetEncoder.encode(cbuf, bbuf, true);\n                                if (bbuf.get(0) == '\\\\') {\n                                    buf.append('\\\\');\n                                }\n                            }\n                            buf.append(c);\n                            break;\n\n                        default:\n                            buf.append(c);\n                    }\n                }\n\n                buf.append('\\'');\n\n                parameterAsString = buf.toString();\n            }\n\n            byte[] parameterAsBytes = null;\n\n            if (!this.isLoadDataQuery) {\n                if (needsQuoted) {\n                    parameterAsBytes = StringUtils.getBytesWrapped(parameterAsString, '\\'', '\\'', this.charConverter, this.charEncoding,\n                                                                   this.connection.getServerCharset(), this.connection.parserKnowsUnicode(), getExceptionInterceptor());\n                } else {\n                    parameterAsBytes = StringUtils.getBytes(parameterAsString, this.charConverter, this.charEncoding, this.connection.getServerCharset(),\n                                                            this.connection.parserKnowsUnicode(), getExceptionInterceptor());\n                }\n            } else {\n                // Send with platform character encoding\n                parameterAsBytes = StringUtils.getBytes(parameterAsString);\n            }\n\n            setInternal(parameterIndex, parameterAsBytes);\n\n            this.parameterTypes[parameterIndex - 1 + getParameterIndexOffset()] = Types.VARCHAR;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n\n\n是否需要转义 isEscapeNeededForString()\n\n> 会判断当前字符串中是否有恶意注入\n\nprivate boolean isEscapeNeededForString(String x, int stringLength) {\n    boolean needsHexEscape = false;\n\n    for (int i = 0; i < stringLength; ++i) {\n        char c = x.charAt(i);\n\n        switch (c) {\n            case 0: /* Must be escaped for 'mysql' */\n\n                needsHexEscape = true;\n                break;\n\n            case '\\n': /* Must be escaped for logs */\n                needsHexEscape = true;\n\n                break;\n\n            case '\\r':\n                needsHexEscape = true;\n                break;\n\n            case '\\\\':\n                needsHexEscape = true;\n\n                break;\n\n            case '\\'':\n                needsHexEscape = true;\n\n                break;\n\n            case '\"': /* Better safe than sorry */\n                needsHexEscape = true;\n\n                break;\n\n            case '\\032': /* This gives problems on Win32 */\n                needsHexEscape = true;\n                break;\n        }\n\n        if (needsHexEscape) {\n            break; // no need to scan more\n        }\n    }\n    return needsHexEscape;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n值得看一看\n\nsql注入基础原理（超详细）\n\nJDBC 基本流程源码分析",normalizedContent:"# 原生jdbc\n\njava原生操作jdbc连接以及原理详解\n\n\n# 原生jdbc弊端\n\n①通用性比较差 ===> 配置文件方式，反射创建对象解决\n\n②频繁的连接数据库 ===> 连接池解决\n\n③sql语句&查询流程是硬编码 ===> 也就是通用性差，不好维护，参考①\n\n④需要及时释放连接资源 ===> 消耗性能，阻塞io，缓存\n\npackage com.viki.jdbc;\n\nimport com.viki.pojo.user;\n\nimport java.sql.*;\nimport java.util.arraylist;\nimport java.util.list;\n\npublic class userdaoimpl {\n    /**\n     * 数据库连接,4大信息必须有\n     * 存储在配置文件,读取文件\n     */\n    private string driverclass = \"com.mysql.jdbc.driver\";\n    private string url = \"jdbc:mysql://localhost:3306/test\";\n    private string username = \"root\";\n    private string password = \"root\";\n\n    public list<user> queryuserlist() throws exception {\n        /**\n         * 查询数据表,返回集合list,泛型user对象\n         * 查询的结果,一定是user对象吗\n         * todo 通用性比较差  list<user>\n         */\n        list<user> list = new arraylist<user>();\n        class.forname(driverclass);\n        /**\n         * 频繁的去连接数据库,连接池\n         */\n        connection conn = drivermanager.getconnection(url, username, password);\n\n        /**\n         *  sql语句存在问题:硬编码 (程序中固定,只能修改源码)\n         *  todo 解决sql语句的硬编码, 写配置文件中\n         */\n        string sql = \"select * from user where id=? and name = ?\";\n        preparedstatement pst = conn.preparestatement(sql);\n        /**\n         * sql语句变化,参数设置也会变化\n         */\n        pst.setobject(1, 1);\n        pst.setobject(2, \"a\");\n        resultset rs = pst.executequery();\n        /**\n         * 查询的数据表不是user\n         * 下面的所有程序,都不能了\n         * todo 解决,反射创建对象\n         */\n        user user = null;\n        while (rs.next()) {\n            user = new user();\n             /*   user.setid(rs.getint(\"id\"));\n                user.setusername(rs.getstring(\"username\"));\n                user.setsex(rs.getstring(\"sex\"));\n                user.setbirthday(rs.getdate(\"birthday\"));\n                user.setaddress(rs.getstring(\"address\"));*/\n            list.add(user);\n        }\n        rs.close();\n        pst.close();\n        conn.close();\n        return list;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n\n\n\n# sql注入问题\n\n> preparedstatement和statement对应mybatis中的 #{} &{}\n\n为什么使用preparedstatement就能防止sql注入呢？\n\n参考文章\n\n用java preparedstatement就不用担心sql注入了吗？\n\n看了很多网上的帖子，只是讲到了因为预编译防止了sql注入，底层使用了转义，没有再下细说明。\n\n为什么预编译能够防止sql注入，底层转义源码又是如何实现的呢？\n\n> mysql的底层的setstring();方法，其实就是用值代替了？的位置，并且在值的两边加上了单引号，然后再把值当中的所有单引号替换成了斜杠单引号，说白了就是把值当中的所有单引号给转义了!这就达到了防止sql注入的目的\n\n参考这篇文章\n\npreparedstatement防止sql注入原理\n\nsetstring()源码\n\nbuf.append('\\'');\nbuf.append(x);\nbuf.append('\\'');\n\n\n1\n2\n3\n\n\npublic void setstring(int parameterindex, string x) throws sqlexception {\n    synchronized (checkclosed().getconnectionmutex()) {\n        // if the passed string is null, then set this column to null\n        if (x == null) {\n            setnull(parameterindex, types.char);\n        } else {\n            checkclosed();\n\n            int stringlength = x.length();\n\n            if (this.connection.isnobackslashescapesset()) {\n                // scan for any nasty chars\n\t\t\t\t//是否许需要转义，true需要，false不需要\n                boolean needshexescape = isescapeneededforstring(x, stringlength);\n\n                if (!needshexescape) {\n                    byte[] parameterasbytes = null;\n\n                    stringbuilder quotedstring = new stringbuilder(x.length() + 2);\n                    quotedstring.append('\\'');\n                    quotedstring.append(x);\n                    quotedstring.append('\\'');\n\n                    if (!this.isloaddataquery) {\n                        parameterasbytes = stringutils.getbytes(quotedstring.tostring(), this.charconverter, this.charencoding,\n                                                                this.connection.getservercharset(), this.connection.parserknowsunicode(), getexceptioninterceptor());\n                    } else {\n                        // send with platform character encoding\n                        parameterasbytes = stringutils.getbytes(quotedstring.tostring());\n                    }\n\n                    setinternal(parameterindex, parameterasbytes);\n                } else {\n                    byte[] parameterasbytes = null;\n\n                    if (!this.isloaddataquery) {\n                        parameterasbytes = stringutils.getbytes(x, this.charconverter, this.charencoding, this.connection.getservercharset(),\n                                                                this.connection.parserknowsunicode(), getexceptioninterceptor());\n                    } else {\n                        // send with platform character encoding\n                        parameterasbytes = stringutils.getbytes(x);\n                    }\n\n                    setbytes(parameterindex, parameterasbytes);\n                }\n\n                return;\n            }\n\n            string parameterasstring = x;\n            boolean needsquoted = true;\n\n            if (this.isloaddataquery || isescapeneededforstring(x, stringlength)) {\n                needsquoted = false; // saves an allocation later\n\n                stringbuilder buf = new stringbuilder((int) (x.length() * 1.1));\n\n                buf.append('\\'');\n\n                //\n                // note: buf.append(char) is _faster_ than appending in blocks, because the block append requires a system.arraycopy().... go figure...\n                //\n\n                for (int i = 0; i < stringlength; ++i) {\n                    char c = x.charat(i);\n\n                    switch (c) {\n                        case 0: /* must be escaped for 'mysql' */\n                            buf.append('\\\\');\n                            buf.append('0');\n\n                            break;\n\n                        case '\\n': /* must be escaped for logs */\n                            buf.append('\\\\');\n                            buf.append('n');\n\n                            break;\n\n                        case '\\r':\n                            buf.append('\\\\');\n                            buf.append('r');\n\n                            break;\n\n                        case '\\\\':\n                            buf.append('\\\\');\n                            buf.append('\\\\');\n\n                            break;\n\n                        case '\\'':\n                            buf.append('\\\\');\n                            buf.append('\\'');\n\n                            break;\n\n                        case '\"': /* better safe than sorry */\n                            if (this.usingansimode) {\n                                buf.append('\\\\');\n                            }\n\n                            buf.append('\"');\n\n                            break;\n\n                        case '\\032': /* this gives problems on win32 */\n                            buf.append('\\\\');\n                            buf.append('z');\n\n                            break;\n\n                        case '\\u00a5':\n                        case '\\u20a9':\n                            // escape characters interpreted as backslash by mysql\n                            if (this.charsetencoder != null) {\n                                charbuffer cbuf = charbuffer.allocate(1);\n                                bytebuffer bbuf = bytebuffer.allocate(1);\n                                cbuf.put(c);\n                                cbuf.position(0);\n                                this.charsetencoder.encode(cbuf, bbuf, true);\n                                if (bbuf.get(0) == '\\\\') {\n                                    buf.append('\\\\');\n                                }\n                            }\n                            buf.append(c);\n                            break;\n\n                        default:\n                            buf.append(c);\n                    }\n                }\n\n                buf.append('\\'');\n\n                parameterasstring = buf.tostring();\n            }\n\n            byte[] parameterasbytes = null;\n\n            if (!this.isloaddataquery) {\n                if (needsquoted) {\n                    parameterasbytes = stringutils.getbyteswrapped(parameterasstring, '\\'', '\\'', this.charconverter, this.charencoding,\n                                                                   this.connection.getservercharset(), this.connection.parserknowsunicode(), getexceptioninterceptor());\n                } else {\n                    parameterasbytes = stringutils.getbytes(parameterasstring, this.charconverter, this.charencoding, this.connection.getservercharset(),\n                                                            this.connection.parserknowsunicode(), getexceptioninterceptor());\n                }\n            } else {\n                // send with platform character encoding\n                parameterasbytes = stringutils.getbytes(parameterasstring);\n            }\n\n            setinternal(parameterindex, parameterasbytes);\n\n            this.parametertypes[parameterindex - 1 + getparameterindexoffset()] = types.varchar;\n        }\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n\n\n是否需要转义 isescapeneededforstring()\n\n> 会判断当前字符串中是否有恶意注入\n\nprivate boolean isescapeneededforstring(string x, int stringlength) {\n    boolean needshexescape = false;\n\n    for (int i = 0; i < stringlength; ++i) {\n        char c = x.charat(i);\n\n        switch (c) {\n            case 0: /* must be escaped for 'mysql' */\n\n                needshexescape = true;\n                break;\n\n            case '\\n': /* must be escaped for logs */\n                needshexescape = true;\n\n                break;\n\n            case '\\r':\n                needshexescape = true;\n                break;\n\n            case '\\\\':\n                needshexescape = true;\n\n                break;\n\n            case '\\'':\n                needshexescape = true;\n\n                break;\n\n            case '\"': /* better safe than sorry */\n                needshexescape = true;\n\n                break;\n\n            case '\\032': /* this gives problems on win32 */\n                needshexescape = true;\n                break;\n        }\n\n        if (needshexescape) {\n            break; // no need to scan more\n        }\n    }\n    return needshexescape;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n\n值得看一看\n\nsql注入基础原理（超详细）\n\njdbc 基本流程源码分析",charsets:{cjk:!0}},{title:"EasyExcel",frontmatter:{title:"EasyExcel",date:"2022-01-16T20:16:30.000Z",permalink:"/pages/ec2247/",categories:["其他框架"],tags:[null]},regularPath:"/38.%E5%85%B6%E4%BB%96%E6%A1%86%E6%9E%B6/10.%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/10.EasyExcel.html",relativePath:"38.其他框架/10.文件处理/10.EasyExcel.md",key:"v-667b9d14",path:"/pages/ec2247/",headers:[{level:2,title:"第一次使用场景",slug:"第一次使用场景",normalizedTitle:"第一次使用场景",charIndex:18},{level:3,title:"什么是数据字典？",slug:"什么是数据字典",normalizedTitle:"什么是数据字典？",charIndex:30},{level:2,title:"什么是EasyExcel？",slug:"什么是easyexcel",normalizedTitle:"什么是easyexcel？",charIndex:99},{level:2,title:"EasyExcel用途",slug:"easyexcel用途",normalizedTitle:"easyexcel用途",charIndex:487},{level:2,title:"EasyExcel特点",slug:"easyexcel特点",normalizedTitle:"easyexcel特点",charIndex:553},{level:2,title:"对比",slug:"对比",normalizedTitle:"对比",charIndex:870},{level:2,title:"EasyExcel集成Spring Boot",slug:"easyexcel集成spring-boot",normalizedTitle:"easyexcel集成spring boot",charIndex:1004},{level:3,title:"EasyExcel写操作",slug:"easyexcel写操作",normalizedTitle:"easyexcel写操作",charIndex:1031},{level:3,title:"EasyExcel读操作",slug:"easyexcel读操作",normalizedTitle:"easyexcel读操作",charIndex:2156}],headersStr:"第一次使用场景 什么是数据字典？ 什么是EasyExcel？ EasyExcel用途 EasyExcel特点 对比 EasyExcel集成Spring Boot EasyExcel写操作 EasyExcel读操作",content:'# EasyExcel使用\n\n\n# 第一次使用场景\n\n\n# 什么是数据字典？\n\n> 项目中固定的数据，不需要我们改变的数据，比如省市区等，就可以做一个数据字典统一管理\n\n批量数据的导入导出\n\n\n# 什么是EasyExcel？\n\n官方文档\n\nhttps://github.com/alibaba/easyexcel\n\nEasyExcel是阿里巴巴开源的一个excel处理框架，使用简单，节省内存\n\n> Java解析、生成Excel比较有名的框架有Apache poi、jxl。但他们都存在一个严重的问题就是非常的耗内存，poi有一套SAX模式的API可以一定程度的解决一些内存溢出的问题，但POI还是有一些缺陷，比如07版Excel解压缩以及解压后存储都是在内存中完成的，内存消耗依然很大。easyexcel重写了poi对07版Excel的解析，一个3M的excel用POI sax解析依然需要100M左右内存，改用easyexcel可以降低到几M，并且再大的excel也不会出现内存溢出；03版依赖POI的sax模式，在上层做了模型转换的封装，让使用者更加简单方便\n\n\n# EasyExcel用途\n\n1、数据导入：减轻录入工作量\n\n2、数据导出：统计信息归档\n\n3、数据传输：异构系统之间数据传输\n\n\n# EasyExcel特点\n\n * Java领域解析、生成Excel比较有名的框架有Apache poi、jxl等。但他们都存在一个严重的问题就是非常的耗内存。如果你的系统并发量不大的话可能还行，但是一旦并发上来后一定会OOM或者JVM频繁的full gc。\n * EasyExcel是阿里巴巴开源的一个excel处理框架，以使用简单、节省内存著称。EasyExcel能大大减少占用内存的主要原因是在解析Excel时没有将文件数据一次性全部加载到内存中，而是从磁盘上一行行读取数据，逐个解析。\n * EasyExcel采用一行一行的解析模式，并将一行的解析结果以观察者的模式通知处理（AnalysisEventListener）\n\n\n# 对比\n\n       EASYEXCEL   APACHE POI\n加载方式   一行一行进行解析    一次性加载所有到内存解析\n优缺点    节约内存        耗内存，文件过大造成内存溢出\n优缺点    查询方便效率高     添加、修改、删除方便\n\n\n# EasyExcel集成Spring Boot\n\n\n# EasyExcel写操作\n\n1.添加依赖\n\n\x3c!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel --\x3e\n<dependency>\n\t<groupId>com.alibaba</groupId>\n\t<artifactId>easyexcel</artifactId>\n\t<version>2.1.1</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n\n\n2.映射实体类\n\n> 实体类和excel的表格列的表头相对应\n\n实体类中使用@ExcelProperty(value = "表头名")注解设置表头\n\n@Data\npublic class Student {\n    @ExcelProperty(value = "序号")\n    private Long number;\n    @ExcelProperty(value = "学生姓名")\n    private String name;\n    @ExcelProperty(value = "学生年龄")\n    private Integer age;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n3.调用EasyExcel的方法创建一个excel文件并写入数据\n\n//1.指定文件的路径和文件名，自动创建xxx文件\nString fileNameOrPath = "E:\\\\xxx.xlsx";\n\n//2.调用EasyExcel封装的方法，完成excel文件的操作\nEasyExcel.write(fileNameOrPath,Student.class)\n    \t//设置sheet的名称\n    \t.sheet("学生信息")\n    \t//执行写入操作\n    \t.doWrite(getData());\n\n//注意: 如果不使用链式编程的话，最后需要手动关闭流，写法2\n    String fileName = "E:\\\\xxx.xlsx";\n    ExcelWriter excelWriter = EasyExcel.write(fileName, DemoData.class).build();\n    WriteSheet writeSheet = EasyExcel.writerSheet("写入方法二").build();\n    excelWriter.write(data(), writeSheet);\n    excelWriter.finish();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# EasyExcel读操作\n\n1.添加依赖\n\n\x3c!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel --\x3e\n<dependency>\n\t<groupId>com.alibaba</groupId>\n\t<artifactId>easyexcel</artifactId>\n\t<version>2.1.1</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n\n\n2.编写配置类\n\npackage Com.liu.yygh.config;\n\nimport Com.liu.yygh.pojo.Student;\nimport com.alibaba.excel.context.AnalysisContext;\nimport com.alibaba.excel.event.AnalysisEventListener;\nimport com.liu.yygh.model.acl.User;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\n\n//继承AnalysisEventListener并声明表格映射对象\npublic class ExcelListener extends AnalysisEventListener<Student> {\n    //拿一个集合来封装读出来的每一行数据\n    List<Student> list = new ArrayList<>();\n\n    //自动解析excel表格的每一行,这里不能得到表头的信息\n    @Override\n    public void invoke(Student student, AnalysisContext analysisContext) {\n        System.out.println("*******" + student);\n        list.add(student);\n    }\n\n    //获取excel表头的信息\n    @Override\n    public void invokeHeadMap(Map<Integer, String> headMap, AnalysisContext context) {\n        System.out.println("表头信息：" + headMap);\n    }\n\n    //对文档读取完成后执行的事情\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext analysisContext) {\n        System.out.println("文档读出完毕");\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n3.执行读取操作\n\npackage Com.liu.yygh.testexcel;\n\nimport Com.liu.yygh.config.ExcelListener;\nimport Com.liu.yygh.pojo.Student;\nimport com.alibaba.excel.EasyExcel;\n\npublic class ExcelReadDemo {\n\n    public static void main(String[] args) {\n        String fileName = "E:\\\\学生信息表.xlsx";\n        EasyExcel.read(fileName, Student.class,new ExcelListener()).sheet().doRead();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',normalizedContent:'# easyexcel使用\n\n\n# 第一次使用场景\n\n\n# 什么是数据字典？\n\n> 项目中固定的数据，不需要我们改变的数据，比如省市区等，就可以做一个数据字典统一管理\n\n批量数据的导入导出\n\n\n# 什么是easyexcel？\n\n官方文档\n\nhttps://github.com/alibaba/easyexcel\n\neasyexcel是阿里巴巴开源的一个excel处理框架，使用简单，节省内存\n\n> java解析、生成excel比较有名的框架有apache poi、jxl。但他们都存在一个严重的问题就是非常的耗内存，poi有一套sax模式的api可以一定程度的解决一些内存溢出的问题，但poi还是有一些缺陷，比如07版excel解压缩以及解压后存储都是在内存中完成的，内存消耗依然很大。easyexcel重写了poi对07版excel的解析，一个3m的excel用poi sax解析依然需要100m左右内存，改用easyexcel可以降低到几m，并且再大的excel也不会出现内存溢出；03版依赖poi的sax模式，在上层做了模型转换的封装，让使用者更加简单方便\n\n\n# easyexcel用途\n\n1、数据导入：减轻录入工作量\n\n2、数据导出：统计信息归档\n\n3、数据传输：异构系统之间数据传输\n\n\n# easyexcel特点\n\n * java领域解析、生成excel比较有名的框架有apache poi、jxl等。但他们都存在一个严重的问题就是非常的耗内存。如果你的系统并发量不大的话可能还行，但是一旦并发上来后一定会oom或者jvm频繁的full gc。\n * easyexcel是阿里巴巴开源的一个excel处理框架，以使用简单、节省内存著称。easyexcel能大大减少占用内存的主要原因是在解析excel时没有将文件数据一次性全部加载到内存中，而是从磁盘上一行行读取数据，逐个解析。\n * easyexcel采用一行一行的解析模式，并将一行的解析结果以观察者的模式通知处理（analysiseventlistener）\n\n\n# 对比\n\n       easyexcel   apache poi\n加载方式   一行一行进行解析    一次性加载所有到内存解析\n优缺点    节约内存        耗内存，文件过大造成内存溢出\n优缺点    查询方便效率高     添加、修改、删除方便\n\n\n# easyexcel集成spring boot\n\n\n# easyexcel写操作\n\n1.添加依赖\n\n\x3c!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel --\x3e\n<dependency>\n\t<groupid>com.alibaba</groupid>\n\t<artifactid>easyexcel</artifactid>\n\t<version>2.1.1</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n\n\n2.映射实体类\n\n> 实体类和excel的表格列的表头相对应\n\n实体类中使用@excelproperty(value = "表头名")注解设置表头\n\n@data\npublic class student {\n    @excelproperty(value = "序号")\n    private long number;\n    @excelproperty(value = "学生姓名")\n    private string name;\n    @excelproperty(value = "学生年龄")\n    private integer age;\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n3.调用easyexcel的方法创建一个excel文件并写入数据\n\n//1.指定文件的路径和文件名，自动创建xxx文件\nstring filenameorpath = "e:\\\\xxx.xlsx";\n\n//2.调用easyexcel封装的方法，完成excel文件的操作\neasyexcel.write(filenameorpath,student.class)\n    \t//设置sheet的名称\n    \t.sheet("学生信息")\n    \t//执行写入操作\n    \t.dowrite(getdata());\n\n//注意: 如果不使用链式编程的话，最后需要手动关闭流，写法2\n    string filename = "e:\\\\xxx.xlsx";\n    excelwriter excelwriter = easyexcel.write(filename, demodata.class).build();\n    writesheet writesheet = easyexcel.writersheet("写入方法二").build();\n    excelwriter.write(data(), writesheet);\n    excelwriter.finish();\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\n\n\n# easyexcel读操作\n\n1.添加依赖\n\n\x3c!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel --\x3e\n<dependency>\n\t<groupid>com.alibaba</groupid>\n\t<artifactid>easyexcel</artifactid>\n\t<version>2.1.1</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n\n\n2.编写配置类\n\npackage com.liu.yygh.config;\n\nimport com.liu.yygh.pojo.student;\nimport com.alibaba.excel.context.analysiscontext;\nimport com.alibaba.excel.event.analysiseventlistener;\nimport com.liu.yygh.model.acl.user;\n\nimport java.util.arraylist;\nimport java.util.list;\nimport java.util.map;\n\n//继承analysiseventlistener并声明表格映射对象\npublic class excellistener extends analysiseventlistener<student> {\n    //拿一个集合来封装读出来的每一行数据\n    list<student> list = new arraylist<>();\n\n    //自动解析excel表格的每一行,这里不能得到表头的信息\n    @override\n    public void invoke(student student, analysiscontext analysiscontext) {\n        system.out.println("*******" + student);\n        list.add(student);\n    }\n\n    //获取excel表头的信息\n    @override\n    public void invokeheadmap(map<integer, string> headmap, analysiscontext context) {\n        system.out.println("表头信息：" + headmap);\n    }\n\n    //对文档读取完成后执行的事情\n    @override\n    public void doafterallanalysed(analysiscontext analysiscontext) {\n        system.out.println("文档读出完毕");\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n3.执行读取操作\n\npackage com.liu.yygh.testexcel;\n\nimport com.liu.yygh.config.excellistener;\nimport com.liu.yygh.pojo.student;\nimport com.alibaba.excel.easyexcel;\n\npublic class excelreaddemo {\n\n    public static void main(string[] args) {\n        string filename = "e:\\\\学生信息表.xlsx";\n        easyexcel.read(filename, student.class,new excellistener()).sheet().doread();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n',charsets:{cjk:!0}},{title:"MyBatis-Plus常用操作",frontmatter:{title:"MyBatis-Plus常用操作",date:"2022-01-16T20:17:33.000Z",permalink:"/pages/4e88d5/",categories:["ORM框架","Mybatis-Plus"],tags:[null]},regularPath:"/37.ORM%E6%A1%86%E6%9E%B6/15.Mybatis-Plus/10.MyBatis-Plus%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C.html",relativePath:"37.ORM框架/15.Mybatis-Plus/10.MyBatis-Plus常用操作.md",key:"v-9f0513de",path:"/pages/4e88d5/",headers:[{level:2,title:"1.mybatis-plus代码自动生成",slug:"_1-mybatis-plus代码自动生成",normalizedTitle:"1.mybatis-plus代码自动生成",charIndex:23}],headersStr:"1.mybatis-plus代码自动生成",content:'# MyBatis-Plus常用操作\n\n\n# 1.mybatis-plus代码自动生成\n\n导入自动生成插件依赖\n\n\x3c!--MP代码自动生成--\x3e\n    <dependencies>\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus-generator</artifactId>\n            <version>3.3.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.velocity</groupId>\n            <artifactId>velocity-engine-core</artifactId>\n            <version>2.0</version>\n        </dependency>\n    </dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n编写代码生成工具类\n\npackage Com.xxx.xxx;\n\nimport com.baomidou.mybatisplus.annotation.DbType;\nimport com.baomidou.mybatisplus.generator.AutoGenerator;\nimport com.baomidou.mybatisplus.generator.config.DataSourceConfig;\nimport com.baomidou.mybatisplus.generator.config.GlobalConfig;\nimport com.baomidou.mybatisplus.generator.config.PackageConfig;\nimport com.baomidou.mybatisplus.generator.config.StrategyConfig;\nimport com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\n\n/**\n * @author STAR\n * @create 2021-12-10 16:56\n */\npublic class CodeGet {\n    public static void main(String[] args) {\n\n        // 1、创建代码生成器\n        AutoGenerator mpg = new AutoGenerator();\n\n        // 2、全局配置\n        GlobalConfig gc = new GlobalConfig();\n        // String projectPath = System.getProperty("user.dir");\n        //可能由于系统问题，这行代码可能找不到，用绝对路径吧\n        //gc.setOutputDir(projectPath + "/src/main/java");\n        //gc.setOutputDir("C:\\\\Users\\\\zewan\\\\Desktop\\\\guli\\\\demo_parent\\\\service\\\\service_hosp"+"/src/main/java");\n        gc.setOutputDir("E:\\\\GG\\\\R-Hospital\\\\Code\\\\hospital-project\\\\yygh_parent\\\\service\\\\service_cmn"+"/src/main/java");\n\n        gc.setServiceName("%sService");\t//去掉Service接口的首字母I\n        gc.setAuthor("xxx");//作者\n        gc.setOpen(false);//生成代码后是否自动展开项目目录\n        mpg.setGlobalConfig(gc);\n\n        // 3、数据源配置\n        DataSourceConfig dsc = new DataSourceConfig();\n        dsc.setUrl("jdbc:mysql://localhost:3307/database_name?characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8");\n        dsc.setDriverName("com.mysql.jdbc.Driver");\n        dsc.setUsername("root");\n        dsc.setPassword("123456");\n        dsc.setDbType(DbType.MYSQL);\n        mpg.setDataSource(dsc);\n\n        // 4、包配置\n        PackageConfig pc = new PackageConfig();\n        pc.setParent("com.xxx.xxx");//自动创建的父包名称\n        pc.setModuleName("xxx"); //模块名\n        pc.setController("controller");\n        pc.setEntity("entity");\n        pc.setService("service");\n        pc.setMapper("mapper");\n        mpg.setPackageInfo(pc);\n\n        // 5、策略配置\n        StrategyConfig strategy = new StrategyConfig();\n\n        //和逆向工程类似，需要通过数据库表来生成代码，这里指定需要单表CRUD的表名\n        strategy.setInclude("database_name");\n\n        strategy.setNaming(NamingStrategy.underline_to_camel);//数据库表映射到实体的命名策略\n\n        strategy.setColumnNaming(NamingStrategy.underline_to_camel);//数据库表字段映射到实体的命名策略\n        strategy.setEntityLombokModel(true); // lombok 模型 @Accessors(chain = true) setter链式操作，开启链式编程\n\n        strategy.setRestControllerStyle(true); //restful api风格控制器\n        strategy.setControllerMappingHyphenStyle(true); //url中驼峰转连字符\n\n        mpg.setStrategy(strategy);\n\n        // 6、执行\n        mpg.execute();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n运行上述代码将会自动生成',normalizedContent:'# mybatis-plus常用操作\n\n\n# 1.mybatis-plus代码自动生成\n\n导入自动生成插件依赖\n\n\x3c!--mp代码自动生成--\x3e\n    <dependencies>\n        <dependency>\n            <groupid>com.baomidou</groupid>\n            <artifactid>mybatis-plus-generator</artifactid>\n            <version>3.3.1</version>\n        </dependency>\n\n        <dependency>\n            <groupid>org.apache.velocity</groupid>\n            <artifactid>velocity-engine-core</artifactid>\n            <version>2.0</version>\n        </dependency>\n    </dependencies>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n\n编写代码生成工具类\n\npackage com.xxx.xxx;\n\nimport com.baomidou.mybatisplus.annotation.dbtype;\nimport com.baomidou.mybatisplus.generator.autogenerator;\nimport com.baomidou.mybatisplus.generator.config.datasourceconfig;\nimport com.baomidou.mybatisplus.generator.config.globalconfig;\nimport com.baomidou.mybatisplus.generator.config.packageconfig;\nimport com.baomidou.mybatisplus.generator.config.strategyconfig;\nimport com.baomidou.mybatisplus.generator.config.rules.namingstrategy;\n\n/**\n * @author star\n * @create 2021-12-10 16:56\n */\npublic class codeget {\n    public static void main(string[] args) {\n\n        // 1、创建代码生成器\n        autogenerator mpg = new autogenerator();\n\n        // 2、全局配置\n        globalconfig gc = new globalconfig();\n        // string projectpath = system.getproperty("user.dir");\n        //可能由于系统问题，这行代码可能找不到，用绝对路径吧\n        //gc.setoutputdir(projectpath + "/src/main/java");\n        //gc.setoutputdir("c:\\\\users\\\\zewan\\\\desktop\\\\guli\\\\demo_parent\\\\service\\\\service_hosp"+"/src/main/java");\n        gc.setoutputdir("e:\\\\gg\\\\r-hospital\\\\code\\\\hospital-project\\\\yygh_parent\\\\service\\\\service_cmn"+"/src/main/java");\n\n        gc.setservicename("%sservice");\t//去掉service接口的首字母i\n        gc.setauthor("xxx");//作者\n        gc.setopen(false);//生成代码后是否自动展开项目目录\n        mpg.setglobalconfig(gc);\n\n        // 3、数据源配置\n        datasourceconfig dsc = new datasourceconfig();\n        dsc.seturl("jdbc:mysql://localhost:3307/database_name?characterencoding=utf-8&usessl=false&servertimezone=gmt%2b8");\n        dsc.setdrivername("com.mysql.jdbc.driver");\n        dsc.setusername("root");\n        dsc.setpassword("123456");\n        dsc.setdbtype(dbtype.mysql);\n        mpg.setdatasource(dsc);\n\n        // 4、包配置\n        packageconfig pc = new packageconfig();\n        pc.setparent("com.xxx.xxx");//自动创建的父包名称\n        pc.setmodulename("xxx"); //模块名\n        pc.setcontroller("controller");\n        pc.setentity("entity");\n        pc.setservice("service");\n        pc.setmapper("mapper");\n        mpg.setpackageinfo(pc);\n\n        // 5、策略配置\n        strategyconfig strategy = new strategyconfig();\n\n        //和逆向工程类似，需要通过数据库表来生成代码，这里指定需要单表crud的表名\n        strategy.setinclude("database_name");\n\n        strategy.setnaming(namingstrategy.underline_to_camel);//数据库表映射到实体的命名策略\n\n        strategy.setcolumnnaming(namingstrategy.underline_to_camel);//数据库表字段映射到实体的命名策略\n        strategy.setentitylombokmodel(true); // lombok 模型 @accessors(chain = true) setter链式操作，开启链式编程\n\n        strategy.setrestcontrollerstyle(true); //restful api风格控制器\n        strategy.setcontrollermappinghyphenstyle(true); //url中驼峰转连字符\n\n        mpg.setstrategy(strategy);\n\n        // 6、执行\n        mpg.execute();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n\n\n运行上述代码将会自动生成',charsets:{cjk:!0}},{title:"Maven常用总结",frontmatter:{title:"Maven常用总结",date:"2022-01-24T10:25:38.000Z",permalink:"/pages/374a76/",categories:["工具-构建部署","Maven"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/20.Maven/10.Maven%E5%B8%B8%E7%94%A8%E6%80%BB%E7%BB%93.html",relativePath:"40.工具-构建部署/20.Maven/10.Maven常用总结.md",key:"v-24476194",path:"/pages/374a76/",headers:[{level:2,title:"标签",slug:"标签",normalizedTitle:"标签",charIndex:2}],headersStr:"标签",content:"# 标签\n\nproperties\n\n> 集中定义依赖版本号\n\ndependencyManagement\n\n> dependencyManagement: 仅仅对配置依赖的标签管理（帮子工程进行管理），不会下载jar包，不会将jar引入当前项目。子工程使用jar包，需要声明才能下载并引入jar包。无需设置版本及依赖范围。\n\ndependencies\n\n> 依赖配置，直接下载jar并引入当前项目,子工程直接使用，无需声明。\n\n<properties>\n    <mysql.version>5.1.32</mysql.version>\n</properties>\n\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>${mysql.version}</version>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",normalizedContent:"# 标签\n\nproperties\n\n> 集中定义依赖版本号\n\ndependencymanagement\n\n> dependencymanagement: 仅仅对配置依赖的标签管理（帮子工程进行管理），不会下载jar包，不会将jar引入当前项目。子工程使用jar包，需要声明才能下载并引入jar包。无需设置版本及依赖范围。\n\ndependencies\n\n> 依赖配置，直接下载jar并引入当前项目,子工程直接使用，无需声明。\n\n<properties>\n    <mysql.version>5.1.32</mysql.version>\n</properties>\n\n<dependencymanagement>\n    <dependencies>\n        <dependency>\n            <groupid>mysql</groupid>\n            <artifactid>mysql-connector-java</artifactid>\n            <version>${mysql.version}</version>\n        </dependency>\n    </dependencies>\n</dependencymanagement>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",charsets:{cjk:!0}},{title:"git多账号ssh免密登录",frontmatter:{title:"git多账号ssh免密登录",date:"2022-01-16T21:55:03.000Z",permalink:"/pages/4a375c/",categories:["工具-构建部署","Git"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/10.Git/10.git%E5%A4%9A%E8%B4%A6%E5%8F%B7ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95.html",relativePath:"40.工具-构建部署/10.Git/10.git多账号ssh免密登录.md",key:"v-4717db20",path:"/pages/4a375c/",headers:[{level:2,title:"情况分析",slug:"情况分析",normalizedTitle:"情况分析",charIndex:23},{level:2,title:"生成SSH密钥",slug:"生成ssh密钥",normalizedTitle:"生成ssh密钥",charIndex:66},{level:2,title:"注意",slug:"注意",normalizedTitle:"注意",charIndex:3635}],headersStr:"情况分析 生成SSH密钥 注意",content:"# Git多平台多账号ssh免密登录\n\n\n# 情况分析\n\n * 同平台多个账号\n * 不同平台账号\n * 不同平台多个账号\n\n\n# 生成SSH密钥\n\n演示两个GitHub账号+两个Gitee账号\n\n需要在本地初始化生成ssh密钥文件\n\n先生成GitHub平台①账号\n\nssh-keygen -t rsa -C \"①test1@test.com\"\n>>>Generatingpublic/privatersa key pair.Enter fileinwhich to save the key (/Users/jitwxs/.ssh/id_rsa):\n↑↑↑对这个ssh密钥命名，一般为id_rsa,为了区分,加上后缀\nid_rsa①_github\n\n\n\n1\n2\n3\n4\n5\n\n\n#ex\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/Cooper/.ssh/id_rsa): id_rsa_xxx_github\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\n\n\n1\n2\n3\n4\n5\n\n\n①账号ssh生成完毕\n\n接下来生成第二个\n\nGitHub平台②账号\n\nssh-keygen -t rsa -C \"②test1@test.com\"\n\n\n\n1\n2\n\n\n$ ssh-keygen -t rsa -C \"xxx@email.com\"\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/c/Users/Cooper/.ssh/id_rsa): id_rsa_xxx_github\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\n\n\n1\n2\n3\n4\n5\n\n\ngitee平台①账号\n\n这个过程会让你输入密码什么的，可以输入也可以不输入直接回车，输入的话就是将来进行 pull/push 代码时需要输入的密码\n\nssh-add id_rsa_xxx_github\n\n ~/.ssh\n$ eval $(ssh-agent)\nAgent pid 1136\n\n ~/.ssh\n$ ssh-add id_rsa_xxx_github\nIdentity added: id_rsa_xxx_github (xxx@email.com)\n\n ~/.ssh\n$ ssh-add.exe id_rsa_xxx_gitee\nIdentity added: id_rsa_xxx_gitee (xxx@email.com)\n\n ~/.ssh\n$ ssh-add.exe id_rsa_xxx_github\nIdentity added: id_rsa_xxx_github (xxx@email.com)\n\n ~/.ssh\n$ ssh-add.exe id_rsa_xxx_gitee\nIdentity added: id_rsa_xxx_gitee (xxx@email.com)\n\n\n ~/.ssh\n$ ssh-add -l\n3072 SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (RSA)\n3072 SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (RSA)\n3072 SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (RSA)\n3072 SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (RSA)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n参考文章\n\n主要配置参考这篇\n\nhttps://www.cnblogs.com/cangqinglang/p/12462272.html\n\n不足之处，避免重复造轮子\n\nssh-add是什么？\n\nhttps://blog.51cto.com/u_15166492/2714379\n\n是否必须每次添加ssh-add\n\nhttps://segmentfault.com/q/1010000000835302\n\n关于ssh-add命令失败\n\nCould not open a connection to your authentication agent.\n\n\n1\n\n\nhttps://stackoverflow.com/questions/17846529/could-not-open-a-connection-to-your-authentication-agent\n\n公钥私钥添加完毕\n\n密钥配置文件，使得根据仓库的remote链接地址自动选择合适的私钥\n\n在.ssh目录下创建config文件\n\nHost 1-github\nHostName github.com\nUser 1\nIdentityFile ~/.ssh/id_rsa_1_github\n\nHost 2-github\nHostName github.com\nUser 2\nIdentityFile ~/.ssh/id_rsa_2_github\n\nHost 1-gitee\nHostName gitee.com\nUser 1\nIdentityFile ~/.ssh/id_rsa_1_gitee\n\nHost 2-gitee\nHostName gitee.com\nUser 2\nIdentityFile ~/.ssh/id_rsa_2_gitee\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n测试\n\n首次连接会报\n\ngithub\n\n ~/.ssh\n$ ssh -T git@1-github\nThe authenticity of host 'github.com (20.205.xxx.xxx)' can't be established.\nECDSA key fingerprint is SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxx\nAre you sure you want to continue connecting (yes/no/[fingerprint])? y\nPlease type 'yes', 'no' or the fingerprint: yes\nWarning: Permanently added 'github.com,20.205.xxx.xxx' (ECDSA) to the list of known hosts.\nHi 1! You've successfully authenticated, but GitHub does not provide shell access.\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\ngitee\n\n ~/.ssh\n$ ssh -T git@1-gitee\nThe authenticity of host 'gitee.com (212.64.xxx.xxx)' can't be established.\nECDSA key fingerprint is SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nAre you sure you want to continue connecting (yes/no/[fingerprint])? yes\nWarning: Permanently added 'gitee.com,212.xxx.xxx.xxx' (ECDSA) to the list of known hosts.\nHi 1! You've successfully authenticated, but GITEE.COM does not provide shell access.\n\n ~/.ssh\n$ ssh -T git@2-gitee\nHi 2! You've successfully authenticated, but GITEE.COM does not provide shell access.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 注意\n\n完成所有的配置，可以尽情根据不同账号提交拉取了\n\n注意：\n\n在ssh提交的时候，如果配置了同平台多账户，请使用别名进行连接\n\n默认使用git@github.com or git@gitee.com\n\n需要改为 git@1-github:xxxxxxxxxxx\n\n但是注意，提交的用户名\n\n系统<全局<本地\n\n没有本地，没有全局，会默认使用系统\n\n所以根据每到一个仓库就创建一个本地账户\n\ngit config --local user.name \"xxx\"\ngit config --local user.email \"xxx@xxx.com\"\n\n\n1\n2\n\n\n或者全部都使用全局账户，不推荐\n\n查看当前仓库的配置信息\n\ngit config --local --list\n\n\n\n1\n2\n\n\n关于git修改remote设置\n\n直接删除\n\ngit remote rm origin\n\ngit remote add origin git@github.com/fjdklajlkfjalkjfl",normalizedContent:"# git多平台多账号ssh免密登录\n\n\n# 情况分析\n\n * 同平台多个账号\n * 不同平台账号\n * 不同平台多个账号\n\n\n# 生成ssh密钥\n\n演示两个github账号+两个gitee账号\n\n需要在本地初始化生成ssh密钥文件\n\n先生成github平台①账号\n\nssh-keygen -t rsa -c \"①test1@test.com\"\n>>>generatingpublic/privatersa key pair.enter fileinwhich to save the key (/users/jitwxs/.ssh/id_rsa):\n↑↑↑对这个ssh密钥命名，一般为id_rsa,为了区分,加上后缀\nid_rsa①_github\n\n\n\n1\n2\n3\n4\n5\n\n\n#ex\ngenerating public/private rsa key pair.\nenter file in which to save the key (/c/users/cooper/.ssh/id_rsa): id_rsa_xxx_github\nenter passphrase (empty for no passphrase):\nenter same passphrase again:\n\n\n1\n2\n3\n4\n5\n\n\n①账号ssh生成完毕\n\n接下来生成第二个\n\ngithub平台②账号\n\nssh-keygen -t rsa -c \"②test1@test.com\"\n\n\n\n1\n2\n\n\n$ ssh-keygen -t rsa -c \"xxx@email.com\"\ngenerating public/private rsa key pair.\nenter file in which to save the key (/c/users/cooper/.ssh/id_rsa): id_rsa_xxx_github\nenter passphrase (empty for no passphrase):\nenter same passphrase again:\n\n\n1\n2\n3\n4\n5\n\n\ngitee平台①账号\n\n这个过程会让你输入密码什么的，可以输入也可以不输入直接回车，输入的话就是将来进行 pull/push 代码时需要输入的密码\n\nssh-add id_rsa_xxx_github\n\n ~/.ssh\n$ eval $(ssh-agent)\nagent pid 1136\n\n ~/.ssh\n$ ssh-add id_rsa_xxx_github\nidentity added: id_rsa_xxx_github (xxx@email.com)\n\n ~/.ssh\n$ ssh-add.exe id_rsa_xxx_gitee\nidentity added: id_rsa_xxx_gitee (xxx@email.com)\n\n ~/.ssh\n$ ssh-add.exe id_rsa_xxx_github\nidentity added: id_rsa_xxx_github (xxx@email.com)\n\n ~/.ssh\n$ ssh-add.exe id_rsa_xxx_gitee\nidentity added: id_rsa_xxx_gitee (xxx@email.com)\n\n\n ~/.ssh\n$ ssh-add -l\n3072 sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (rsa)\n3072 sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (rsa)\n3072 sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (rsa)\n3072 sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx xxxx@email.com (rsa)\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n\n\n参考文章\n\n主要配置参考这篇\n\nhttps://www.cnblogs.com/cangqinglang/p/12462272.html\n\n不足之处，避免重复造轮子\n\nssh-add是什么？\n\nhttps://blog.51cto.com/u_15166492/2714379\n\n是否必须每次添加ssh-add\n\nhttps://segmentfault.com/q/1010000000835302\n\n关于ssh-add命令失败\n\ncould not open a connection to your authentication agent.\n\n\n1\n\n\nhttps://stackoverflow.com/questions/17846529/could-not-open-a-connection-to-your-authentication-agent\n\n公钥私钥添加完毕\n\n密钥配置文件，使得根据仓库的remote链接地址自动选择合适的私钥\n\n在.ssh目录下创建config文件\n\nhost 1-github\nhostname github.com\nuser 1\nidentityfile ~/.ssh/id_rsa_1_github\n\nhost 2-github\nhostname github.com\nuser 2\nidentityfile ~/.ssh/id_rsa_2_github\n\nhost 1-gitee\nhostname gitee.com\nuser 1\nidentityfile ~/.ssh/id_rsa_1_gitee\n\nhost 2-gitee\nhostname gitee.com\nuser 2\nidentityfile ~/.ssh/id_rsa_2_gitee\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n测试\n\n首次连接会报\n\ngithub\n\n ~/.ssh\n$ ssh -t git@1-github\nthe authenticity of host 'github.com (20.205.xxx.xxx)' can't be established.\necdsa key fingerprint is sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxx\nare you sure you want to continue connecting (yes/no/[fingerprint])? y\nplease type 'yes', 'no' or the fingerprint: yes\nwarning: permanently added 'github.com,20.205.xxx.xxx' (ecdsa) to the list of known hosts.\nhi 1! you've successfully authenticated, but github does not provide shell access.\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\ngitee\n\n ~/.ssh\n$ ssh -t git@1-gitee\nthe authenticity of host 'gitee.com (212.64.xxx.xxx)' can't be established.\necdsa key fingerprint is sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nare you sure you want to continue connecting (yes/no/[fingerprint])? yes\nwarning: permanently added 'gitee.com,212.xxx.xxx.xxx' (ecdsa) to the list of known hosts.\nhi 1! you've successfully authenticated, but gitee.com does not provide shell access.\n\n ~/.ssh\n$ ssh -t git@2-gitee\nhi 2! you've successfully authenticated, but gitee.com does not provide shell access.\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# 注意\n\n完成所有的配置，可以尽情根据不同账号提交拉取了\n\n注意：\n\n在ssh提交的时候，如果配置了同平台多账户，请使用别名进行连接\n\n默认使用git@github.com or git@gitee.com\n\n需要改为 git@1-github:xxxxxxxxxxx\n\n但是注意，提交的用户名\n\n系统<全局<本地\n\n没有本地，没有全局，会默认使用系统\n\n所以根据每到一个仓库就创建一个本地账户\n\ngit config --local user.name \"xxx\"\ngit config --local user.email \"xxx@xxx.com\"\n\n\n1\n2\n\n\n或者全部都使用全局账户，不推荐\n\n查看当前仓库的配置信息\n\ngit config --local --list\n\n\n\n1\n2\n\n\n关于git修改remote设置\n\n直接删除\n\ngit remote rm origin\n\ngit remote add origin git@github.com/fjdklajlkfjalkjfl",charsets:{cjk:!0}},{title:"CentOS7相关配置",frontmatter:{title:"CentOS7相关配置",date:"2022-01-16T21:55:37.000Z",permalink:"/pages/711d35/",categories:["工具-构建部署","Linux"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/30.Linux/10.CentOS7%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE.html",relativePath:"40.工具-构建部署/30.Linux/10.CentOS7相关配置.md",key:"v-241511aa",path:"/pages/711d35/",headers:[{level:2,title:"网络配置",slug:"网络配置",normalizedTitle:"网络配置",charIndex:18},{level:3,title:"NAT网络配置",slug:"nat网络配置",normalizedTitle:"nat网络配置",charIndex:27},{level:3,title:"桥接模式配置",slug:"桥接模式配置",normalizedTitle:"桥接模式配置",charIndex:1893},{level:3,title:"主机虚拟机能互相ping通，DNS配置也没问题，还ping通外网的话，就是局域网的问题了",slug:"主机虚拟机能互相ping通-dns配置也没问题-还ping通外网的话-就是局域网的问题了",normalizedTitle:"主机虚拟机能互相ping通，dns配置也没问题，还ping通外网的话，就是局域网的问题了",charIndex:1904},{level:3,title:"桥接模式",slug:"桥接模式",normalizedTitle:"桥接模式",charIndex:1893},{level:3,title:"重启网络服务",slug:"重启网络服务",normalizedTitle:"重启网络服务",charIndex:3555},{level:2,title:"yum配置",slug:"yum配置",normalizedTitle:"yum配置",charIndex:3662},{level:3,title:"更改yum源配置方法一（阿里云源）",slug:"更改yum源配置方法一-阿里云源",normalizedTitle:"更改yum源配置方法一（阿里云源）",charIndex:3672},{level:2,title:"安装vim",slug:"安装vim",normalizedTitle:"安装vim",charIndex:4048},{level:3,title:"",slug:"",normalizedTitle:"",charIndex:0},{level:2,title:"Java开发环境&配置环境变量",slug:"java开发环境-配置环境变量",normalizedTitle:"java开发环境&amp;配置环境变量",charIndex:null},{level:3,title:"没有chrony.conf配置文件",slug:"没有chrony-conf配置文件",normalizedTitle:"没有chrony.conf配置文件",charIndex:4458},{level:2,title:"C语言环境安装",slug:"c语言环境安装",normalizedTitle:"c语言环境安装",charIndex:4695},{level:2,title:"命令行高亮配置",slug:"命令行高亮配置",normalizedTitle:"命令行高亮配置",charIndex:4775},{level:2,title:"防火墙配置",slug:"防火墙配置",normalizedTitle:"防火墙配置",charIndex:5292}],headersStr:"网络配置 NAT网络配置 桥接模式配置 主机虚拟机能互相ping通，DNS配置也没问题，还ping通外网的话，就是局域网的问题了 桥接模式 重启网络服务 yum配置 更改yum源配置方法一（阿里云源） 安装vim  Java开发环境&配置环境变量 没有chrony.conf配置文件 C语言环境安装 命令行高亮配置 防火墙配置",content:"# CentOS7配置文档\n\n\n# 网络配置\n\n\n# NAT网络配置\n\n> 建议优先使用NAT网络进行配置\n\n优点：更换局域网路由器环境时不用更改虚拟机的ip地址\n\n缺点：局域网中的其他机器访问不了虚拟机的ip地址[通过端口号映射已解决]\n\n所以虚拟机使用NAT网络近乎完美\n\n1.打开VMware的虚拟网络编辑器\n\n\n\n① 打开后选择VMnet8网卡\n\n② 取消使用本地DHCP服务将IP地址分配给虚拟机\n\n③ 设置VMnet8网卡的子网，192.168.1.0这里的网段可以在[1-254]之间任意设置\n\n④ 设置子网掩码255.255.255.0，子网以192.168.1.0开始[计网自行了解]\n\n⑤ NAT设置网关和端口映射[解决局域网其他机器访问]\n\n\n\n⑥ 设置VMnet8网卡的网关，也就是稍后虚拟机的网关\n\n⑦ 设置端口转发实现局域网其他机器能访问本机的虚拟机[桥接不考虑]\n\n\n\n⑧ 设置主机的端口0-65535，不要使用常用端口号，例如可用33333\n\n⑨ 填写稍后虚拟机的ip地址\n\n⑩ 设置映射到虚拟机的哪个端口，0-65535，不要使用常用端口号，例如可用33334\n\n最后一路点击 确定 确定 应用 确定 即可~\n\n2.设置Windows中的VMnet8网络适配器\n\n\n\n①\n\n\n\n②\n\n\n\n3.设置虚拟机的ip地址\n\nTYPE=Ethernet                # 网卡类型：为以太网\nPROXY_METHOD=none            # 代理方式：关闭状态\nBROWSER_ONLY=no              # 只是浏览器：否\nBOOTPROTO=static             # 网卡的引导协议：DHCP[中文名称: 动态主机配置协议]\nDEFROUTE=yes                 # 默认路由：是, 不明白的可以百度关键词 `默认路由` \nIPV4_FAILURE_FATAL=no        # 是不开启IPV4致命错误检测：否\nIPV6INIT=yes                 # IPV6是否自动初始化: 是[不会有任何影响, 现在还没用到IPV6]\nIPV6_AUTOCONF=yes            # IPV6是否自动配置：是[不会有任何影响, 现在还没用到IPV6]\nIPV6_DEFROUTE=yes            # IPV6是否可以为默认路由：是[不会有任何影响, 现在还没用到IPV6]\nIPV6_FAILURE_FATAL=no        # 是不开启IPV6致命错误检测：否\nIPV6_ADDR_GEN_MODE=stable-privacy            # IPV6地址生成模型：stable-privacy [这只一种生成IPV6的策略]\nNAME=ens33                    # 网卡物理设备名称\nUUID=f47bde51-fa78-4f79-b68f-d5dd90cfc698    # 通用唯一识别码, 每一个网卡都会有, 不能重复, 否两台linux只有一台网卡可用\nDEVICE=ens33                  # 网卡设备名称, 必须和 `NAME` 值一样\nONBOOT=yes  \nIPADDR=”192.168.1.31”         #192.168.1.x, x为2~254. \nNETMASK=”255.255.255.0” \t  #子网掩码 \nGATEWAY=”192.168.1.2” \t\t  #网关IP\nDNS1=114.114.114.114\t\t  #DNS解析\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n需要更改的项\n\nBOOTPROTO=static\nONBOOT=yes\nIPADDR=192.168.1.31\nNETMASK=255.255.255.0\nGATEWAY=192.168.1.2\nDNS1=114.114.114.114\n\n\n1\n2\n3\n4\n5\n6\n\n\n注意：\n\n\n\nLinux虚拟机的网络配置完成\n\n正确配置好的话就可以\n\n宿主机能ping通虚拟机\n\n虚拟机能ping通宿主机\n\n虚拟机可以访问外网\n\n局域网中的其他机器可以访问宿主机中的虚拟机\n\n参考文章\n\nhttps://www.cnblogs.com/quanweiru/p/4895417.html\n\n\n# 桥接模式配置\n\n\n# 主机虚拟机能互相ping通，DNS配置也没问题，还ping通外网的话，就是局域网的问题了\n\n> 别问我怎么知道, 被SanXiaU搞过很多次了, 搞得我好惨\n\n\n# 桥接模式\n\n> vim /etc/sysconfig/network-scripts/ifcfg-ens33\n> \n> nmtui\n> \n> 相关问题\n> \n> 子网掩码不同也不能通信\n> \n> https://www.zhihu.com/question/366466952/answer/975497431\n\nTYPE=Ethernet                # 网卡类型：为以太网\nPROXY_METHOD=none            # 代理方式：关闭状态\nBROWSER_ONLY=no                # 只是浏览器：否\nBOOTPROTO=dhcp                # 网卡的引导协议：DHCP[中文名称: 动态主机配置协议]\nDEFROUTE=yes                # 默认路由：是, 不明白的可以百度关键词 `默认路由` \nIPV4_FAILURE_FATAL=no        # 是不开启IPV4致命错误检测：否\nIPV6INIT=yes                # IPV6是否自动初始化: 是[不会有任何影响, 现在还没用到IPV6]\nIPV6_AUTOCONF=yes            # IPV6是否自动配置：是[不会有任何影响, 现在还没用到IPV6]\nIPV6_DEFROUTE=yes            # IPV6是否可以为默认路由：是[不会有任何影响, 现在还没用到IPV6]\nIPV6_FAILURE_FATAL=no        # 是不开启IPV6致命错误检测：否\nIPV6_ADDR_GEN_MODE=stable-privacy            # IPV6地址生成模型：stable-privacy [这只一种生成IPV6的策略]\nNAME=ens33                    # 网卡物理设备名称\nUUID=f47bde51-fa78-4f79-b68f-d5dd90cfc698    # 通用唯一识别码, 每一个网卡都会有, 不能重复, 否两台linux只有一台网卡可用\nDEVICE=ens33                    # 网卡设备名称, 必须和 `NAME` 值一样\nONBOOT=no  \nIPADDR=”192.168.0.101” #192.168.59.x, x为3~255. \nNETMASK=”255.255.255.0” #子网掩码 \nGATEWAY=”192.168.66.2” #网关IP\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\nCentOS7桥接网络配置\n\nTYPE=Ethernet\nPROXY_METHOD=none\nBROWSER_ONLY=no\nBOOTPROTO=static\nDEFROUTE=yes\nIPV4_FAILURE_FATAL=no\nIPV6INIT=yes\nIPV6_AUTOCONF=yes\nIPV6_DEFROUTE=yes\nIPV6_FAILURE_FATAL=no\nIPV6_ADDR_GEN_MODE=stable-privacy\nNAME=ens33\nUUID=c5f48c8a-30b9-4289-a4d0-4916445e099d\nDEVICE=ens33\nONBOOT=yes\nIPADDR=192.168.43.23\nGATEWAY=192.168.43.1\nNETMASK=255.255.255.0\nDNS1=8.8.8.8\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 重启网络服务\n\n> systemctl restart network\n> \n> service network restart\n\n--------------网络配置完成----------------\n\n\n# yum配置\n\n\n# 更改yum源配置方法一（阿里云源）\n\n# 1. 安装wget\n\nyum install -y wget\n\n\n1\n\n\n# 2. 备份/etc/yum.repos.d/CentOS-Base.repo文件\n\ncd /etc/yum.repos.d/\nmv CentOS-Base.repo CentOS-Base.repo.back\n\n\n1\n2\n\n\n# 3. 下载阿里云的Centos-6.repo文件\n\nwget -O CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-6.repo\n\n\n1\n\n\n# 4. 重新加载yum\n\nyum clean all\nyum makecache\n\n\n1\n2\n\n\n--------------应用商店配置完成，可以下软件----------------\n\n\n# 安装vim\n\n> yum -y install vim-enhanced\n\n--------------安装vim文本编辑软件完成----------------\n\n删除指定行到指定行（结尾）\n:1,10d\t\t//删除1至10行的内容\n\nG\t\t\t//跳到末尾行\n:1,xxxd\t\t//删除第一行至xxx末尾行\n\n\n1\n2\n3\n4\n5\n\n\n\n#\n\n\n# Java开发环境&配置环境变量\n\n> mkdir /usr/java\n> \n> cd /usr/java\n> \n> tar -zxvf jdk...\n> \n> vim /etc/profile\n> \n> > export JAVA_HOME=/usr/java/jdk1.8.0_241\n> > \n> > export PATH=$PATH:$JAVA_HOME/bin\n\n--------------Java开发环境配置完成----------------\n\n\n# 没有chrony.conf配置文件\n\n> yum -y install chrony\n> \n> vim /etc/chrony.conf\n> \n> systemctl start chronyd\n> \n> systemctl enable chronyd\n\n![image-20200325135117396](C:\\Users\\Cooper\\OneDrive\\E 我的笔记\\Untitled Folder\\image-20200325135117396.png)\n\n\n# C语言环境安装\n\nyum install gcc\n\nyum install gcc-c++\n\nyum install gdb\n\n\n1\n2\n3\n4\n5\n\n\n\n# 命令行高亮配置\n\n1.编辑.bashrc文件中的PS1变量\n\n#编辑.bashrc文件\nvim ~/.bashrc\n\n\n1\n2\n\n\n2.编辑PS1变量的值\n\nPS1='\\[\\e[31;40m\\]\\# \\[\\e[33;40m\\][\\t] \\[\\e[33;40m\\]\\u@\\[\\e[33;40m\\]\\h \\e[36;40m\\]\\W \\e[36;40m\\]\\$ \\e[36;40m\\]➞ \\[\\e[0m\\]'\n\nPS1='\\[\\e[31;7m\\]\\# \\[\\e[33;7m\\][\\t \\u@\\h]\\$ \\e[36;7m\\][\\W]\\[\\e[0m\\]\\e[36;1m\\] ➞ \\[\\e[0m\\]'\n\nPS1='\\[\\e[33;7m\\][\\t \\u@\\h]\\[\\e[0m\\] \\e[36;1m\\]➞ \\e[36;7m\\][\\W]\\$\\[\\e[0m\\] '\n\n#最终效果命令，复制这个即可\nPS1='\\[\\e[31;7m\\]\\# \\[\\e[33;7m\\][\\t \\u@\\h]\\$ \\e[36;7m\\][\\W]\\[\\e[0m\\]\\e[36;1m\\] ➞ \\[\\e[0m\\]'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n3.效果展示\n\n\n\n\n# 防火墙配置\n\n1.一劳永逸的方法，关了它\n\nsystemctl start firewalld.service\n\nsystemctl status firewalld.service\n\nsystemctl stop firewalld.service\n\nsystemctl enable firewalld.service\n\nsystemctl disable firewalld.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n2.开放需要的端口\n\n> --premanent --永久的\n\n#查看已经开放的端口号\nfirewall-cmd --list-all\n\n#开放端口号\n#firewall-cmd --add-port=端口号/协议 --permanent\nfirewall-cmd --add-service=http --permanent\nfirewall-cmd --add-port=3306/tcp --permanent\n\n#关闭端口号\nfirewall-cmd --remove-port=81/tcp --permanent\n\n#查询端口号是否已经开放\nfirewall-cmd --query-port=81/tcp\n\n#重启防火墙\nfirewall-cmd --reload\nsystemctl restart firewalld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n",normalizedContent:"# centos7配置文档\n\n\n# 网络配置\n\n\n# nat网络配置\n\n> 建议优先使用nat网络进行配置\n\n优点：更换局域网路由器环境时不用更改虚拟机的ip地址\n\n缺点：局域网中的其他机器访问不了虚拟机的ip地址[通过端口号映射已解决]\n\n所以虚拟机使用nat网络近乎完美\n\n1.打开vmware的虚拟网络编辑器\n\n\n\n① 打开后选择vmnet8网卡\n\n② 取消使用本地dhcp服务将ip地址分配给虚拟机\n\n③ 设置vmnet8网卡的子网，192.168.1.0这里的网段可以在[1-254]之间任意设置\n\n④ 设置子网掩码255.255.255.0，子网以192.168.1.0开始[计网自行了解]\n\n⑤ nat设置网关和端口映射[解决局域网其他机器访问]\n\n\n\n⑥ 设置vmnet8网卡的网关，也就是稍后虚拟机的网关\n\n⑦ 设置端口转发实现局域网其他机器能访问本机的虚拟机[桥接不考虑]\n\n\n\n⑧ 设置主机的端口0-65535，不要使用常用端口号，例如可用33333\n\n⑨ 填写稍后虚拟机的ip地址\n\n⑩ 设置映射到虚拟机的哪个端口，0-65535，不要使用常用端口号，例如可用33334\n\n最后一路点击 确定 确定 应用 确定 即可~\n\n2.设置windows中的vmnet8网络适配器\n\n\n\n①\n\n\n\n②\n\n\n\n3.设置虚拟机的ip地址\n\ntype=ethernet                # 网卡类型：为以太网\nproxy_method=none            # 代理方式：关闭状态\nbrowser_only=no              # 只是浏览器：否\nbootproto=static             # 网卡的引导协议：dhcp[中文名称: 动态主机配置协议]\ndefroute=yes                 # 默认路由：是, 不明白的可以百度关键词 `默认路由` \nipv4_failure_fatal=no        # 是不开启ipv4致命错误检测：否\nipv6init=yes                 # ipv6是否自动初始化: 是[不会有任何影响, 现在还没用到ipv6]\nipv6_autoconf=yes            # ipv6是否自动配置：是[不会有任何影响, 现在还没用到ipv6]\nipv6_defroute=yes            # ipv6是否可以为默认路由：是[不会有任何影响, 现在还没用到ipv6]\nipv6_failure_fatal=no        # 是不开启ipv6致命错误检测：否\nipv6_addr_gen_mode=stable-privacy            # ipv6地址生成模型：stable-privacy [这只一种生成ipv6的策略]\nname=ens33                    # 网卡物理设备名称\nuuid=f47bde51-fa78-4f79-b68f-d5dd90cfc698    # 通用唯一识别码, 每一个网卡都会有, 不能重复, 否两台linux只有一台网卡可用\ndevice=ens33                  # 网卡设备名称, 必须和 `name` 值一样\nonboot=yes  \nipaddr=”192.168.1.31”         #192.168.1.x, x为2~254. \nnetmask=”255.255.255.0” \t  #子网掩码 \ngateway=”192.168.1.2” \t\t  #网关ip\ndns1=114.114.114.114\t\t  #dns解析\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n需要更改的项\n\nbootproto=static\nonboot=yes\nipaddr=192.168.1.31\nnetmask=255.255.255.0\ngateway=192.168.1.2\ndns1=114.114.114.114\n\n\n1\n2\n3\n4\n5\n6\n\n\n注意：\n\n\n\nlinux虚拟机的网络配置完成\n\n正确配置好的话就可以\n\n宿主机能ping通虚拟机\n\n虚拟机能ping通宿主机\n\n虚拟机可以访问外网\n\n局域网中的其他机器可以访问宿主机中的虚拟机\n\n参考文章\n\nhttps://www.cnblogs.com/quanweiru/p/4895417.html\n\n\n# 桥接模式配置\n\n\n# 主机虚拟机能互相ping通，dns配置也没问题，还ping通外网的话，就是局域网的问题了\n\n> 别问我怎么知道, 被sanxiau搞过很多次了, 搞得我好惨\n\n\n# 桥接模式\n\n> vim /etc/sysconfig/network-scripts/ifcfg-ens33\n> \n> nmtui\n> \n> 相关问题\n> \n> 子网掩码不同也不能通信\n> \n> https://www.zhihu.com/question/366466952/answer/975497431\n\ntype=ethernet                # 网卡类型：为以太网\nproxy_method=none            # 代理方式：关闭状态\nbrowser_only=no                # 只是浏览器：否\nbootproto=dhcp                # 网卡的引导协议：dhcp[中文名称: 动态主机配置协议]\ndefroute=yes                # 默认路由：是, 不明白的可以百度关键词 `默认路由` \nipv4_failure_fatal=no        # 是不开启ipv4致命错误检测：否\nipv6init=yes                # ipv6是否自动初始化: 是[不会有任何影响, 现在还没用到ipv6]\nipv6_autoconf=yes            # ipv6是否自动配置：是[不会有任何影响, 现在还没用到ipv6]\nipv6_defroute=yes            # ipv6是否可以为默认路由：是[不会有任何影响, 现在还没用到ipv6]\nipv6_failure_fatal=no        # 是不开启ipv6致命错误检测：否\nipv6_addr_gen_mode=stable-privacy            # ipv6地址生成模型：stable-privacy [这只一种生成ipv6的策略]\nname=ens33                    # 网卡物理设备名称\nuuid=f47bde51-fa78-4f79-b68f-d5dd90cfc698    # 通用唯一识别码, 每一个网卡都会有, 不能重复, 否两台linux只有一台网卡可用\ndevice=ens33                    # 网卡设备名称, 必须和 `name` 值一样\nonboot=no  \nipaddr=”192.168.0.101” #192.168.59.x, x为3~255. \nnetmask=”255.255.255.0” #子网掩码 \ngateway=”192.168.66.2” #网关ip\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\ncentos7桥接网络配置\n\ntype=ethernet\nproxy_method=none\nbrowser_only=no\nbootproto=static\ndefroute=yes\nipv4_failure_fatal=no\nipv6init=yes\nipv6_autoconf=yes\nipv6_defroute=yes\nipv6_failure_fatal=no\nipv6_addr_gen_mode=stable-privacy\nname=ens33\nuuid=c5f48c8a-30b9-4289-a4d0-4916445e099d\ndevice=ens33\nonboot=yes\nipaddr=192.168.43.23\ngateway=192.168.43.1\nnetmask=255.255.255.0\ndns1=8.8.8.8\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n\n\n\n# 重启网络服务\n\n> systemctl restart network\n> \n> service network restart\n\n--------------网络配置完成----------------\n\n\n# yum配置\n\n\n# 更改yum源配置方法一（阿里云源）\n\n# 1. 安装wget\n\nyum install -y wget\n\n\n1\n\n\n# 2. 备份/etc/yum.repos.d/centos-base.repo文件\n\ncd /etc/yum.repos.d/\nmv centos-base.repo centos-base.repo.back\n\n\n1\n2\n\n\n# 3. 下载阿里云的centos-6.repo文件\n\nwget -o centos-base.repo http://mirrors.aliyun.com/repo/centos-6.repo\n\n\n1\n\n\n# 4. 重新加载yum\n\nyum clean all\nyum makecache\n\n\n1\n2\n\n\n--------------应用商店配置完成，可以下软件----------------\n\n\n# 安装vim\n\n> yum -y install vim-enhanced\n\n--------------安装vim文本编辑软件完成----------------\n\n删除指定行到指定行（结尾）\n:1,10d\t\t//删除1至10行的内容\n\ng\t\t\t//跳到末尾行\n:1,xxxd\t\t//删除第一行至xxx末尾行\n\n\n1\n2\n3\n4\n5\n\n\n\n#\n\n\n# java开发环境&配置环境变量\n\n> mkdir /usr/java\n> \n> cd /usr/java\n> \n> tar -zxvf jdk...\n> \n> vim /etc/profile\n> \n> > export java_home=/usr/java/jdk1.8.0_241\n> > \n> > export path=$path:$java_home/bin\n\n--------------java开发环境配置完成----------------\n\n\n# 没有chrony.conf配置文件\n\n> yum -y install chrony\n> \n> vim /etc/chrony.conf\n> \n> systemctl start chronyd\n> \n> systemctl enable chronyd\n\n![image-20200325135117396](c:\\users\\cooper\\onedrive\\e 我的笔记\\untitled folder\\image-20200325135117396.png)\n\n\n# c语言环境安装\n\nyum install gcc\n\nyum install gcc-c++\n\nyum install gdb\n\n\n1\n2\n3\n4\n5\n\n\n\n# 命令行高亮配置\n\n1.编辑.bashrc文件中的ps1变量\n\n#编辑.bashrc文件\nvim ~/.bashrc\n\n\n1\n2\n\n\n2.编辑ps1变量的值\n\nps1='\\[\\e[31;40m\\]\\# \\[\\e[33;40m\\][\\t] \\[\\e[33;40m\\]\\u@\\[\\e[33;40m\\]\\h \\e[36;40m\\]\\w \\e[36;40m\\]\\$ \\e[36;40m\\]➞ \\[\\e[0m\\]'\n\nps1='\\[\\e[31;7m\\]\\# \\[\\e[33;7m\\][\\t \\u@\\h]\\$ \\e[36;7m\\][\\w]\\[\\e[0m\\]\\e[36;1m\\] ➞ \\[\\e[0m\\]'\n\nps1='\\[\\e[33;7m\\][\\t \\u@\\h]\\[\\e[0m\\] \\e[36;1m\\]➞ \\e[36;7m\\][\\w]\\$\\[\\e[0m\\] '\n\n#最终效果命令，复制这个即可\nps1='\\[\\e[31;7m\\]\\# \\[\\e[33;7m\\][\\t \\u@\\h]\\$ \\e[36;7m\\][\\w]\\[\\e[0m\\]\\e[36;1m\\] ➞ \\[\\e[0m\\]'\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n3.效果展示\n\n\n\n\n# 防火墙配置\n\n1.一劳永逸的方法，关了它\n\nsystemctl start firewalld.service\n\nsystemctl status firewalld.service\n\nsystemctl stop firewalld.service\n\nsystemctl enable firewalld.service\n\nsystemctl disable firewalld.service\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n2.开放需要的端口\n\n> --premanent --永久的\n\n#查看已经开放的端口号\nfirewall-cmd --list-all\n\n#开放端口号\n#firewall-cmd --add-port=端口号/协议 --permanent\nfirewall-cmd --add-service=http --permanent\nfirewall-cmd --add-port=3306/tcp --permanent\n\n#关闭端口号\nfirewall-cmd --remove-port=81/tcp --permanent\n\n#查询端口号是否已经开放\nfirewall-cmd --query-port=81/tcp\n\n#重启防火墙\nfirewall-cmd --reload\nsystemctl restart firewalld\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n",charsets:{cjk:!0}},{title:"环境变量",frontmatter:{title:"环境变量",date:"2022-01-27T18:57:37.000Z",permalink:"/pages/87e646/",categories:["工具-构建部署","Linux"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/30.Linux/15.%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.html",relativePath:"40.工具-构建部署/30.Linux/15.环境变量.md",key:"v-522bd708",path:"/pages/87e646/",headers:[{level:2,title:"配置各项环境变量",slug:"配置各项环境变量",normalizedTitle:"配置各项环境变量",charIndex:2},{level:3,title:"profile和profile.d目录区别",slug:"profile和profile-d目录区别",normalizedTitle:"profile和profile.d目录区别",charIndex:15}],headersStr:"配置各项环境变量 profile和profile.d目录区别",content:"# 配置各项环境变量\n\n\n# profile和profile.d目录区别\n\n> profile.d中的.sh文件在profile中加载\n\n在 /etc/profile 这个文件中有这么一段 shell, 会在每次启动时自动加载 profile.d 下的每个配置\n\nif [ -d /etc/profile.d ]; then\nfor i in /etc/profile.d/*.sh; do\nif [ -r $i ]; then\n. $i\nfi\ndone\nunset i\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n区别\n\n> 都用来设置环境变量文件 /etc/profile.d/ 高度解耦, 比 /etc/profile 好维护，不想要什么变量直接删除 /etc/profile.d/ 下对应的 shell 脚本即可 /etc/profile 和 /etc/profile.d 同样是登录（login）级别的变量，当用户重新登录 shell 时会触发 设置登录级别的变量，重新登录 shell，或者 source /etc/profile 需要添加新的环境变量时 在 /etc/profile.d/ 目录下新建对应的 sh 文件即可\n\n#使环境变量生效\nsource /etc/profile\n\nsource /etc/profile.d/xxx_env.\n\n\n1\n2\n3\n4\n\n\n例子：创建java的环境变量\n\n# 1.进入/etc/profile.d目录\ncd /etc/profile.d\n\n# 2.创建.sh文件，文件名见名知意\ntouch java_env.sh\n\n# 3.编辑文件，写入环境变量\n\n#JAVA_HOME\nJAVA_HOME=/opt/jdk1.8.0_241\nPATH=$PATH:$JAVA_HOME/bin\nexport PATH JAVA_HOME\n\n# 4.使环境变量生效\nsource /etc/profile.d/java_env.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n例子：创建maven的环境变量\n\n# 1.进入/etc/profile.d目录\ncd /etc/profile.d\n\n# 2.创建.sh文件，文件名见名知意\ntouch maven_env.sh\n\n# 3.编辑文件，写入环境变量\n\n#MAVEN_HOME\nMAVEN_HOME=/usr/local/maven\nPATH=$PATH:$MAVEN_HOME/bin\nexport PATH MAVEN_HOME\n\n# 4.使环境变量生效\nsource /etc/profile.d/maven_env.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n原文：profile.d和profile的区别",normalizedContent:"# 配置各项环境变量\n\n\n# profile和profile.d目录区别\n\n> profile.d中的.sh文件在profile中加载\n\n在 /etc/profile 这个文件中有这么一段 shell, 会在每次启动时自动加载 profile.d 下的每个配置\n\nif [ -d /etc/profile.d ]; then\nfor i in /etc/profile.d/*.sh; do\nif [ -r $i ]; then\n. $i\nfi\ndone\nunset i\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n区别\n\n> 都用来设置环境变量文件 /etc/profile.d/ 高度解耦, 比 /etc/profile 好维护，不想要什么变量直接删除 /etc/profile.d/ 下对应的 shell 脚本即可 /etc/profile 和 /etc/profile.d 同样是登录（login）级别的变量，当用户重新登录 shell 时会触发 设置登录级别的变量，重新登录 shell，或者 source /etc/profile 需要添加新的环境变量时 在 /etc/profile.d/ 目录下新建对应的 sh 文件即可\n\n#使环境变量生效\nsource /etc/profile\n\nsource /etc/profile.d/xxx_env.\n\n\n1\n2\n3\n4\n\n\n例子：创建java的环境变量\n\n# 1.进入/etc/profile.d目录\ncd /etc/profile.d\n\n# 2.创建.sh文件，文件名见名知意\ntouch java_env.sh\n\n# 3.编辑文件，写入环境变量\n\n#java_home\njava_home=/opt/jdk1.8.0_241\npath=$path:$java_home/bin\nexport path java_home\n\n# 4.使环境变量生效\nsource /etc/profile.d/java_env.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n例子：创建maven的环境变量\n\n# 1.进入/etc/profile.d目录\ncd /etc/profile.d\n\n# 2.创建.sh文件，文件名见名知意\ntouch maven_env.sh\n\n# 3.编辑文件，写入环境变量\n\n#maven_home\nmaven_home=/usr/local/maven\npath=$path:$maven_home/bin\nexport path maven_home\n\n# 4.使环境变量生效\nsource /etc/profile.d/maven_env.sh\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\n\n原文：profile.d和profile的区别",charsets:{cjk:!0}},{title:"Vim",frontmatter:{title:"Vim",date:"2022-01-16T21:55:37.000Z",permalink:"/pages/b78243/",categories:["工具-构建部署","Linux"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/30.Linux/30.Vim.html",relativePath:"40.工具-构建部署/30.Linux/30.Vim.md",key:"v-597c1aba",path:"/pages/b78243/",headers:[{level:3,title:"搜索关键字",slug:"搜索关键字",normalizedTitle:"搜索关键字",charIndex:23},{level:3,title:"设置行号",slug:"设置行号",normalizedTitle:"设置行号",charIndex:117},{level:3,title:"删除指定行到指定行（结尾）",slug:"删除指定行到指定行-结尾",normalizedTitle:"删除指定行到指定行（结尾）",charIndex:140},{level:3,title:"复制粘贴某行或多行",slug:"复制粘贴某行或多行",normalizedTitle:"复制粘贴某行或多行",charIndex:225}],headersStr:"搜索关键字 设置行号 删除指定行到指定行（结尾） 复制粘贴某行或多行",content:"# Vim\n\n> 倒序，最新在第一个\n\n\n# 搜索关键字\n\n:/关键字\t回车\t\t从文档当前位置向下查找关键字，摁n查找下一个，N上一个\n:?关键字\t回车\t\t从文档当前位置向上查找关键字，摁n查找上一个，N下一个\n\n\n1\n2\n\n\n\n# 设置行号\n\n:set nu\n\n\n1\n\n\n\n# 删除指定行到指定行（结尾）\n\n:1,10d\t\t//删除1至10行的内容\nG\t\t\t//跳到末尾行\n:1,xxxd\t\t//删除第一行至xxx末尾行\n\n\n1\n2\n3\n\n\n\n# 复制粘贴某行或多行\n\n//在命令模式下\n\nyy\t\t\t//复制\nnyy\t\t\t//复制当前行开始n行\n\np\t\t\t//粘贴\t到光标当前行\n\n\n\n1\n2\n3\n4\n5\n6\n7\n",normalizedContent:"# vim\n\n> 倒序，最新在第一个\n\n\n# 搜索关键字\n\n:/关键字\t回车\t\t从文档当前位置向下查找关键字，摁n查找下一个，n上一个\n:?关键字\t回车\t\t从文档当前位置向上查找关键字，摁n查找上一个，n下一个\n\n\n1\n2\n\n\n\n# 设置行号\n\n:set nu\n\n\n1\n\n\n\n# 删除指定行到指定行（结尾）\n\n:1,10d\t\t//删除1至10行的内容\ng\t\t\t//跳到末尾行\n:1,xxxd\t\t//删除第一行至xxx末尾行\n\n\n1\n2\n3\n\n\n\n# 复制粘贴某行或多行\n\n//在命令模式下\n\nyy\t\t\t//复制\nnyy\t\t\t//复制当前行开始n行\n\np\t\t\t//粘贴\t到光标当前行\n\n\n\n1\n2\n3\n4\n5\n6\n7\n",charsets:{cjk:!0}},{title:"常用命令",frontmatter:{title:"常用命令",date:"2022-01-16T21:55:37.000Z",permalink:"/pages/80ad7f/",categories:["工具-构建部署","Linux"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/30.Linux/20.%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html",relativePath:"40.工具-构建部署/30.Linux/20.常用命令.md",key:"v-1c48e214",path:"/pages/80ad7f/",headers:[{level:2,title:"包管理工具",slug:"包管理工具",normalizedTitle:"包管理工具",charIndex:48},{level:3,title:"rpm",slug:"rpm",normalizedTitle:"rpm",charIndex:58},{level:3,title:"yum",slug:"yum",normalizedTitle:"yum",charIndex:489},{level:3,title:"apt-get",slug:"apt-get",normalizedTitle:"apt-get",charIndex:524},{level:2,title:"文件命令",slug:"文件命令",normalizedTitle:"文件命令",charIndex:633},{level:3,title:"ls",slug:"ls",normalizedTitle:"ls",charIndex:642},{level:2,title:"内存管理",slug:"内存管理",normalizedTitle:"内存管理",charIndex:710},{level:3,title:"free",slug:"free",normalizedTitle:"free",charIndex:719},{level:2,title:"服务管理",slug:"服务管理",normalizedTitle:"服务管理",charIndex:759},{level:3,title:"systemctl",slug:"systemctl",normalizedTitle:"systemctl",charIndex:799}],headersStr:"包管理工具 rpm yum apt-get 文件命令 ls 内存管理 free 服务管理 systemctl",content:"# Linux常用命令\n\n参考文章\n\nLinux 查看CPU信息，机器型号，内存等信息\n\n\n# 包管理工具\n\n\n# rpm\n\n# 1.软件安装\n\n> -i --install 安装软件\n> \n> -v --verbose 提供详细的信息输出\n> \n> -h --hash 软件包安装的时候列出hash标记，展示进度条\n\nrpm -ivh xxx\n\nrpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm\nrpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm\nrpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm\n\n\n1\n2\n3\n4\n5\n\n\n# 2.查询软件包\n\n> -q --query 查询\n> \n> -a --all 所有\n> \n> grep 管道过滤命令\n> \n> -i --ignore 忽略大小写\n\nrpm -qa|grep xxx\n\nrpm -qa|grep mysql\n\n\n1\n2\n3\n\n\n\n# yum\n\n> yum软件源\n\n更换国内源\n\n\n\n\n\n1\n2\n\n\n\n# apt-get\n\n> 安装apt-get源的软件\n\n#更新apt-get源\napt-get update\n\n#安装软件\napt-get -y install vim\n\n\n1\n2\n3\n4\n5\n\n\n更换国内源\n\n\n\n\n# 文件命令\n\n\n# ls\n\n> -a --all 显示所有信息\n\n#ls命令后面可以跟条件\nls mysql\nls msyql*\n\n\n1\n2\n3\n\n\n\n# 内存管理\n\n\n# free\n\n#以MB单位查看内存使用信息\nfree -m\n\n\n1\n2\n\n\n\n# 服务管理\n\n查看系统所有服务/运行的服务\n\n查看系统所有服务（截图版）\n\n\n# systemctl\n\n#查看系统所有服务\nsystemctl list-unit-files\n\n\nsystemctl\nsystemctl | more\n\n#查看指定服务\nsystemctl | grep httpd\n\n#查看服务状态\nsystemctl status mysqld\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",normalizedContent:"# linux常用命令\n\n参考文章\n\nlinux 查看cpu信息，机器型号，内存等信息\n\n\n# 包管理工具\n\n\n# rpm\n\n# 1.软件安装\n\n> -i --install 安装软件\n> \n> -v --verbose 提供详细的信息输出\n> \n> -h --hash 软件包安装的时候列出hash标记，展示进度条\n\nrpm -ivh xxx\n\nrpm -ivh mysql-community-libs-5.7.28-1.el7.x86_64.rpm\nrpm -ivh mysql-community-client-5.7.28-1.el7.x86_64.rpm\nrpm -ivh mysql-community-server-5.7.28-1.el7.x86_64.rpm\n\n\n1\n2\n3\n4\n5\n\n\n# 2.查询软件包\n\n> -q --query 查询\n> \n> -a --all 所有\n> \n> grep 管道过滤命令\n> \n> -i --ignore 忽略大小写\n\nrpm -qa|grep xxx\n\nrpm -qa|grep mysql\n\n\n1\n2\n3\n\n\n\n# yum\n\n> yum软件源\n\n更换国内源\n\n\n\n\n\n1\n2\n\n\n\n# apt-get\n\n> 安装apt-get源的软件\n\n#更新apt-get源\napt-get update\n\n#安装软件\napt-get -y install vim\n\n\n1\n2\n3\n4\n5\n\n\n更换国内源\n\n\n\n\n# 文件命令\n\n\n# ls\n\n> -a --all 显示所有信息\n\n#ls命令后面可以跟条件\nls mysql\nls msyql*\n\n\n1\n2\n3\n\n\n\n# 内存管理\n\n\n# free\n\n#以mb单位查看内存使用信息\nfree -m\n\n\n1\n2\n\n\n\n# 服务管理\n\n查看系统所有服务/运行的服务\n\n查看系统所有服务（截图版）\n\n\n# systemctl\n\n#查看系统所有服务\nsystemctl list-unit-files\n\n\nsystemctl\nsystemctl | more\n\n#查看指定服务\nsystemctl | grep httpd\n\n#查看服务状态\nsystemctl status mysqld\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n",charsets:{cjk:!0}},{title:"Docker安装使用",frontmatter:{title:"Docker安装使用",date:"2022-01-16T22:00:24.000Z",permalink:"/pages/118379/",categories:["工具-构建部署","Docker"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/40.Docker/10.Docker%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8.html",relativePath:"40.工具-构建部署/40.Docker/10.Docker安装使用.md",key:"v-35d3a620",path:"/pages/118379/",headers:[{level:2,title:"什么是Docker",slug:"什么是docker",normalizedTitle:"什么是docker",charIndex:147},{level:2,title:"Docker 原理",slug:"docker-原理",normalizedTitle:"docker 原理",charIndex:790},{level:2,title:"Docker 安装",slug:"docker-安装",normalizedTitle:"docker 安装",charIndex:2},{level:2,title:"Docker常用命令",slug:"docker常用命令",normalizedTitle:"docker常用命令",charIndex:1561},{level:3,title:"Dokcer管理操作",slug:"dokcer管理操作",normalizedTitle:"dokcer管理操作",charIndex:1576},{level:3,title:"Docker镜像操作",slug:"docker镜像操作",normalizedTitle:"docker镜像操作",charIndex:1791},{level:3,title:"Docker容器操作",slug:"docker容器操作",normalizedTitle:"docker容器操作",charIndex:1928}],headersStr:"什么是Docker Docker 原理 Docker 安装 Docker常用命令 Dokcer管理操作 Docker镜像操作 Docker容器操作",content:'# Docker 安装和使用\n\n官方网站\n\nhttps://www.docker.com/\n\n官方文档\n\nhttps://docs.docker.com/\n\n其他文档\n\nhttps://docker.easydoc.net/doc/81170005/cCewZWoN/lTKfePfP\n\n\n# 什么是Docker\n\n> Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production.\n\n> Docker 是一个用于开发、传送和运行应用程序的开放平台。Docker 使您能够将应用程序与基础设施分开，以便您可以快速交付软件。使用 Docker，您可以像管理应用程序一样管理基础设施。通过利用 Docker 的快速交付、测试和部署代码的方法，您可以显着减少编写代码和在生产中运行代码之间的延迟。\n\n\n# Docker 原理\n\n参考文章\n\nDooooooocker\n\nDocker从入门实践\n\n\n# Docker 安装\n\n#参考文档：\nhttps://help.aliyun.com/document_detail/60742.html?spm=a2c4g.11174283.6.548.24c14541ssYFIZ\n\n#第一步：安装必要的一些系统工具\nyum install -y yum-utils device-mapper-persistent-data lvm2\n\n#第二步：添加软件源信息\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n##第三步：更新并安装Docker-CE\nyum makecache fast\nyum -y install docker-ce\n\n#第四步：开启Docker服务\nservice docker start\n\n#设置开机自启动\nsystemctl enable docker\n\n#第五步、测试是否安装成功\ndocker -v\n\n#配置镜像\nvim /etc/docker/daemon.json\n\n{ \n"registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"] \n}\n\n#使镜像生效\nsystemctl daemon-reload\n\n#c\nsystemctl restart docker\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# Docker常用命令\n\n\n# Dokcer管理操作\n\n#启动，停止，重启，查看状态(CentOS7)\n\n#docker运行状态查看\nSystemctl status docker\n\n#docker启动\nSystemctl start docker\n\n#docker停止\nSystemctl stop docker\n\n#docker重启\nSystemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# Docker镜像操作\n\n#镜像搜索\ndocker search 镜像名称\n\n#镜像拉取，不指定版本会下载最新版本 \ndocker pull 镜像名称:版本\n\n#查看已拉取镜像\ndocker images\n\n#删除镜像\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# Docker容器操作\n\n#创建容器[安装应用]\ndocker run\n\t#例如创建MongoDB容器\n\tdocker run -d --restart=always -p 27017:27017 --name mymongo -v /data/db:/data/db -d mongo:4.4.8\n\n\n#查看创建的容器[查看安装的应用]\ndocker ps\n\n#进入容器[使用安装的应用]\ndocker exec -it 容器名 /bin/bash\ndocker exec -it 容器名 bash\n\n#退出容器\nexit\n\n#安装完成后，非首次，启动容器\ndocker start 容器名/容器ID\n\n#停止容器\ndocker stop 容器名/容器ID\n\n#删除容器[先停止容器再删除容器]\ndocker rm 容器名/容器ID\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n',normalizedContent:'# docker 安装和使用\n\n官方网站\n\nhttps://www.docker.com/\n\n官方文档\n\nhttps://docs.docker.com/\n\n其他文档\n\nhttps://docker.easydoc.net/doc/81170005/ccewzwon/ltkfepfp\n\n\n# 什么是docker\n\n> docker is an open platform for developing, shipping, and running applications. docker enables you to separate your applications from your infrastructure so you can deliver software quickly. with docker, you can manage your infrastructure in the same ways you manage your applications. by taking advantage of docker’s methodologies for shipping, testing, and deploying code quickly, you can significantly reduce the delay between writing code and running it in production.\n\n> docker 是一个用于开发、传送和运行应用程序的开放平台。docker 使您能够将应用程序与基础设施分开，以便您可以快速交付软件。使用 docker，您可以像管理应用程序一样管理基础设施。通过利用 docker 的快速交付、测试和部署代码的方法，您可以显着减少编写代码和在生产中运行代码之间的延迟。\n\n\n# docker 原理\n\n参考文章\n\ndooooooocker\n\ndocker从入门实践\n\n\n# docker 安装\n\n#参考文档：\nhttps://help.aliyun.com/document_detail/60742.html?spm=a2c4g.11174283.6.548.24c14541ssyfiz\n\n#第一步：安装必要的一些系统工具\nyum install -y yum-utils device-mapper-persistent-data lvm2\n\n#第二步：添加软件源信息\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n##第三步：更新并安装docker-ce\nyum makecache fast\nyum -y install docker-ce\n\n#第四步：开启docker服务\nservice docker start\n\n#设置开机自启动\nsystemctl enable docker\n\n#第五步、测试是否安装成功\ndocker -v\n\n#配置镜像\nvim /etc/docker/daemon.json\n\n{ \n"registry-mirrors": ["https://docker.mirrors.ustc.edu.cn"] \n}\n\n#使镜像生效\nsystemctl daemon-reload\n\n#c\nsystemctl restart docker\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n\n\n\n# docker常用命令\n\n\n# dokcer管理操作\n\n#启动，停止，重启，查看状态(centos7)\n\n#docker运行状态查看\nsystemctl status docker\n\n#docker启动\nsystemctl start docker\n\n#docker停止\nsystemctl stop docker\n\n#docker重启\nsystemctl restart docker\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n\n\n\n# docker镜像操作\n\n#镜像搜索\ndocker search 镜像名称\n\n#镜像拉取，不指定版本会下载最新版本 \ndocker pull 镜像名称:版本\n\n#查看已拉取镜像\ndocker images\n\n#删除镜像\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# docker容器操作\n\n#创建容器[安装应用]\ndocker run\n\t#例如创建mongodb容器\n\tdocker run -d --restart=always -p 27017:27017 --name mymongo -v /data/db:/data/db -d mongo:4.4.8\n\n\n#查看创建的容器[查看安装的应用]\ndocker ps\n\n#进入容器[使用安装的应用]\ndocker exec -it 容器名 /bin/bash\ndocker exec -it 容器名 bash\n\n#退出容器\nexit\n\n#安装完成后，非首次，启动容器\ndocker start 容器名/容器id\n\n#停止容器\ndocker stop 容器名/容器id\n\n#删除容器[先停止容器再删除容器]\ndocker rm 容器名/容器id\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n',charsets:{cjk:!0}},{title:"Docker开发环境搭建",frontmatter:{title:"Docker开发环境搭建",date:"2022-01-27T19:31:07.000Z",permalink:"/pages/368a0b/",categories:["工具-构建部署","Docker"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/40.Docker/20.Docker%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",relativePath:"40.工具-构建部署/40.Docker/20.Docker开发环境搭建.md",key:"v-88904f4c",path:"/pages/368a0b/",headers:[{level:2,title:"Docker安装各类环境",slug:"docker安装各类环境",normalizedTitle:"docker安装各类环境",charIndex:2},{level:3,title:"搜索相关镜像",slug:"搜索相关镜像",normalizedTitle:"搜索相关镜像",charIndex:19},{level:3,title:"安装MySQL",slug:"安装mysql",normalizedTitle:"安装mysql",charIndex:152},{level:3,title:"安装redis",slug:"安装redis",normalizedTitle:"安装redis",charIndex:460},{level:3,title:"安装MongoDB",slug:"安装mongodb",normalizedTitle:"安装mongodb",charIndex:618},{level:3,title:"安装RabbitMQ",slug:"安装rabbitmq",normalizedTitle:"安装rabbitmq",charIndex:940},{level:3,title:"安装RabbitMQ-插件",slug:"安装rabbitmq-插件",normalizedTitle:"安装rabbitmq-插件",charIndex:1149},{level:3,title:"安装nacos",slug:"安装nacos",normalizedTitle:"安装nacos",charIndex:1781},{level:3,title:"安装sentinel",slug:"安装sentinel",normalizedTitle:"安装sentinel",charIndex:2035},{level:3,title:"安装ElasticSearch",slug:"安装elasticsearch",normalizedTitle:"安装elasticsearch",charIndex:2264},{level:3,title:"安装kibana",slug:"安装kibana",normalizedTitle:"安装kibana",charIndex:2304},{level:3,title:"安装zipkin",slug:"安装zipkin",normalizedTitle:"安装zipkin",charIndex:2337},{level:3,title:"安装minio",slug:"安装minio",normalizedTitle:"安装minio",charIndex:2547},{level:3,title:"安装logstash",slug:"安装logstash",normalizedTitle:"安装logstash",charIndex:2946},{level:2,title:"停止所有容器",slug:"停止所有容器",normalizedTitle:"停止所有容器",charIndex:3610}],headersStr:"Docker安装各类环境 搜索相关镜像 安装MySQL 安装redis 安装MongoDB 安装RabbitMQ 安装RabbitMQ-插件 安装nacos 安装sentinel 安装ElasticSearch 安装kibana 安装zipkin 安装minio 安装logstash 停止所有容器",content:'# Docker安装各类环境\n\n\n# 搜索相关镜像\n\n#镜像搜索\ndocker search 镜像名称\n\n#镜像拉取，不指定版本会下载最新版本 \ndocker pull 镜像名称:版本\n\n#查看已拉取镜像\ndocker images\n\n#删除镜像\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 安装MySQL\n\n1.拉取镜像\n\ndocker pull mysql:5.7\n\n\n1\n\n\n2.启动\n\ndocker run --name mysql57 --restart=always -v /home/ljaer/mysql:/var/lib/mysql -p 33306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7\n\n\n1\n\n\n3.测试\n\n#进去容器\ndocker exec -it mysql57/bin/bash\n\n#登录mysql\nmysql -u root -p\n\n#登录成功，则安装成功，自已测试远程登录\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 安装redis\n\n1.拉取镜像\n\ndocker pull redis:latest\n\n\n1\n\n\n2.启动\n\ndocker run -d -p 6379:6379  --restart=always redis:latest redis-server\n\n\n1\n\n\n3.测试\n\n#使用Redis客户端\n\n\n1\n\n\n\n# 安装MongoDB\n\n1.拉取镜像\n\ndocker pull mongo:latest\n\n\n1\n\n\n2.启动\n\n#创建容器\ndocker create --name mongodb --restart=always -p 27017:27017 -v mongodb:/data/db mongo:latest\n\n#启动容器\ndocker start mongodb \n\n\n1\n2\n3\n4\n5\n\n\n3.测试\n\n#进入容器 \ndocker exec -it mongodb /bin/bash \n\n#使用MongoDB客户端进行操作 \n\nmongo\n\n#查询所有的数据库 \n> show dbs\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 安装RabbitMQ\n\n1.拉取镜像\n\ndocker pull rabbitmq:management\n\n\n1\n\n\n2.启动\n\ndocker run -d -p 5672:5672 -p 15672:15672 --restart=always --name rabbitmq rabbitmq:management\n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:15672/#/\n\n\n1\n\n\n\n# 安装RabbitMQ-插件\n\n1.下载插件\n\n#在插件官网下载插件\nhttps://www.rabbitmq.com/community-plugins.html\n\n#下载延迟队列插件\nrabbitmq-delayed-message-exchange\n#需要跟安装的RabbitMQ:management大中版本相同\nhttps://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases\n\n#上传Linux，拷贝到docker中rabbitMQ plugins目录\ndocker cp rabbitmq_delayed_message_exchange-3.9.0.ez rabbitmq:/plugins\n\n#进入容器，进入plugins目录\ndocker exec -it rabbitmq /bin/bash\n\n#在plugins目录先启用插件\nrabbitmq-plugins enable rabbitmq_delayed_message_exchange\n\n#启动完，左后exit退出即可\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n2.启动\n\nrabbitmq-plugins enable rabbitmq_delayed_message_exchange\n\n\n1\n\n\n3.测试\n\n#这时候在交换机中\n\n\n1\n\n\n\n# 安装nacos\n\n1.拉取镜像\n\ndocker pull nacos/nacos-server:1.4.1\n\n\n1\n\n\n2.启动\n\ndocker run --env MODE=standalone --name nacos --restart=always -d -p 8848:8848 -e JVM_XMS=512m -e JVM_XMX=512m nacos/nacos-server:1.4.1\n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:8848/nacos\n\n\n1\n\n\n\n# 安装sentinel\n\n1.拉取镜像\n\ndocker pull bladex/sentinel-dashboard\n\n\n1\n\n\n2.启动\n\ndocker run --name sentinel-dashboard --restart=always -p 8858:8858 -d bladex/sentinel-dashboard:latest  \n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:8858/#/login\n\n\n1\n\n\n\n# 安装ElasticSearch\n\n1.拉取镜像\n\n2.启动\n\n3.测试\n\n\n# 安装kibana\n\n1.拉取镜像\n\n2.启动\n\n3.测试\n\n\n# 安装zipkin\n\n> 服务和服务之间的调用依赖和时间\n\n1.拉取镜像\n\ndocker pull openzipkin/zipkin\n\n\n1\n\n\n2.启动\n\ndocker run --name zipkin --restart=always -d -p 9411:9411 openzipkin/zipkin \n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:9411/zipkin/\n\n\n1\n\n\n\n# 安装minio\n\n1.拉取镜像\n\ndocker pull minio/minio\n\n\n1\n\n\n2.启动\n\ndocker run \\\n  -p 9000:9000 \\\n  -p 9001:9001 \\\n  --name minio \\\n  -d --restart=always \\\n  -e "MINIO_ROOT_USER=admin" \\\n  -e "MINIO_ROOT_PASSWORD=admin123456" \\\n  -v /home/data:/data \\\n  -v /home/config:/root/.minio \\\n  minio/minio server /data --console-address ":9001"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n3.测试\n\n#浏览器访问\nhttp://IP:9000/minio/login\n\n\n1\n2\n\n\n\n# 安装logstash\n\n1.拉取镜像\n\ndocker pull logstash:7.8.0\n\n\n1\n\n\n2.启动\n\n#配置\n\n-net root_default \\\n\n# 需要提前在linux服务器上环境 /mydata/logstash/logstash.conf\nlogstash.conf\ninput {\n    tcp {\n    mode => "server"\n    host => "0.0.0.0"\n    port => 5044\n    codec => json_lines\n\t}\n}\nfilter{\n\n}\noutput {\n    elasticsearch {\n    hosts => "192.168.200.128:9200"\n    index => "gmall-%{+YYYY.MM.dd}"\n\t}\n}\n\n#启动\ndocker run --name logstash -p 5044:5044 \\\n\t--restart=always \\\n\t--link elasticsearch:es \\\n\t-v /mydata/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf \\\n\t-d logstash:7.8.0\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n3.测试\n\n\n# 停止所有容器\n\ndocker stop $(docker ps -aq)\n\n\n1\n',normalizedContent:'# docker安装各类环境\n\n\n# 搜索相关镜像\n\n#镜像搜索\ndocker search 镜像名称\n\n#镜像拉取，不指定版本会下载最新版本 \ndocker pull 镜像名称:版本\n\n#查看已拉取镜像\ndocker images\n\n#删除镜像\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n\n# 安装mysql\n\n1.拉取镜像\n\ndocker pull mysql:5.7\n\n\n1\n\n\n2.启动\n\ndocker run --name mysql57 --restart=always -v /home/ljaer/mysql:/var/lib/mysql -p 33306:3306 -e mysql_root_password=123456 -d mysql:5.7\n\n\n1\n\n\n3.测试\n\n#进去容器\ndocker exec -it mysql57/bin/bash\n\n#登录mysql\nmysql -u root -p\n\n#登录成功，则安装成功，自已测试远程登录\n\n\n1\n2\n3\n4\n5\n6\n7\n\n\n\n# 安装redis\n\n1.拉取镜像\n\ndocker pull redis:latest\n\n\n1\n\n\n2.启动\n\ndocker run -d -p 6379:6379  --restart=always redis:latest redis-server\n\n\n1\n\n\n3.测试\n\n#使用redis客户端\n\n\n1\n\n\n\n# 安装mongodb\n\n1.拉取镜像\n\ndocker pull mongo:latest\n\n\n1\n\n\n2.启动\n\n#创建容器\ndocker create --name mongodb --restart=always -p 27017:27017 -v mongodb:/data/db mongo:latest\n\n#启动容器\ndocker start mongodb \n\n\n1\n2\n3\n4\n5\n\n\n3.测试\n\n#进入容器 \ndocker exec -it mongodb /bin/bash \n\n#使用mongodb客户端进行操作 \n\nmongo\n\n#查询所有的数据库 \n> show dbs\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\n\n\n# 安装rabbitmq\n\n1.拉取镜像\n\ndocker pull rabbitmq:management\n\n\n1\n\n\n2.启动\n\ndocker run -d -p 5672:5672 -p 15672:15672 --restart=always --name rabbitmq rabbitmq:management\n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:15672/#/\n\n\n1\n\n\n\n# 安装rabbitmq-插件\n\n1.下载插件\n\n#在插件官网下载插件\nhttps://www.rabbitmq.com/community-plugins.html\n\n#下载延迟队列插件\nrabbitmq-delayed-message-exchange\n#需要跟安装的rabbitmq:management大中版本相同\nhttps://github.com/rabbitmq/rabbitmq-delayed-message-exchange/releases\n\n#上传linux，拷贝到docker中rabbitmq plugins目录\ndocker cp rabbitmq_delayed_message_exchange-3.9.0.ez rabbitmq:/plugins\n\n#进入容器，进入plugins目录\ndocker exec -it rabbitmq /bin/bash\n\n#在plugins目录先启用插件\nrabbitmq-plugins enable rabbitmq_delayed_message_exchange\n\n#启动完，左后exit退出即可\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\n\n2.启动\n\nrabbitmq-plugins enable rabbitmq_delayed_message_exchange\n\n\n1\n\n\n3.测试\n\n#这时候在交换机中\n\n\n1\n\n\n\n# 安装nacos\n\n1.拉取镜像\n\ndocker pull nacos/nacos-server:1.4.1\n\n\n1\n\n\n2.启动\n\ndocker run --env mode=standalone --name nacos --restart=always -d -p 8848:8848 -e jvm_xms=512m -e jvm_xmx=512m nacos/nacos-server:1.4.1\n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:8848/nacos\n\n\n1\n\n\n\n# 安装sentinel\n\n1.拉取镜像\n\ndocker pull bladex/sentinel-dashboard\n\n\n1\n\n\n2.启动\n\ndocker run --name sentinel-dashboard --restart=always -p 8858:8858 -d bladex/sentinel-dashboard:latest  \n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:8858/#/login\n\n\n1\n\n\n\n# 安装elasticsearch\n\n1.拉取镜像\n\n2.启动\n\n3.测试\n\n\n# 安装kibana\n\n1.拉取镜像\n\n2.启动\n\n3.测试\n\n\n# 安装zipkin\n\n> 服务和服务之间的调用依赖和时间\n\n1.拉取镜像\n\ndocker pull openzipkin/zipkin\n\n\n1\n\n\n2.启动\n\ndocker run --name zipkin --restart=always -d -p 9411:9411 openzipkin/zipkin \n\n\n1\n\n\n3.测试\n\nhttp://192.168.1.31:9411/zipkin/\n\n\n1\n\n\n\n# 安装minio\n\n1.拉取镜像\n\ndocker pull minio/minio\n\n\n1\n\n\n2.启动\n\ndocker run \\\n  -p 9000:9000 \\\n  -p 9001:9001 \\\n  --name minio \\\n  -d --restart=always \\\n  -e "minio_root_user=admin" \\\n  -e "minio_root_password=admin123456" \\\n  -v /home/data:/data \\\n  -v /home/config:/root/.minio \\\n  minio/minio server /data --console-address ":9001"\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n\n\n3.测试\n\n#浏览器访问\nhttp://ip:9000/minio/login\n\n\n1\n2\n\n\n\n# 安装logstash\n\n1.拉取镜像\n\ndocker pull logstash:7.8.0\n\n\n1\n\n\n2.启动\n\n#配置\n\n-net root_default \\\n\n# 需要提前在linux服务器上环境 /mydata/logstash/logstash.conf\nlogstash.conf\ninput {\n    tcp {\n    mode => "server"\n    host => "0.0.0.0"\n    port => 5044\n    codec => json_lines\n\t}\n}\nfilter{\n\n}\noutput {\n    elasticsearch {\n    hosts => "192.168.200.128:9200"\n    index => "gmall-%{+yyyy.mm.dd}"\n\t}\n}\n\n#启动\ndocker run --name logstash -p 5044:5044 \\\n\t--restart=always \\\n\t--link elasticsearch:es \\\n\t-v /mydata/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf \\\n\t-d logstash:7.8.0\n\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n\n\n3.测试\n\n\n# 停止所有容器\n\ndocker stop $(docker ps -aq)\n\n\n1\n',charsets:{cjk:!0}},{title:"Docker参考",frontmatter:{title:"Docker参考",date:"2022-02-15T13:34:12.000Z",permalink:"/pages/3510a2/",categories:["工具-构建部署","Docker"],tags:[null]},regularPath:"/40.%E5%B7%A5%E5%85%B7-%E6%9E%84%E5%BB%BA%E9%83%A8%E7%BD%B2/40.Docker/50.Docker%E5%8F%82%E8%80%83.html",relativePath:"40.工具-构建部署/40.Docker/50.Docker参考.md",key:"v-5a4aad80",path:"/pages/3510a2/",headers:[{level:2,title:"Docker文章归档",slug:"docker文章归档",normalizedTitle:"docker文章归档",charIndex:2}],headersStr:"Docker文章归档",content:"# Docker文章归档\n\n查看docker容器使用的资源\n\ndocker设置容器自动启动或定时启动",normalizedContent:"# docker文章归档\n\n查看docker容器使用的资源\n\ndocker设置容器自动启动或定时启动",charsets:{cjk:!0}},{title:"常用快捷键",frontmatter:{title:"常用快捷键",date:"2022-01-18T17:26:07.000Z",permalink:"/pages/d1300e/",categories:["工具-开发调试","IDEA"],tags:[null]},regularPath:"/42.%E5%B7%A5%E5%85%B7-%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/10.IDEA/10.%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE.html",relativePath:"42.工具-开发调试/10.IDEA/10.常用快捷键.md",key:"v-06288b74",path:"/pages/d1300e/",headers:[{level:2,title:"快捷键",slug:"快捷键",normalizedTitle:"快捷键",charIndex:53},{level:3,title:"批量重命名",slug:"批量重命名",normalizedTitle:"批量重命名",charIndex:61},{level:3,title:"继承实现关系图",slug:"继承实现关系图",normalizedTitle:"继承实现关系图",charIndex:87},{level:3,title:"查找类",slug:"查找类",normalizedTitle:"查找类",charIndex:123},{level:3,title:"代码格式化",slug:"代码格式化",normalizedTitle:"代码格式化",charIndex:141},{level:3,title:"设置",slug:"设置",normalizedTitle:"设置",charIndex:171},{level:3,title:"项目设置",slug:"项目设置",normalizedTitle:"项目设置",charIndex:198},{level:2,title:"做过的",slug:"做过的",normalizedTitle:"做过的",charIndex:235},{level:3,title:"查看数据库表信息，DDL信息",slug:"查看数据库表信息-ddl信息",normalizedTitle:"查看数据库表信息，ddl信息",charIndex:243},{level:3,title:"改项目所有包名",slug:"改项目所有包名",normalizedTitle:"改项目所有包名",charIndex:286}],headersStr:"快捷键 批量重命名 继承实现关系图 查找类 代码格式化 设置 项目设置 做过的 查看数据库表信息，DDL信息 改项目所有包名",content:"# IDEA使用技巧\n\n常用配置参考1\n\n常用配置参考2\n\n隐藏.idea文件夹和.iml等文件\n\n\n# 快捷键\n\n\n# 批量重命名\n\nCtrl + Alt + R\n\n\n# 继承实现关系图\n\nCtrl + Alt + Shift + U\n\n\n# 查找类\n\nCtrl + N\n\n\n# 代码格式化\n\nwin Ctrl + Alt + L\n\n\n# 设置\n\nwin Ctrl + Alt + S\n\n\n# 项目设置\n\nwin Ctrl + Alt + Shift + S\n\n\n# 做过的\n\n\n# 查看数据库表信息，DDL信息\n\n在表的对应位置使用 Ctrl + Q\n\n\n\n\n\n\n# 改项目所有包名\n\n使用Ctrl + Shift + R\n\n搜索 替换 即可！\n\n",normalizedContent:"# idea使用技巧\n\n常用配置参考1\n\n常用配置参考2\n\n隐藏.idea文件夹和.iml等文件\n\n\n# 快捷键\n\n\n# 批量重命名\n\nctrl + alt + r\n\n\n# 继承实现关系图\n\nctrl + alt + shift + u\n\n\n# 查找类\n\nctrl + n\n\n\n# 代码格式化\n\nwin ctrl + alt + l\n\n\n# 设置\n\nwin ctrl + alt + s\n\n\n# 项目设置\n\nwin ctrl + alt + shift + s\n\n\n# 做过的\n\n\n# 查看数据库表信息，ddl信息\n\n在表的对应位置使用 ctrl + q\n\n\n\n\n\n\n# 改项目所有包名\n\n使用ctrl + shift + r\n\n搜索 替换 即可！\n\n",charsets:{cjk:!0}},{title:"VScode常用操作",frontmatter:{title:"VScode常用操作",date:"2022-01-16T21:57:04.000Z",permalink:"/pages/5451e7/",categories:["工具-开发调试","VScode"],tags:[null]},regularPath:"/42.%E5%B7%A5%E5%85%B7-%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/20.VScode/10.VScode%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C.html",relativePath:"42.工具-开发调试/20.VScode/10.VScode常用操作.md",key:"v-6c40d3e8",path:"/pages/5451e7/",headers:[{level:2,title:"1.快捷键",slug:"_1-快捷键",normalizedTitle:"1.快捷键",charIndex:18},{level:3,title:"代码格式美化",slug:"代码格式美化",normalizedTitle:"代码格式美化",charIndex:28},{level:2,title:"2 .资源管理器",slug:"_2-资源管理器",normalizedTitle:"2 .资源管理器",charIndex:102},{level:3,title:"取消资源管理器紧凑形式呈现",slug:"取消资源管理器紧凑形式呈现",normalizedTitle:"取消资源管理器紧凑形式呈现",charIndex:115},{level:2,title:"3.标签页",slug:"_3-标签页",normalizedTitle:"3.标签页",charIndex:193},{level:3,title:"设置打开文件用新标签页打开",slug:"设置打开文件用新标签页打开",normalizedTitle:"设置打开文件用新标签页打开",charIndex:203}],headersStr:"1.快捷键 代码格式美化 2 .资源管理器 取消资源管理器紧凑形式呈现 3.标签页 设置打开文件用新标签页打开",content:"# VScodec常用操作\n\n\n# 1.快捷键\n\n\n# 代码格式美化\n\n> shift + alt + F\n> \n> https://www.jianshu.com/p/39a92e970657\n\n\n# 2 .资源管理器\n\n\n# 取消资源管理器紧凑形式呈现\n\n更改前\n\n\n\n更改后\n\n\n\n设置--\x3e用户--\x3e功能--\x3e资源管理器--\x3e取消Compact Folders勾选\n\n\n\n\n# 3.标签页\n\n\n# 设置打开文件用新标签页打开\n\n> 刚开始用vscode的时候，打开一个文件，再打开一个文件直接覆盖当前标签页，不会以新标签页的形式打开，这就导致无法打开多个文件，这个模式称为【预览模式】，标签页的文件名为斜体，【非预览模式】标签页的文件名为非斜体\n\n * 鼠标左键单击文件是以预览模式打开，也就是会覆盖当前标签页\n\n * 鼠标左键双击文件是以非预览模式打开，就会在新标签页中打开\n\n * 鼠标中键点击文件于与左键效果相同\n\n * 鼠标左键双击预览模式的标签页则能退出预览模式\n\n> 官方参考文档：https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode",normalizedContent:"# vscodec常用操作\n\n\n# 1.快捷键\n\n\n# 代码格式美化\n\n> shift + alt + f\n> \n> https://www.jianshu.com/p/39a92e970657\n\n\n# 2 .资源管理器\n\n\n# 取消资源管理器紧凑形式呈现\n\n更改前\n\n\n\n更改后\n\n\n\n设置--\x3e用户--\x3e功能--\x3e资源管理器--\x3e取消compact folders勾选\n\n\n\n\n# 3.标签页\n\n\n# 设置打开文件用新标签页打开\n\n> 刚开始用vscode的时候，打开一个文件，再打开一个文件直接覆盖当前标签页，不会以新标签页的形式打开，这就导致无法打开多个文件，这个模式称为【预览模式】，标签页的文件名为斜体，【非预览模式】标签页的文件名为非斜体\n\n * 鼠标左键单击文件是以预览模式打开，也就是会覆盖当前标签页\n\n * 鼠标左键双击文件是以非预览模式打开，就会在新标签页中打开\n\n * 鼠标中键点击文件于与左键效果相同\n\n * 鼠标左键双击预览模式的标签页则能退出预览模式\n\n> 官方参考文档：https://code.visualstudio.com/docs/getstarted/userinterface#_preview-mode",charsets:{cjk:!0}},{title:"idea插件市场",frontmatter:{title:"idea插件市场",date:"2022-02-06T23:10:50.000Z",permalink:"/pages/70fee8/",categories:["工具-开发调试","IDEA"],tags:[null]},regularPath:"/42.%E5%B7%A5%E5%85%B7-%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/10.IDEA/20.idea%E6%8F%92%E4%BB%B6%E5%B8%82%E5%9C%BA.html",relativePath:"42.工具-开发调试/10.IDEA/20.idea插件市场.md",key:"v-8815005e",path:"/pages/70fee8/",headers:[{level:2,title:"插件市场加载不出东西",slug:"插件市场加载不出东西",normalizedTitle:"插件市场加载不出东西",charIndex:2}],headersStr:"插件市场加载不出东西",content:"# 插件市场加载不出东西\n\n插件设置为自动\n\nurl使用这个检查连接\n\nhttps://plugins.jetbrains.com/\n\n\n1\n",normalizedContent:"# 插件市场加载不出东西\n\n插件设置为自动\n\nurl使用这个检查连接\n\nhttps://plugins.jetbrains.com/\n\n\n1\n",charsets:{cjk:!0}},{title:"快速上手",frontmatter:{title:"快速上手",date:"2022-01-18T14:07:05.000Z",permalink:"/pages/155967/",categories:["工具-开发调试","Swagger2"],tags:[null]},regularPath:"/42.%E5%B7%A5%E5%85%B7-%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95/30.Swagger2/10.%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B.html",relativePath:"42.工具-开发调试/30.Swagger2/10.快速上手.md",key:"v-6d67b5e6",path:"/pages/155967/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:19},{level:2,title:"1.添加pom依赖",slug:"_1-添加pom依赖",normalizedTitle:"1.添加pom依赖",charIndex:71},{level:2,title:"2.创建配置类",slug:"_2-创建配置类",normalizedTitle:"2.创建配置类",charIndex:610},{level:3,title:"常用属性",slug:"常用属性",normalizedTitle:"常用属性",charIndex:632},{level:3,title:"配置方式一",slug:"配置方式一",normalizedTitle:"配置方式一",charIndex:945},{level:3,title:"配置方式二",slug:"配置方式二",normalizedTitle:"配置方式二",charIndex:2378},{level:2,title:"3.常用注解",slug:"_3-常用注解",normalizedTitle:"3.常用注解",charIndex:3128}],headersStr:"简介 1.添加pom依赖 2.创建配置类 常用属性 配置方式一 配置方式二 3.常用注解",content:'# 整合SpringBoot\n\n\n# 简介\n\n官网 swagger.io\n\n依赖 mvnrepository.com\n\n参考文章推荐\n\n\n# 1.添加pom依赖\n\n\x3c!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --\x3e\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\x3c!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --\x3e\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger-ui</artifactId>\n    <version>2.9.2</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n> 需要导入两个，一个springfox-swagger2，一个UI界面springfox-swagger-ui\n\n\n# 2.创建配置类\n\n可以配置多个实例\n\n\n# 常用属性\n\n> .groupName() //如果存在多个 Docket 实例，则每个实例都必须具有此方法提供的唯一 groupName。 默认为“默认”。\n> \n> .apiInfo() //Api文档简介\n> \n> .title() //接口文档页面标题\n> \n> .description() //接口文档描述\n> \n> .contact() //创建人\n> \n> .select() //构建 ApiSelectorBuilder 的第一步\n> \n> .build() //构建 ApiSelectorBuilder 的最后一步\n> \n> .apis() //包扫描\n> \n> .paths() //路劲过滤\n\n\n# 配置方式一\n\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n    \n    @Bean\n    public Docket test1ApiConfig(){\n        return new Docket(DocumentationType.SWAGGER_2)\n                .groupName("test1Api") \n                .apiInfo(test1ApiInfo())\n                .select()\n                //只显示路径1下的页面\n                .paths(Predicates.and(PathSelectors.regex("/路径1/.*")))\n                .build();\n    }\n\n    @Bean\n    public Docket test2ApiConfig(){\n        return new Docket(DocumentationType.SWAGGER_2)\n                .groupName("adminApi")\n                .apiInfo(adminApiInfo())\n                .select()\n                //只显示路径2下的页面\n                .paths(Predicates.and(PathSelectors.regex("/路径2/.*")))\n                .build();\n    }\n\n    private ApiInfo test1ApiInfo(){\n        return new ApiInfoBuilder()\n                .title("测试1-Api文档")\n                .description("演示测试1的文档")\n                .version("1.0")\n                .contact(new Contact("name", "网址", "邮箱"))\n                .build();\n    }\n\n    private ApiInfo test2ApiInfo(){\n        return new ApiInfoBuilder()\n                .title("测试2-API文档")\n                .description("本文档描述了测试2的接口")\n                .version("1.0")\n                .contact(new Contact("name", "网址", "邮箱"))\n                .build();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 配置方式二\n\n@Configuration\n@EnableSwagger2\npublic class Swagger2Config {\n    @Bean\n    public Docket createRestApi() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(new ApiInfoBuilder()\n                        .title("接口文档名称")\n                        .description("接口文档描述")\n                        .termsOfServiceUrl("团队链接")\n                        .contact(new Contact("name", "网址", "邮箱"))\n                        .version("1.0")\n                        .build())\n                .groupName("接口文档唯一标识")\n                .select()\n                .apis(RequestHandlerSelectors.any())\n                .paths(PathSelectors.any())\n                .build();\n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 3.常用注解\n\n@Configuration\n\n@EnableSwagger2\n\n> 开启swagger2\n\n@Api(tags = "登录接口")\n\n> 用在请求Controller类上，表示对类的说明\n> \n>  * tags="说明该类的作用，可以在UI界面上看到的注解"\n> \n>  * value="该参数没什么意义，在UI界面上也看不到，所以不需要配置"\n\n@ApiParam()\n\n> 用于方法，参数，字段说明；表示对参数的添加元数据（说明或是否必填等）\n> \n>  * name：参数名\n>  * value：参数说明\n>  * required：是否必填\n\n@ApiModel()\n\n> 用于实体类，表示对类的说明。\n\n@ApiModelProperty(value = "用户id")\n\n> 用在类的属性上，描述响应类的属性\n\n@ApiOperation("根据id查询")\n\n> 用在请求的方法上，说明方法的用途、作用\n> \n>  * value="说明方法的用途、作用"\n>  * notes="方法的备注说明"\n\n@ApiIgnore\n\n> 使用该注解会直接忽略到该类/方法/参数...\n\n参考文章推荐',normalizedContent:'# 整合springboot\n\n\n# 简介\n\n官网 swagger.io\n\n依赖 mvnrepository.com\n\n参考文章推荐\n\n\n# 1.添加pom依赖\n\n\x3c!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --\x3e\n<dependency>\n    <groupid>io.springfox</groupid>\n    <artifactid>springfox-swagger2</artifactid>\n    <version>2.9.2</version>\n</dependency>\n\x3c!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --\x3e\n<dependency>\n    <groupid>io.springfox</groupid>\n    <artifactid>springfox-swagger-ui</artifactid>\n    <version>2.9.2</version>\n</dependency>\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n\n> 需要导入两个，一个springfox-swagger2，一个ui界面springfox-swagger-ui\n\n\n# 2.创建配置类\n\n可以配置多个实例\n\n\n# 常用属性\n\n> .groupname() //如果存在多个 docket 实例，则每个实例都必须具有此方法提供的唯一 groupname。 默认为“默认”。\n> \n> .apiinfo() //api文档简介\n> \n> .title() //接口文档页面标题\n> \n> .description() //接口文档描述\n> \n> .contact() //创建人\n> \n> .select() //构建 apiselectorbuilder 的第一步\n> \n> .build() //构建 apiselectorbuilder 的最后一步\n> \n> .apis() //包扫描\n> \n> .paths() //路劲过滤\n\n\n# 配置方式一\n\n@configuration\n@enableswagger2\npublic class swagger2config {\n    \n    @bean\n    public docket test1apiconfig(){\n        return new docket(documentationtype.swagger_2)\n                .groupname("test1api") \n                .apiinfo(test1apiinfo())\n                .select()\n                //只显示路径1下的页面\n                .paths(predicates.and(pathselectors.regex("/路径1/.*")))\n                .build();\n    }\n\n    @bean\n    public docket test2apiconfig(){\n        return new docket(documentationtype.swagger_2)\n                .groupname("adminapi")\n                .apiinfo(adminapiinfo())\n                .select()\n                //只显示路径2下的页面\n                .paths(predicates.and(pathselectors.regex("/路径2/.*")))\n                .build();\n    }\n\n    private apiinfo test1apiinfo(){\n        return new apiinfobuilder()\n                .title("测试1-api文档")\n                .description("演示测试1的文档")\n                .version("1.0")\n                .contact(new contact("name", "网址", "邮箱"))\n                .build();\n    }\n\n    private apiinfo test2apiinfo(){\n        return new apiinfobuilder()\n                .title("测试2-api文档")\n                .description("本文档描述了测试2的接口")\n                .version("1.0")\n                .contact(new contact("name", "网址", "邮箱"))\n                .build();\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n\n\n\n# 配置方式二\n\n@configuration\n@enableswagger2\npublic class swagger2config {\n    @bean\n    public docket createrestapi() {\n        return new docket(documentationtype.swagger_2)\n                .apiinfo(new apiinfobuilder()\n                        .title("接口文档名称")\n                        .description("接口文档描述")\n                        .termsofserviceurl("团队链接")\n                        .contact(new contact("name", "网址", "邮箱"))\n                        .version("1.0")\n                        .build())\n                .groupname("接口文档唯一标识")\n                .select()\n                .apis(requesthandlerselectors.any())\n                .paths(pathselectors.any())\n                .build();\n    }  \n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n\n\n\n# 3.常用注解\n\n@configuration\n\n@enableswagger2\n\n> 开启swagger2\n\n@api(tags = "登录接口")\n\n> 用在请求controller类上，表示对类的说明\n> \n>  * tags="说明该类的作用，可以在ui界面上看到的注解"\n> \n>  * value="该参数没什么意义，在ui界面上也看不到，所以不需要配置"\n\n@apiparam()\n\n> 用于方法，参数，字段说明；表示对参数的添加元数据（说明或是否必填等）\n> \n>  * name：参数名\n>  * value：参数说明\n>  * required：是否必填\n\n@apimodel()\n\n> 用于实体类，表示对类的说明。\n\n@apimodelproperty(value = "用户id")\n\n> 用在类的属性上，描述响应类的属性\n\n@apioperation("根据id查询")\n\n> 用在请求的方法上，说明方法的用途、作用\n> \n>  * value="说明方法的用途、作用"\n>  * notes="方法的备注说明"\n\n@apiignore\n\n> 使用该注解会直接忽略到该类/方法/参数...\n\n参考文章推荐',charsets:{cjk:!0}},{title:"计算机网络",frontmatter:{title:"计算机网络",date:"2022-01-16T21:56:46.000Z",permalink:"/pages/78eaba/",categories:["工具-网络&其他","计算机网络"],tags:[null]},regularPath:"/43.%E5%B7%A5%E5%85%B7-%E7%BD%91%E7%BB%9C&%E5%85%B6%E4%BB%96/10.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/10.%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html",relativePath:"43.工具-网络&其他/10.计算机网络/10.计算机网络.md",key:"v-17188e2e",path:"/pages/78eaba/",headers:[{level:2,title:"常用熟知端口号",slug:"常用熟知端口号",normalizedTitle:"常用熟知端口号",charIndex:42},{level:2,title:"停止等待协议",slug:"停止等待协议",normalizedTitle:"停止等待协议",charIndex:71},{level:2,title:"连续ARQ协议&滑动窗口协议",slug:"连续arq协议-滑动窗口协议",normalizedTitle:"连续arq协议&amp;滑动窗口协议",charIndex:null},{level:2,title:"以字节为单位的滑动窗口",slug:"以字节为单位的滑动窗口",normalizedTitle:"以字节为单位的滑动窗口",charIndex:1134},{level:2,title:"超时重传的时间选择",slug:"超时重传的时间选择",normalizedTitle:"超时重传的时间选择",charIndex:1371},{level:3,title:"关于超时重传RTO值存在的问题",slug:"关于超时重传rto值存在的问题",normalizedTitle:"关于超时重传rto值存在的问题",charIndex:1723},{level:2,title:"选择确认SACK",slug:"选择确认sack",normalizedTitle:"选择确认sack",charIndex:1084},{level:2,title:"利用滑动窗口实现流量控制（Flow Control）",slug:"利用滑动窗口实现流量控制-flow-control",normalizedTitle:"利用滑动窗口实现流量控制（flow control）",charIndex:1957},{level:2,title:"TCP的传输效率",slug:"tcp的传输效率",normalizedTitle:"tcp的传输效率",charIndex:2090},{level:2,title:"TCP的拥塞控制方法",slug:"tcp的拥塞控制方法",normalizedTitle:"tcp的拥塞控制方法",charIndex:2382},{level:3,title:"TCP拥塞控制的算法有四种",slug:"tcp拥塞控制的算法有四种",normalizedTitle:"tcp拥塞控制的算法有四种",charIndex:2397},{level:3,title:"拥塞控制流程图",slug:"拥塞控制流程图",normalizedTitle:"拥塞控制流程图",charIndex:3274},{level:2,title:"主动队列管理AQM",slug:"主动队列管理aqm",normalizedTitle:"主动队列管理aqm",charIndex:3317},{level:3,title:"TCP的有限机状态",slug:"tcp的有限机状态",normalizedTitle:"tcp的有限机状态",charIndex:4153}],headersStr:"常用熟知端口号 停止等待协议 连续ARQ协议&滑动窗口协议 以字节为单位的滑动窗口 超时重传的时间选择 关于超时重传RTO值存在的问题 选择确认SACK 利用滑动窗口实现流量控制（Flow Control） TCP的传输效率 TCP的拥塞控制方法 TCP拥塞控制的算法有四种 拥塞控制流程图 主动队列管理AQM TCP的有限机状态",content:"# TCP → Transmission Control Protocol\n\n\n# 常用熟知端口号\n\n\n\n\n# TCP可靠传输的原理\n\n\n# 停止等待协议\n\nA → B 发送一个分组就等待 B 回送确认收到报文，然后再发送下一个分组\n\n * 超时计时器\n * 超时重传\n * A 暂时保留已发送分组的副本\n * 分组编号\n * B→A 确认丢失\n * B→A 确认迟到\n * 自动重传请求 ARQ （Automatic Repeat reQuest）\n\n🗣️ 优点：协议实现简单。缺点：信道里利用率低\n\n\n# 连续ARQ协议&滑动窗口协议\n\nA → B 发送方连续发送多个分组，接收方接收完这多个分组的最后一个分组后才发送一个确认，解决信道利用率低的问题\n\n * 发送窗口\n * 累计确认 有优缺点\n * Go-Back-N → 窗口回退N\n\n🗣️ 当通信线路不好时，连续ARQ协议可能会带来负面影响\n\nTCP面向字节流和报文段的关系是什么？\n\n\n# TCP首部格式\n\n * 源端口、目的端口 [各占16位]\n\n * 序号（报文段序列号） [占32位]\n\n * 确认号（若确认号为 N ，则序号 N - 1 为止的所有字节流数据都已经正确收到） [占32位]\n\n * 数据偏移（记录首部的长度，TCP报文段的起始位到TCP报文段数据部分的起始位的差值） [占4位]\n\n * 保留（为今后使用，目前置0） [占6位]\n\n * 紧急URGent（当URG字段为1时，表示紧急指针字段有效，我有紧急数据发送）\n\n * 确认ACKonwledgment（ACK=1时，确认号才有效，连接建立后，ACK必须为1）\n\n * 推送PuSH（交互式通信时即时交付，不必等待缓冲区满）\n\n * 复位ReSet（立即释放连接，或拒绝非法连接）\n\n * 同步SYNchronization（{SYN=1，ACK=0} → 表示一个连接请求报文）\n\n * 终止FINis（FIN=1时，表示传输完毕即将释放连接）\n\n * 窗口（即接收方的接收窗口，接收方让发送方设置其发送窗口大小的依据）\n\n * 检验和（检验首部和数据部分，和UDP一样加上伪首部）\n\n * 紧急指针（与URG联合，即时窗口为0也可以发送紧急数据）\n\n * 选项\n   \n   （长度可变，首部长度就可以在这里加长）\n   \n   * MSS → maximum segment size 数据字段最大长度 类比MTU\n   * 窗口扩大\n     * 移位值S\n   * 时间戳\n     * 防止序号绕回\n   * 选择确认SACK\n\n * 填充（将首部填充为4字节的整数倍）\n\n\n# TCP可靠传输的实现\n\n\n# 以字节为单位的滑动窗口\n\n * 滑动窗口后沿\n * 滑动窗口前沿\n * 发送窗口\n * 接收窗口\n * 可用窗口or有效窗口\n * 确认未收到，A超时重传\n * 缓存空间\n * 序号空间\n * 确认推迟时间0.5s\n\n窗口值越大，能连续发送的数据就越多！窗口值受网络拥塞影响\n\n发送窗口的位置状态有两种情况，不动，前移，发送窗口不可能向后移动\n\n发送窗口和发送缓存的后沿是重合的\n\n未按序到达的数据现在接收缓存中存放，等其他数据正确到达后再按序交付给上层的应用进程\n\n\n# 超时重传的时间选择\n\n采用自适应算法，第一个采用测量到的RTT值（Round Trip Time），之后每次测量的值与前一次的值进行加权计算得出新的RTTs时间，0≤α<1（当α趋近于0，则更新得慢，反之越快），RFC 6298推荐α时间为0.125\n\n\n\n超时重传时间RTO（Response TimeOut）应该略大于RTTs，RFC 6298建议 RTO=RTTs + 4RTTd，第一次的RTTd值取第一次RTT值的一半，之后的按如下公式与前一次的RTTd值计算，β推荐值为0.25\n\n\n\n * 报文往返时间RTT\n * 加权平均往返时间RTTs → Smoothed （平滑往返时间）\n * 超时重传时间RTO RTO=RTTs + 4RTTd\n * RTTD是RTT的偏差加权平均值\n\n\n# 关于超时重传RTO值存在的问题\n\n如何确定是对哪一个报文段的确认？\n\n针对这个问题，Karn提出了一个算法，只要报文段发生了重传，就不采用往返时间样本（但RTO值就无法更新），进一步解决的方法是，如果一直发生超时重传则RTO值自增为原来旧的RTO值的两倍，直到不在发生超时重传后根据公式计算新的超时重传时间RTO的值。这样较为稳妥\n\n\n# 选择确认SACK\n\n书上讲了个寂寞。。。。。\n\n * 选择确认（Selective ACK）\n\n\n# TCP的流量控制\n\n\n# 利用滑动窗口实现流量控制（Flow Control）\n\n让发送方发送速率不要太快，接收方来得及接收\n\n * 持续计数器（persistence timer）打破非零窗口通知在链路中丢失的死锁局面\n * rwnd（receiver window）接收窗口\n\n\n\n\n# TCP的传输效率\n\n主要是用发送缓存 缓存更多的数据但不超过MSS，接收缓存腾出足够多的缓存空间来增大接收窗口的值，让发送方一次能发送更大的报文段！！！\n\n * 最大报文段长度MSS\n * TCP推送（TCP Push）\n * TCP计时器\n * Nagle算法（先发送一个收到确认报文后，立即发送发送缓存中的所有数据）\n * 糊涂窗口综合征（silly window syndrome）（接收缓存腾出的效率，确定接收窗口尽量大）\n\n\n# TCP的拥塞控制\n\n * 拥塞（congestion）\n * 轻度拥塞\n * 死锁（deadlock）\n * 开环控制\n * 闭环控制\n\n\n# TCP的拥塞控制方法\n\n\n# TCP拥塞控制的算法有四种\n\n * 慢开始（slow-start）\n   \n   * SMSS（发送方最大报文段）\n   * 慢开始门限（ssthresh）\n   \n   先发送一个报文段试探以下网络的拥塞情况，在正常收到接收方的确认后，就把拥塞窗口cwnd增大（前一个cwnd）一倍（乘法），每收到一个新报文段的确认后，就增加最多一个SMSS的数值。\n   \n   这就是慢开始，一步一步增加拥塞窗口cwnd的值，提升发送速率\n   \n   \n   \n   慢开始的cwnd值要设置一个上限，超过这个上限后就使用其他拥塞控制算法\n   \n   \n\n * 拥塞避免（congestion avoidance）\n   \n   每经过一个往返时间RTT就把发送窗口cwnd加1，成线性规律缓慢增长，比慢开始算法增长速率慢得多。\n   \n   \n\n * 快重传（fast retransmit）\n   \n   快重传是为了解决网络中个别报文段发生丢失，导致发送方接收不到确认报文，误以为网络发生了拥塞启动慢开始算法，把拥塞窗口置为1降低了传输效率。\n   \n   快重传：接收方收到一个M1报文就回送一个确认报文，当M2报文丢失后，接收方应立即发送对M1报文的接收确认，发送方接着继续发送M3,M4报文段，此时接收方还是没有接收到M2报文段，继续发送对M1的接收确认；当发送方一连收到3个重复确认，就知道接收方没有收到M2报文段，立即启动快重传算法，重传M2报文段。\n   \n   \n\n * 快恢复（fast recovery）\n   \n   当发送方收到了三个连续的重复确认，变启动快重传算法重传丢失的分组，并启动快恢复算法避免拥塞避免算法以为是网络拥塞了启动慢开始算法（本来对丢失的分组接收方是可以什么都不做的，所以没有快重传算法，发送方就收不到确认，以为发生了超时，直接启动慢开始算法，慢开始算法cwnd的值是重新以1开始增加，而快恢复算法不是从最开始的1增加，而是把门限值 ssthresh = cwnd / 2 = 8）,从而提高传输速率。\n\n\n# 拥塞控制流程图\n\n\n\n发送窗口始终不能大于接收窗口和拥塞窗口二者的最小值\n\n\n\n\n# 主动队列管理AQM\n\n网络层路由器的分组丢失策略会引发TCP拥塞控制误认为网络发生了拥塞。\n\n主动队列管理是把被动化为主动，给路由器的队列设置两个参数，最小门限和最大门限\n\n\n\n以某一概率某丢弃个分组能够避免TCP发生全局性的拥塞控制\n\nRED能够检测到网络拥塞的早期征兆，预检测！\n\n * 路由器的处理规则，先进先出 FIFO\n * 尾部丢弃策略（tail-dropplicy），因为队列满了\n * 全局同步（global syncronization），全部TCP连接直接从慢开始状态开始（要避免全局同步现象）\n * 随机早期检测RED（Random Early Detection）\n\n\n# TCP的运输连接管理\n\n * 连接建立\n   \n   TCP三次握手\n   \n   \n   \n   SYN=1的报文段不能携带数据，但要消耗一个序号\n   \n   ACK=1表示确认号有效，连接建立以后都为1\n   \n   其实第二次握手可以分为两次握手，Server第一次发送确认报文ACK，发送同步报文SYN，也可以说成是四次握手。\n\n * 数据传送\n\n * 连接释放\n   \n   TCP的四次挥手\n   \n   \n   \n   * 时间等待计时器（TIME-WAIT timer）\n   \n   * MSL最长报文段寿命\n     \n     MSL存在的意义，防止A发送的最后一个ACK报文段能够顺利到达B，丢失后，B会重传FIN+ACK。如果没收到最后一个确认ACK报文，则B无法正常进入CLOSED状态。\n\n * 保活计时器 keepalive timer\n   \n   确保客户机在发生故障后不能正常关闭连接，收到客户机数据后重置KT，当一直没有收到客户机报文段时，等KT过期（一般是两小时），两小时过后还没收到客户机的数据，那么每隔75秒发送一个探测报文，若一连发送10个探测报文无响应后，服务器便知道客户机出现了故障，便关闭这个TCP连接！！！\n\n\n# TCP的有限机状态\n\n\n\n\n# UDP → User Datagram Protocol",normalizedContent:"# tcp → transmission control protocol\n\n\n# 常用熟知端口号\n\n\n\n\n# tcp可靠传输的原理\n\n\n# 停止等待协议\n\na → b 发送一个分组就等待 b 回送确认收到报文，然后再发送下一个分组\n\n * 超时计时器\n * 超时重传\n * a 暂时保留已发送分组的副本\n * 分组编号\n * b→a 确认丢失\n * b→a 确认迟到\n * 自动重传请求 arq （automatic repeat request）\n\n🗣️ 优点：协议实现简单。缺点：信道里利用率低\n\n\n# 连续arq协议&滑动窗口协议\n\na → b 发送方连续发送多个分组，接收方接收完这多个分组的最后一个分组后才发送一个确认，解决信道利用率低的问题\n\n * 发送窗口\n * 累计确认 有优缺点\n * go-back-n → 窗口回退n\n\n🗣️ 当通信线路不好时，连续arq协议可能会带来负面影响\n\ntcp面向字节流和报文段的关系是什么？\n\n\n# tcp首部格式\n\n * 源端口、目的端口 [各占16位]\n\n * 序号（报文段序列号） [占32位]\n\n * 确认号（若确认号为 n ，则序号 n - 1 为止的所有字节流数据都已经正确收到） [占32位]\n\n * 数据偏移（记录首部的长度，tcp报文段的起始位到tcp报文段数据部分的起始位的差值） [占4位]\n\n * 保留（为今后使用，目前置0） [占6位]\n\n * 紧急urgent（当urg字段为1时，表示紧急指针字段有效，我有紧急数据发送）\n\n * 确认ackonwledgment（ack=1时，确认号才有效，连接建立后，ack必须为1）\n\n * 推送push（交互式通信时即时交付，不必等待缓冲区满）\n\n * 复位reset（立即释放连接，或拒绝非法连接）\n\n * 同步synchronization（{syn=1，ack=0} → 表示一个连接请求报文）\n\n * 终止finis（fin=1时，表示传输完毕即将释放连接）\n\n * 窗口（即接收方的接收窗口，接收方让发送方设置其发送窗口大小的依据）\n\n * 检验和（检验首部和数据部分，和udp一样加上伪首部）\n\n * 紧急指针（与urg联合，即时窗口为0也可以发送紧急数据）\n\n * 选项\n   \n   （长度可变，首部长度就可以在这里加长）\n   \n   * mss → maximum segment size 数据字段最大长度 类比mtu\n   * 窗口扩大\n     * 移位值s\n   * 时间戳\n     * 防止序号绕回\n   * 选择确认sack\n\n * 填充（将首部填充为4字节的整数倍）\n\n\n# tcp可靠传输的实现\n\n\n# 以字节为单位的滑动窗口\n\n * 滑动窗口后沿\n * 滑动窗口前沿\n * 发送窗口\n * 接收窗口\n * 可用窗口or有效窗口\n * 确认未收到，a超时重传\n * 缓存空间\n * 序号空间\n * 确认推迟时间0.5s\n\n窗口值越大，能连续发送的数据就越多！窗口值受网络拥塞影响\n\n发送窗口的位置状态有两种情况，不动，前移，发送窗口不可能向后移动\n\n发送窗口和发送缓存的后沿是重合的\n\n未按序到达的数据现在接收缓存中存放，等其他数据正确到达后再按序交付给上层的应用进程\n\n\n# 超时重传的时间选择\n\n采用自适应算法，第一个采用测量到的rtt值（round trip time），之后每次测量的值与前一次的值进行加权计算得出新的rtts时间，0≤α<1（当α趋近于0，则更新得慢，反之越快），rfc 6298推荐α时间为0.125\n\n\n\n超时重传时间rto（response timeout）应该略大于rtts，rfc 6298建议 rto=rtts + 4rttd，第一次的rttd值取第一次rtt值的一半，之后的按如下公式与前一次的rttd值计算，β推荐值为0.25\n\n\n\n * 报文往返时间rtt\n * 加权平均往返时间rtts → smoothed （平滑往返时间）\n * 超时重传时间rto rto=rtts + 4rttd\n * rttd是rtt的偏差加权平均值\n\n\n# 关于超时重传rto值存在的问题\n\n如何确定是对哪一个报文段的确认？\n\n针对这个问题，karn提出了一个算法，只要报文段发生了重传，就不采用往返时间样本（但rto值就无法更新），进一步解决的方法是，如果一直发生超时重传则rto值自增为原来旧的rto值的两倍，直到不在发生超时重传后根据公式计算新的超时重传时间rto的值。这样较为稳妥\n\n\n# 选择确认sack\n\n书上讲了个寂寞。。。。。\n\n * 选择确认（selective ack）\n\n\n# tcp的流量控制\n\n\n# 利用滑动窗口实现流量控制（flow control）\n\n让发送方发送速率不要太快，接收方来得及接收\n\n * 持续计数器（persistence timer）打破非零窗口通知在链路中丢失的死锁局面\n * rwnd（receiver window）接收窗口\n\n\n\n\n# tcp的传输效率\n\n主要是用发送缓存 缓存更多的数据但不超过mss，接收缓存腾出足够多的缓存空间来增大接收窗口的值，让发送方一次能发送更大的报文段！！！\n\n * 最大报文段长度mss\n * tcp推送（tcp push）\n * tcp计时器\n * nagle算法（先发送一个收到确认报文后，立即发送发送缓存中的所有数据）\n * 糊涂窗口综合征（silly window syndrome）（接收缓存腾出的效率，确定接收窗口尽量大）\n\n\n# tcp的拥塞控制\n\n * 拥塞（congestion）\n * 轻度拥塞\n * 死锁（deadlock）\n * 开环控制\n * 闭环控制\n\n\n# tcp的拥塞控制方法\n\n\n# tcp拥塞控制的算法有四种\n\n * 慢开始（slow-start）\n   \n   * smss（发送方最大报文段）\n   * 慢开始门限（ssthresh）\n   \n   先发送一个报文段试探以下网络的拥塞情况，在正常收到接收方的确认后，就把拥塞窗口cwnd增大（前一个cwnd）一倍（乘法），每收到一个新报文段的确认后，就增加最多一个smss的数值。\n   \n   这就是慢开始，一步一步增加拥塞窗口cwnd的值，提升发送速率\n   \n   \n   \n   慢开始的cwnd值要设置一个上限，超过这个上限后就使用其他拥塞控制算法\n   \n   \n\n * 拥塞避免（congestion avoidance）\n   \n   每经过一个往返时间rtt就把发送窗口cwnd加1，成线性规律缓慢增长，比慢开始算法增长速率慢得多。\n   \n   \n\n * 快重传（fast retransmit）\n   \n   快重传是为了解决网络中个别报文段发生丢失，导致发送方接收不到确认报文，误以为网络发生了拥塞启动慢开始算法，把拥塞窗口置为1降低了传输效率。\n   \n   快重传：接收方收到一个m1报文就回送一个确认报文，当m2报文丢失后，接收方应立即发送对m1报文的接收确认，发送方接着继续发送m3,m4报文段，此时接收方还是没有接收到m2报文段，继续发送对m1的接收确认；当发送方一连收到3个重复确认，就知道接收方没有收到m2报文段，立即启动快重传算法，重传m2报文段。\n   \n   \n\n * 快恢复（fast recovery）\n   \n   当发送方收到了三个连续的重复确认，变启动快重传算法重传丢失的分组，并启动快恢复算法避免拥塞避免算法以为是网络拥塞了启动慢开始算法（本来对丢失的分组接收方是可以什么都不做的，所以没有快重传算法，发送方就收不到确认，以为发生了超时，直接启动慢开始算法，慢开始算法cwnd的值是重新以1开始增加，而快恢复算法不是从最开始的1增加，而是把门限值 ssthresh = cwnd / 2 = 8）,从而提高传输速率。\n\n\n# 拥塞控制流程图\n\n\n\n发送窗口始终不能大于接收窗口和拥塞窗口二者的最小值\n\n\n\n\n# 主动队列管理aqm\n\n网络层路由器的分组丢失策略会引发tcp拥塞控制误认为网络发生了拥塞。\n\n主动队列管理是把被动化为主动，给路由器的队列设置两个参数，最小门限和最大门限\n\n\n\n以某一概率某丢弃个分组能够避免tcp发生全局性的拥塞控制\n\nred能够检测到网络拥塞的早期征兆，预检测！\n\n * 路由器的处理规则，先进先出 fifo\n * 尾部丢弃策略（tail-dropplicy），因为队列满了\n * 全局同步（global syncronization），全部tcp连接直接从慢开始状态开始（要避免全局同步现象）\n * 随机早期检测red（random early detection）\n\n\n# tcp的运输连接管理\n\n * 连接建立\n   \n   tcp三次握手\n   \n   \n   \n   syn=1的报文段不能携带数据，但要消耗一个序号\n   \n   ack=1表示确认号有效，连接建立以后都为1\n   \n   其实第二次握手可以分为两次握手，server第一次发送确认报文ack，发送同步报文syn，也可以说成是四次握手。\n\n * 数据传送\n\n * 连接释放\n   \n   tcp的四次挥手\n   \n   \n   \n   * 时间等待计时器（time-wait timer）\n   \n   * msl最长报文段寿命\n     \n     msl存在的意义，防止a发送的最后一个ack报文段能够顺利到达b，丢失后，b会重传fin+ack。如果没收到最后一个确认ack报文，则b无法正常进入closed状态。\n\n * 保活计时器 keepalive timer\n   \n   确保客户机在发生故障后不能正常关闭连接，收到客户机数据后重置kt，当一直没有收到客户机报文段时，等kt过期（一般是两小时），两小时过后还没收到客户机的数据，那么每隔75秒发送一个探测报文，若一连发送10个探测报文无响应后，服务器便知道客户机出现了故障，便关闭这个tcp连接！！！\n\n\n# tcp的有限机状态\n\n\n\n\n# udp → user datagram protocol",charsets:{cjk:!0}},{title:"分类表设计",frontmatter:{title:"分类表设计",date:"2022-01-30T14:28:26.000Z",permalink:"/pages/812a25/",categories:["关于","经验之谈"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/02.%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E5%88%86%E7%B1%BB%E8%A1%A8%E8%AE%BE%E8%AE%A1.html",relativePath:"50.关于/02.经验之谈/分类表设计.md",key:"v-3a50b66b",path:"/pages/812a25/",headers:[{level:2,title:"三级分类表设计",slug:"三级分类表设计",normalizedTitle:"三级分类表设计",charIndex:2}],headersStr:"三级分类表设计",content:"# 三级分类表设计",normalizedContent:"# 三级分类表设计",charsets:{cjk:!0}},{title:"设计模式总结",frontmatter:{title:"设计模式总结",date:"2022-01-19T12:50:50.000Z",permalink:"/pages/c027ac/",categories:["工具-网络&其他","设计模式"],tags:[null]},regularPath:"/43.%E5%B7%A5%E5%85%B7-%E7%BD%91%E7%BB%9C&%E5%85%B6%E4%BB%96/30.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/10.%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%80%BB%E7%BB%93.html",relativePath:"43.工具-网络&其他/30.设计模式/10.设计模式总结.md",key:"v-4db62294",path:"/pages/c027ac/",headers:[{level:2,title:"原则和分类",slug:"原则和分类",normalizedTitle:"原则和分类",charIndex:19},{level:3,title:"7个原则",slug:"_7个原则",normalizedTitle:"7个原则",charIndex:29},{level:3,title:"23种模式",slug:"_23种模式",normalizedTitle:"23种模式",charIndex:89},{level:3,title:"1.单例模式",slug:"_1-单例模式",normalizedTitle:"1.单例模式",charIndex:348},{level:3,title:"2.简单工厂模式",slug:"_2-简单工厂模式",normalizedTitle:"2.简单工厂模式",charIndex:1533},{level:3,title:"3.工厂方法模式",slug:"_3-工厂方法模式",normalizedTitle:"3.工厂方法模式",charIndex:1614},{level:3,title:"4.抽象工厂模式",slug:"_4-抽象工厂模式",normalizedTitle:"4.抽象工厂模式",charIndex:1730},{level:3,title:"5.模板方法",slug:"_5-模板方法",normalizedTitle:"5.模板方法",charIndex:1828}],headersStr:"原则和分类 7个原则 23种模式 1.单例模式 2.简单工厂模式 3.工厂方法模式 4.抽象工厂模式 5.模板方法",content:'# 设计模式笔记\n\n参考文章\n\n\n# 原则和分类\n\n\n# 7个原则\n\n单一职责原则 里氏替换原则 依赖倒置原则 接口隔离原则\n\n迪米特法则 开闭原则 组合/聚合复用原则\n\n\n# 23种模式\n\n# 创建型 5种\n\n> 创建对象的模式：对类的实例化进行抽象\n\n> 封装具体类的信息，隐藏类的实例化过程\n\n单例模式 简单工厂 工厂方法 抽象工厂 建造者模式 原型模式\n\n# 结构型 7种\n\n> 处理类/对象的组合\n\n门面模式 适配器模式 桥接模式 组合模式 装饰器模式 享元模式 代理模式\n\n# 行为型 11种\n\n> 对不同对象之间的责任划分和算法的抽象化？？？\n\n责任链模式 策略模式 模板方法模式 命令模式 观察者模式 访问者模式 状态模式 解释器模式 迭代器模式 中介者模式 备忘录模式\n\n\n# 1.单例模式\n\n> 最佳实践是采用枚举方式（JVM提供线程安全、防止反射攻击，防止序列化破坏。）\n> \n> 为了单例创建时机可控，使用静态内部类，防止反射攻击.setAccessible(true)，可以在构造器里加已存在，再new就直接抛异常\n\n饿汉式的两种方式方式\n\n1.私有化构造器直接new一个\n\n2.枚举方式\n\npublic enum Singleton {\n    uniqueInstance;\n}\n\n\n1\n2\n3\n\n\n懒汉式的四种实现方式\n\n1.一个if，线程不安全\n\n2.synchronized锁\n\n3.双重校验锁，两个if\n\n4.内部类实现，JVM提供线程安全，volatile防止指令重排，构造器判断防止反射攻击，readResolve()防止序列化破坏\n\npublic class Singleton {\n    \n    private static boolean flag = false;\n    \n    private Singleton(){\n        //处理反射攻击\n        synchronized(Singleton.class){\n            if(flag == false){\n                flag = !flag;\n            }else{\n                throw new RuntimeException("单例模式，对象已经创建，反射不可以再创建")\n            }\n        }\n    }\n    \n    public static class SingletonHandler{\n        private volatile static final Singleton INSTANCE = new Singleton();\n    }\n    \n    public static Singleton getInstance(){\n        return SingletonHandler.INSTANCE;\n    }\n    \n    //实现readResolve方法可以解决反序列化攻击\n    //反序列化时会检查有没有这个方法，如果有可以调用这个方法返回对象\n    private Object readResolve() {\n        return InnerHolder.INSTANCE;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n单例模式反射攻击（双重校验锁）\n\n单例模式反射攻击（静态内部类）\n\n单例模式序列化破坏\n\n\n# 2.简单工厂模式\n\n> 提供一个类来集中管理对象创建的细节，让客户类和具体子类解耦，只用继承简单工厂类传入参数，具体创建过程交由该类实现\n\n简单工厂模式\n\n\n# 3.工厂方法模式\n\n> 定义了一个创建对象的接口，但由子类决定要实例化哪个类。工厂方法把实例化操作推迟到子类。\n\n> 与简单工厂相比，在简单工厂中，创建对象的是另一个类，而在工厂方法中，是由子类来创建对象。\n\n工厂方法模式\n\n\n# 4.抽象工厂模式\n\n> 创建一连串的相关对象，工厂方法只是用于创建一个对象\n\n> 抽象工厂使用多个工厂方法创建一连串对象\n\n> 客户类直接使用抽象工厂类的方法获取多个实例\n\n抽象工厂模式\n\n\n# 5.模板方法\n\n> 拥有相同的算法结构，定义相同的部分算法（方法），不同的算法（方法）交由子类实现\n\n> Spring IOC 容器对bean的初始化使用的refresh()方法就是一个典型的模板方法\n\n> 模板方法也称钩子方法\n\n模板方法',normalizedContent:'# 设计模式笔记\n\n参考文章\n\n\n# 原则和分类\n\n\n# 7个原则\n\n单一职责原则 里氏替换原则 依赖倒置原则 接口隔离原则\n\n迪米特法则 开闭原则 组合/聚合复用原则\n\n\n# 23种模式\n\n# 创建型 5种\n\n> 创建对象的模式：对类的实例化进行抽象\n\n> 封装具体类的信息，隐藏类的实例化过程\n\n单例模式 简单工厂 工厂方法 抽象工厂 建造者模式 原型模式\n\n# 结构型 7种\n\n> 处理类/对象的组合\n\n门面模式 适配器模式 桥接模式 组合模式 装饰器模式 享元模式 代理模式\n\n# 行为型 11种\n\n> 对不同对象之间的责任划分和算法的抽象化？？？\n\n责任链模式 策略模式 模板方法模式 命令模式 观察者模式 访问者模式 状态模式 解释器模式 迭代器模式 中介者模式 备忘录模式\n\n\n# 1.单例模式\n\n> 最佳实践是采用枚举方式（jvm提供线程安全、防止反射攻击，防止序列化破坏。）\n> \n> 为了单例创建时机可控，使用静态内部类，防止反射攻击.setaccessible(true)，可以在构造器里加已存在，再new就直接抛异常\n\n饿汉式的两种方式方式\n\n1.私有化构造器直接new一个\n\n2.枚举方式\n\npublic enum singleton {\n    uniqueinstance;\n}\n\n\n1\n2\n3\n\n\n懒汉式的四种实现方式\n\n1.一个if，线程不安全\n\n2.synchronized锁\n\n3.双重校验锁，两个if\n\n4.内部类实现，jvm提供线程安全，volatile防止指令重排，构造器判断防止反射攻击，readresolve()防止序列化破坏\n\npublic class singleton {\n    \n    private static boolean flag = false;\n    \n    private singleton(){\n        //处理反射攻击\n        synchronized(singleton.class){\n            if(flag == false){\n                flag = !flag;\n            }else{\n                throw new runtimeexception("单例模式，对象已经创建，反射不可以再创建")\n            }\n        }\n    }\n    \n    public static class singletonhandler{\n        private volatile static final singleton instance = new singleton();\n    }\n    \n    public static singleton getinstance(){\n        return singletonhandler.instance;\n    }\n    \n    //实现readresolve方法可以解决反序列化攻击\n    //反序列化时会检查有没有这个方法，如果有可以调用这个方法返回对象\n    private object readresolve() {\n        return innerholder.instance;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n\n\n单例模式反射攻击（双重校验锁）\n\n单例模式反射攻击（静态内部类）\n\n单例模式序列化破坏\n\n\n# 2.简单工厂模式\n\n> 提供一个类来集中管理对象创建的细节，让客户类和具体子类解耦，只用继承简单工厂类传入参数，具体创建过程交由该类实现\n\n简单工厂模式\n\n\n# 3.工厂方法模式\n\n> 定义了一个创建对象的接口，但由子类决定要实例化哪个类。工厂方法把实例化操作推迟到子类。\n\n> 与简单工厂相比，在简单工厂中，创建对象的是另一个类，而在工厂方法中，是由子类来创建对象。\n\n工厂方法模式\n\n\n# 4.抽象工厂模式\n\n> 创建一连串的相关对象，工厂方法只是用于创建一个对象\n\n> 抽象工厂使用多个工厂方法创建一连串对象\n\n> 客户类直接使用抽象工厂类的方法获取多个实例\n\n抽象工厂模式\n\n\n# 5.模板方法\n\n> 拥有相同的算法结构，定义相同的部分算法（方法），不同的算法（方法）交由子类实现\n\n> spring ioc 容器对bean的初始化使用的refresh()方法就是一个典型的模板方法\n\n> 模板方法也称钩子方法\n\n模板方法',charsets:{cjk:!0}},{title:"电商类项目分析",frontmatter:{title:"电商类项目分析",date:"2022-01-30T15:57:21.000Z",permalink:"/pages/288e51/",categories:["关于","经验之谈"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/02.%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E7%94%B5%E5%95%86%E7%B1%BB%E9%A1%B9%E7%9B%AE%E5%88%86%E6%9E%90.html",relativePath:"50.关于/02.经验之谈/电商类项目分析.md",key:"v-1a195796",path:"/pages/288e51/",headers:[{level:2,title:"商品分析",slug:"商品分析",normalizedTitle:"商品分析",charIndex:2},{level:3,title:"基本信息",slug:"基本信息",normalizedTitle:"基本信息",charIndex:11}],headersStr:"商品分析 基本信息",content:"# 商品分析\n\n\n# 基本信息\n\n> 商品如何展示\n\n分类\n\n三级分类表设计\n\n平台属性\n\n> 平台属性和平台属性值主要用于商品的检索，每个分类对应的属性都不同，分类包含一级分类、二级分类和三级分类，分类层级区分对应分类。\n\n销售属性与销售属性值\n\nspu与 sku",normalizedContent:"# 商品分析\n\n\n# 基本信息\n\n> 商品如何展示\n\n分类\n\n三级分类表设计\n\n平台属性\n\n> 平台属性和平台属性值主要用于商品的检索，每个分类对应的属性都不同，分类包含一级分类、二级分类和三级分类，分类层级区分对应分类。\n\n销售属性与销售属性值\n\nspu与 sku",charsets:{cjk:!0}},{title:"项目搭建流程",frontmatter:{title:"项目搭建流程",date:"2022-01-30T15:25:45.000Z",permalink:"/pages/5b9d1b/",categories:["关于","经验之谈"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/02.%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B.html",relativePath:"50.关于/02.经验之谈/项目搭建流程.md",key:"v-6f4bd572",path:"/pages/5b9d1b/",headers:[{level:2,title:"工具",slug:"工具",normalizedTitle:"工具",charIndex:2},{level:2,title:"分布式系统模块划分",slug:"分布式系统模块划分",normalizedTitle:"分布式系统模块划分",charIndex:15},{level:3,title:"xxx_parent",slug:"xxx-parent",normalizedTitle:"xxx_parent",charIndex:29},{level:3,title:"common",slug:"common",normalizedTitle:"common",charIndex:45},{level:3,title:"common-util",slug:"common-util",normalizedTitle:"common-util",charIndex:59},{level:3,title:"service-util",slug:"service-util",normalizedTitle:"service-util",charIndex:78}],headersStr:"工具 分布式系统模块划分 xxx_parent common common-util service-util",content:"# 工具\n\nIDEA\n\n\n# 分布式系统模块划分\n\n * xxx_parent\n   * common\n     * common-util\n     * service-util\n   * model\n   * service\n\n\n# xxx_parent\n\n> 顶级父模块，做依赖管理\n\n\n# common\n\n> 公共模块父节点\n\n\n# common-util\n\n> 工具类模块，所有模块都可以依赖于它\n\n常用工具类\n\n工具类                 用途\nxxxException        自定义全局异常\nResult              API统一返回结果封装类\nResultCodeEnum      API统一返回结果状态信息\nAuthContextHolder   获取登录用户信息类\nHttpClientUtil      http客户端类\nMD5                 通过MD5给字符串加密的工具类\nIpUtil              获取Ip地址的工具类\nDateUitl            日期比较工具类\n\n例子\n\ncom.viki.exception\n    xxxException.java\ncom.viki.result\n    Result.java\n    ResultCodeEnum.java\ncom.viki.util\n    AuthContextHolder.java\n    HttpClientUtil.java\n    MD5.java\n    IpUtil.java\n    DateUitl.j\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# service-util\n\n> service服务的工具包，包含service服务的公共配置类，所有service模块依赖于它",normalizedContent:"# 工具\n\nidea\n\n\n# 分布式系统模块划分\n\n * xxx_parent\n   * common\n     * common-util\n     * service-util\n   * model\n   * service\n\n\n# xxx_parent\n\n> 顶级父模块，做依赖管理\n\n\n# common\n\n> 公共模块父节点\n\n\n# common-util\n\n> 工具类模块，所有模块都可以依赖于它\n\n常用工具类\n\n工具类                 用途\nxxxexception        自定义全局异常\nresult              api统一返回结果封装类\nresultcodeenum      api统一返回结果状态信息\nauthcontextholder   获取登录用户信息类\nhttpclientutil      http客户端类\nmd5                 通过md5给字符串加密的工具类\niputil              获取ip地址的工具类\ndateuitl            日期比较工具类\n\n例子\n\ncom.viki.exception\n    xxxexception.java\ncom.viki.result\n    result.java\n    resultcodeenum.java\ncom.viki.util\n    authcontextholder.java\n    httpclientutil.java\n    md5.java\n    iputil.java\n    dateuitl.j\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\n\n# service-util\n\n> service服务的工具包，包含service服务的公共配置类，所有service模块依赖于它",charsets:{cjk:!0}},{title:"你真的会搜索吗？",frontmatter:{title:"你真的会搜索吗？",date:"2022-01-16T22:02:52.000Z",permalink:"/pages/46344d/",categories:["关于","好用利器"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/10.%E5%A5%BD%E7%94%A8%E5%88%A9%E5%99%A8/10.%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E6%90%9C%E7%B4%A2%E5%90%97%EF%BC%9F.html",relativePath:"50.关于/10.好用利器/10.你真的会搜索吗？.md",key:"v-f61f7974",path:"/pages/46344d/",headers:[{level:2,title:"准确搜索",slug:"准确搜索",normalizedTitle:"准确搜索",charIndex:16},{level:2,title:"排除关键词",slug:"排除关键词",normalizedTitle:"排除关键词",charIndex:72},{level:2,title:"OR 逻辑搜索",slug:"or-逻辑搜索",normalizedTitle:"or 逻辑搜索",charIndex:138},{level:2,title:"模糊搜索",slug:"模糊搜索",normalizedTitle:"模糊搜索",charIndex:185},{level:2,title:"filetype：",slug:"filetype",normalizedTitle:"filetype：",charIndex:232},{level:2,title:"site：",slug:"site",normalizedTitle:"site：",charIndex:316},{level:2,title:"inurl：& allinurl：",slug:"inurl-allinurl",normalizedTitle:"inurl：&amp; allinurl：",charIndex:null},{level:2,title:"intitle：& allintitle：",slug:"intitle-allintitle",normalizedTitle:"intitle：&amp; allintitle：",charIndex:null},{level:2,title:"define",slug:"define",normalizedTitle:"define",charIndex:594},{level:2,title:"Ps：",slug:"ps",normalizedTitle:"ps：",charIndex:657}],headersStr:"准确搜索 排除关键词 OR 逻辑搜索 模糊搜索 filetype： site： inurl：& allinurl： intitle：& allintitle： define Ps：",content:'# 搜索引擎&高效搜索\n\n\n# 准确搜索\n\n> 给关键词加上 ""\n\n> 防止搜索的关键词被搜索引擎拆分\n\n> 例: "人工智能算法"\n\n\n# 排除关键词\n\n> 空格 + 加减号 排除不需要的关键词\n\n> apple -iPhone -iPad -mac -iMac\n\n\n# OR 逻辑搜索\n\n> 用大写的 OR 连接关键词并用空格隔开\n\n> 百度 OR 谷歌\n\n\n# 模糊搜索\n\n> 用星号*占位需要模糊搜索的内容\n\n> 素质*连 study*home\n\n\n# filetype：\n\n> 在搜索内容后面键入 filetype： 然后加上需要检索的文件类型\n\n> Machine Learning filetype:PDF\n\n\n# site：\n\n> 在搜索内容后面键入 site： 然后输入想搜索的网址\n\n> 研究生 site：moe.edu.cn\n\n\n# inurl：& allinurl：\n\n> 在搜索内容后面键入inurl：或者 allinurl： 然后输入相关url后缀\n\n> 民法典 inurl：gov.cn 研究生招生 inurl：moe.edu.cn\n\n\n# intitle：& allintitle：\n\n> 在搜索内容后面键入intitle：或者 allintitle： 然后输入相关标题\n\n> Machine Learning intitle：Stanford\n\n\n# define\n\n> 直接在搜索引擎输入define： 然后输入你需要查询的名词\n\n> define：Internet\n\n\n# Ps：\n\n> 所有使用到 ：的搜索，：都是中文的冒号：不能单独使用英文:，使用英文冒号需要在冒号后面加个空格',normalizedContent:'# 搜索引擎&高效搜索\n\n\n# 准确搜索\n\n> 给关键词加上 ""\n\n> 防止搜索的关键词被搜索引擎拆分\n\n> 例: "人工智能算法"\n\n\n# 排除关键词\n\n> 空格 + 加减号 排除不需要的关键词\n\n> apple -iphone -ipad -mac -imac\n\n\n# or 逻辑搜索\n\n> 用大写的 or 连接关键词并用空格隔开\n\n> 百度 or 谷歌\n\n\n# 模糊搜索\n\n> 用星号*占位需要模糊搜索的内容\n\n> 素质*连 study*home\n\n\n# filetype：\n\n> 在搜索内容后面键入 filetype： 然后加上需要检索的文件类型\n\n> machine learning filetype:pdf\n\n\n# site：\n\n> 在搜索内容后面键入 site： 然后输入想搜索的网址\n\n> 研究生 site：moe.edu.cn\n\n\n# inurl：& allinurl：\n\n> 在搜索内容后面键入inurl：或者 allinurl： 然后输入相关url后缀\n\n> 民法典 inurl：gov.cn 研究生招生 inurl：moe.edu.cn\n\n\n# intitle：& allintitle：\n\n> 在搜索内容后面键入intitle：或者 allintitle： 然后输入相关标题\n\n> machine learning intitle：stanford\n\n\n# define\n\n> 直接在搜索引擎输入define： 然后输入你需要查询的名词\n\n> define：internet\n\n\n# ps：\n\n> 所有使用到 ：的搜索，：都是中文的冒号：不能单独使用英文:，使用英文冒号需要在冒号后面加个空格',charsets:{cjk:!0}},{title:"Markdown语法",frontmatter:{title:"Markdown语法",date:"2022-01-18T14:20:13.000Z",permalink:"/pages/d3fb30/",categories:["关于","好用利器"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/10.%E5%A5%BD%E7%94%A8%E5%88%A9%E5%99%A8/30.Markdown%E8%AF%AD%E6%B3%95.html",relativePath:"50.关于/10.好用利器/30.Markdown语法.md",key:"v-23017f8c",path:"/pages/d3fb30/",headers:[{level:2,title:"简介",slug:"简介",normalizedTitle:"简介",charIndex:19},{level:2,title:"常用",slug:"常用",normalizedTitle:"常用",charIndex:32}],headersStr:"简介 常用",content:'# Markdown快速上手\n\n\n# 简介\n\n快速上手\n\n\n# 常用\n\n超链接\n\n[超链接显示名](超链接地址 "超链接title")',normalizedContent:'# markdown快速上手\n\n\n# 简介\n\n快速上手\n\n\n# 常用\n\n超链接\n\n[超链接显示名](超链接地址 "超链接title")',charsets:{cjk:!0}},{title:"Go未来所趋③",frontmatter:{title:"Go未来所趋③",date:"2022-02-08T11:32:06.000Z",permalink:"/pages/0e2db5/",categories:["关于","细读文章"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/20.%E7%BB%86%E8%AF%BB%E6%96%87%E7%AB%A0/30.Go%E6%9C%AA%E6%9D%A5%E6%89%80%E8%B6%8B%E2%91%A2.html",relativePath:"50.关于/20.细读文章/30.Go未来所趋③.md",key:"v-5a7e7158",path:"/pages/0e2db5/",headers:[{level:2,title:"关于Go前景",slug:"关于go前景",normalizedTitle:"关于go前景",charIndex:2}],headersStr:"关于Go前景",content:"# 关于Go前景\n\n云计算时代，我与Go语言难解的缘分",normalizedContent:"# 关于go前景\n\n云计算时代，我与go语言难解的缘分",charsets:{cjk:!0}},{title:"Typora",frontmatter:{title:"Typora",date:"2022-01-16T22:03:54.000Z",permalink:"/pages/d744a1/",categories:["关于","好用利器"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/10.%E5%A5%BD%E7%94%A8%E5%88%A9%E5%99%A8/20.Typora.html",relativePath:"50.关于/10.好用利器/20.Typora.md",key:"v-6db702af",path:"/pages/d744a1/",headers:[{level:3,title:"代码格式化",slug:"代码格式化",normalizedTitle:"代码格式化",charIndex:46}],headersStr:"代码格式化",content:"# Typora操作指南\n\nTypora不完全使用指南1\n\nTypora使用参考2\n\n\n# 代码格式化\n\nShift+Tab",normalizedContent:"# typora操作指南\n\ntypora不完全使用指南1\n\ntypora使用参考2\n\n\n# 代码格式化\n\nshift+tab",charsets:{cjk:!0}},{title:"好文归档",frontmatter:{title:"好文归档",date:"2022-01-16T22:04:19.000Z",permalink:"/pages/2c260b/",categories:["关于","细读文章"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/20.%E7%BB%86%E8%AF%BB%E6%96%87%E7%AB%A0/10.%E7%BB%86%E8%AF%BB%E6%96%87%E7%AB%A0%E2%91%A0.html",relativePath:"50.关于/20.细读文章/10.细读文章①.md",key:"v-5508f0ba",path:"/pages/2c260b/",headers:[{level:2,title:"微服务",slug:"微服务",normalizedTitle:"微服务",charIndex:9},{level:2,title:"数据库",slug:"数据库",normalizedTitle:"数据库",charIndex:40},{level:2,title:"Spring",slug:"spring",normalizedTitle:"spring",charIndex:121},{level:2,title:"网络",slug:"网络",normalizedTitle:"网络",charIndex:163},{level:2,title:"架构",slug:"架构",normalizedTitle:"架构",charIndex:252},{level:2,title:"关于Go",slug:"关于go",normalizedTitle:"关于go",charIndex:313},{level:2,title:"文件上传架构",slug:"文件上传架构",normalizedTitle:"文件上传架构",charIndex:337},{level:2,title:"SpringMVC实现文件上传",slug:"springmvc实现文件上传",normalizedTitle:"springmvc实现文件上传",charIndex:352},{level:2,title:"Mybatis",slug:"mybatis",normalizedTitle:"mybatis",charIndex:404},{level:2,title:"Others",slug:"others",normalizedTitle:"others",charIndex:534},{level:2,title:"JDK",slug:"jdk",normalizedTitle:"jdk",charIndex:568},{level:2,title:"RESTful风格",slug:"restful风格",normalizedTitle:"restful风格",charIndex:589},{level:2,title:"关于网关",slug:"关于网关",normalizedTitle:"关于网关",charIndex:661}],headersStr:"微服务 数据库 Spring 网络 架构 关于Go 文件上传架构 SpringMVC实现文件上传 Mybatis Others JDK RESTful风格 关于网关",content:"# 看看\n\n\n# 微服务\n\n服务网格(service mesh)参考1\n\n\n# 数据库\n\n关系数据库设计理论\n\n联合索引在B+树上的存储结构及数据查找方式\n\nmysql联合索引的B+树到底张什么样子啊？\n\nInnDB是怎么存储数据的\n\n\n# Spring\n\n【Spring】IOC：基于注解的IOC容器初始化源码分析\n\n\n# 网络\n\ncookie,session,token和面试官xx\n\n一篇文章带你详解 HTTP 协议（网络协议篇一）\n\n面试官，别问我 HTTP 了！看这 30 张图就行！\n\n\n# 架构\n\n一探B站后台架构, 他山之石, 何以攻玉? -- 仅从一个一线Golang开发者的角度谈B站4.22代码\n\n\n# 关于Go\n\nGo 语言到底适合干什么？\n\n\n# 文件上传架构\n\n掘金\n\n\n# SpringMVC实现文件上传\n\n文件上传那些事：多图上传、大文件上传、断点续传功能实现与分析\n\n\n# Mybatis\n\nmybatis还是建议用xml配置\n\nMybatis二级缓存，你确定要用么？\n\n> 为什么不要使用mybatis的二级缓存，脏数据，清空缓存失去缓存的意义，在业务层使用可控制的缓存\n\nMybatis系列第8篇：自动映射，使用需谨慎！\n\n\n# Others\n\n新来个技术总监，禁止我们使用Lombok！\n\n\n# JDK\n\nJdk动态代理原理解析\n\n\n# RESTful风格\n\nRESTful风格API详解【图文】_寻儒_51CTO博客\n\n怎样用通俗的语言解释REST，以及RESTful？\n\n\n# 关于网关\n\nNginx+springcloud gateWay实现高可用网关集群\n\nhttps://lzyz.fun/bloglist/nginxs-gateway/\n\nhttps://blog.csdn.net/ligel136738/article/details/116463211\n\nhttps://www.cnblogs.com/wtzbk/p/14009219.html\n\n使用Nginx+Lua开发高性能Web应用\n\n支持Lua的一款IDE\n\nhttps://luaperfect.net/article/ReleaseNotes/\n\n亿级流量架构之网关设计思路、常见网关对比",normalizedContent:"# 看看\n\n\n# 微服务\n\n服务网格(service mesh)参考1\n\n\n# 数据库\n\n关系数据库设计理论\n\n联合索引在b+树上的存储结构及数据查找方式\n\nmysql联合索引的b+树到底张什么样子啊？\n\ninndb是怎么存储数据的\n\n\n# spring\n\n【spring】ioc：基于注解的ioc容器初始化源码分析\n\n\n# 网络\n\ncookie,session,token和面试官xx\n\n一篇文章带你详解 http 协议（网络协议篇一）\n\n面试官，别问我 http 了！看这 30 张图就行！\n\n\n# 架构\n\n一探b站后台架构, 他山之石, 何以攻玉? -- 仅从一个一线golang开发者的角度谈b站4.22代码\n\n\n# 关于go\n\ngo 语言到底适合干什么？\n\n\n# 文件上传架构\n\n掘金\n\n\n# springmvc实现文件上传\n\n文件上传那些事：多图上传、大文件上传、断点续传功能实现与分析\n\n\n# mybatis\n\nmybatis还是建议用xml配置\n\nmybatis二级缓存，你确定要用么？\n\n> 为什么不要使用mybatis的二级缓存，脏数据，清空缓存失去缓存的意义，在业务层使用可控制的缓存\n\nmybatis系列第8篇：自动映射，使用需谨慎！\n\n\n# others\n\n新来个技术总监，禁止我们使用lombok！\n\n\n# jdk\n\njdk动态代理原理解析\n\n\n# restful风格\n\nrestful风格api详解【图文】_寻儒_51cto博客\n\n怎样用通俗的语言解释rest，以及restful？\n\n\n# 关于网关\n\nnginx+springcloud gateway实现高可用网关集群\n\nhttps://lzyz.fun/bloglist/nginxs-gateway/\n\nhttps://blog.csdn.net/ligel136738/article/details/116463211\n\nhttps://www.cnblogs.com/wtzbk/p/14009219.html\n\n使用nginx+lua开发高性能web应用\n\n支持lua的一款ide\n\nhttps://luaperfect.net/article/releasenotes/\n\n亿级流量架构之网关设计思路、常见网关对比",charsets:{cjk:!0}},{title:"关于微服务②",frontmatter:{title:"关于微服务②",date:"2022-02-06T20:50:34.000Z",permalink:"/pages/11a8fe/",categories:["关于","细读文章"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/20.%E7%BB%86%E8%AF%BB%E6%96%87%E7%AB%A0/20.%E5%85%B3%E4%BA%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E2%91%A1.html",relativePath:"50.关于/20.细读文章/20.关于微服务②.md",key:"v-f58aebf0",path:"/pages/11a8fe/",headers:[{level:2,title:"微服务",slug:"微服务",normalizedTitle:"微服务",charIndex:2}],headersStr:"微服务",content:"# 微服务\n\n服务网格(service mesh)参考1\n\n什么是服务网格\n\n什么是 service mesh\n\nService Mesh服务网格新生代--Istio\n\nhttps://jimmysong.io/",normalizedContent:"# 微服务\n\n服务网格(service mesh)参考1\n\n什么是服务网格\n\n什么是 service mesh\n\nservice mesh服务网格新生代--istio\n\nhttps://jimmysong.io/",charsets:{cjk:!0}},{title:"小问题记录一下",frontmatter:{title:"小问题记录一下",date:"2022-02-11T16:31:18.000Z",permalink:"/pages/715be6/",categories:["关于","想起来了"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/25.%E6%83%B3%E8%B5%B7%E6%9D%A5%E4%BA%86/20.%E5%B0%8F%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95%E4%B8%80%E4%B8%8B.html",relativePath:"50.关于/25.想起来了/20.小问题记录一下.md",key:"v-ed639c18",path:"/pages/715be6/",headers:[{level:2,title:"Typora文件恢复",slug:"typora文件恢复",normalizedTitle:"typora文件恢复",charIndex:2}],headersStr:"Typora文件恢复",content:"# Typora文件恢复\n\n在使用Typora自动保存功能时候，有时候不明原因突然崩溃，导致之前写的内容突然就没了，没了，没了......\n\n这时打开设置->通用->保存&恢复->点击 恢复未保存的文稿\n\n打开的文件夹中就是自动保存的备份文稿记录，选取最近时间点打开文稿，里面就有之前的内容，复制出来就ok",normalizedContent:"# typora文件恢复\n\n在使用typora自动保存功能时候，有时候不明原因突然崩溃，导致之前写的内容突然就没了，没了，没了......\n\n这时打开设置->通用->保存&恢复->点击 恢复未保存的文稿\n\n打开的文件夹中就是自动保存的备份文稿记录，选取最近时间点打开文稿，里面就有之前的内容，复制出来就ok",charsets:{cjk:!0}},{title:"随便写写",frontmatter:{title:"随便写写",date:"2022-02-07T14:00:45.000Z",permalink:"/pages/54eb0a/",categories:["关于","想起来了"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/25.%E6%83%B3%E8%B5%B7%E6%9D%A5%E4%BA%86/10.%E9%9A%8F%E4%BE%BF%E5%86%99%E5%86%99.html",relativePath:"50.关于/25.想起来了/10.随便写写.md",key:"v-027e22d1",path:"/pages/54eb0a/",headers:[{level:2,title:"高可用",slug:"高可用",normalizedTitle:"高可用",charIndex:2},{level:3,title:"选举机制",slug:"选举机制",normalizedTitle:"选举机制",charIndex:10}],headersStr:"高可用 选举机制",content:"# 高可用\n\n\n# 选举机制\n\n**为什么节点需要采用 2n+1 ？**3 5 7 9\n\nmaster宕机，需要选举机制，不能有相同票数的两个或多个节点。",normalizedContent:"# 高可用\n\n\n# 选举机制\n\n**为什么节点需要采用 2n+1 ？**3 5 7 9\n\nmaster宕机，需要选举机制，不能有相同票数的两个或多个节点。",charsets:{cjk:!0}},{title:"如何解决跨域问题",frontmatter:{title:"如何解决跨域问题",date:"2022-02-15T14:53:36.000Z",permalink:"/pages/e78cf8/",categories:["关于","想起来了"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/25.%E6%83%B3%E8%B5%B7%E6%9D%A5%E4%BA%86/30.%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98.html",relativePath:"50.关于/25.想起来了/30.如何解决跨域问题.md",key:"v-7832c0a0",path:"/pages/e78cf8/",headers:[{level:2,title:"什么是跨域？",slug:"什么是跨域",normalizedTitle:"什么是跨域？",charIndex:2},{level:2,title:"常见的三种解决方式",slug:"常见的三种解决方式",normalizedTitle:"常见的三种解决方式",charIndex:35},{level:3,title:"@CrossOrigin",slug:"crossorigin",normalizedTitle:"@crossorigin",charIndex:49},{level:3,title:"httpclient",slug:"httpclient",normalizedTitle:"httpclient",charIndex:103},{level:3,title:"网关",slug:"网关",normalizedTitle:"网关",charIndex:118}],headersStr:"什么是跨域？ 常见的三种解决方式 @CrossOrigin httpclient 网关",content:"# 什么是跨域？\n\n本质上就是浏览器对Ajax请求的一种限制\n\n\n# 常见的三种解决方式\n\n\n# @CrossOrigin\n\n在Controller上添加@CrossOrigin注解，允许跨域访问\n\n\n# httpclient\n\n\n# 网关",normalizedContent:"# 什么是跨域？\n\n本质上就是浏览器对ajax请求的一种限制\n\n\n# 常见的三种解决方式\n\n\n# @crossorigin\n\n在controller上添加@crossorigin注解，允许跨域访问\n\n\n# httpclient\n\n\n# 网关",charsets:{cjk:!0}},{title:"接收map集合数据",frontmatter:{title:"接收map集合数据",date:"2022-02-15T19:07:58.000Z",permalink:"/pages/a0d2c8/",categories:["关于","想起来了"],tags:[null]},regularPath:"/50.%E5%85%B3%E4%BA%8E/25.%E6%83%B3%E8%B5%B7%E6%9D%A5%E4%BA%86/40.%E6%8E%A5%E6%94%B6map%E9%9B%86%E5%90%88%E6%95%B0%E6%8D%AE.html",relativePath:"50.关于/25.想起来了/40.接收map集合数据.md",key:"v-3d8d6032",path:"/pages/a0d2c8/",headers:[{level:2,title:"接收map集合数据",slug:"接收map集合数据",normalizedTitle:"接收map集合数据",charIndex:2}],headersStr:"接收map集合数据",content:"# 接收map集合数据\n\n多种方式\n\n1.使用对象映射，确保每一个字段与map中的key相对应\n\n2.若没有一一对应，则可以使用原始方式 HttpServletRequest 的getParameterMap()，然后再处理，若需要封装为对象使用，这时候使用json工具将集合转为json字符串，再将json字符串转换为对象\n\n示例：\n\npublic R saveHospital(HttpServletRequest request){\n    //1.获取医院系统传递过来的map集合数据\n    //Map<String, String[]> ---\x3e Map<String, Object>\n    Map<String, String[]> parameterMap = request.getParameterMap();\n    //对于数组string[]数组后期不好处理，把就收到的map的value类型转换为Object\n    Map<String, Object> paramMapString = HttpRequestHelper.switchMap(parameterMap);\n    return R.ok();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n编写一个HttpRequestHelper工具类\n\npublic class HttpRequestHelper {\n    //将Map<String, String[]> ---\x3e Map<String, Object>\n    public static Map<String, Object> switchMap(Map<String, String[]> paramMap) {\n        Map<String, Object> resultMap = new HashMap<>();\n        //遍历出\n        for (Map.Entry<String, String[]> param : paramMap.entrySet()) {\n            resultMap.put(param.getKey(), param.getValue()[0]);\n        }\n        return resultMap;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\npublic static Map<String, Object> switchMap(Map<String, String[]> paramMap) {\n    Map<String, Object> resultMap = new HashMap<>();\n    Set<Map.Entry<String, String[]>> entries = paramMap.entrySet();\n    entries.forEach(entry -> resultMap.put(entry.getKey(),entry.getValue()[0]));\n    return resultMap;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n使用fastjson工具将集合转换为对象\n\npublic void saveHospital(Map<String, Object> paramMapString) {\n    //save方法传递的对象，需要把map转换为 Hospital 对象\n    //使用json工具  fastjson gson jackson\n    //1.将map集合转换为json字符串\n    String jsonString = JSONObject.toJSONString(paramMapString);\n    //2.再将json字符串转换为对象\n    Hospital hospital = JSONObject.parseObject(jsonString, Hospital.class);\n\n    //save方法参数是Hospital带值对象\n    hospitalRepository.save(hospital);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",normalizedContent:"# 接收map集合数据\n\n多种方式\n\n1.使用对象映射，确保每一个字段与map中的key相对应\n\n2.若没有一一对应，则可以使用原始方式 httpservletrequest 的getparametermap()，然后再处理，若需要封装为对象使用，这时候使用json工具将集合转为json字符串，再将json字符串转换为对象\n\n示例：\n\npublic r savehospital(httpservletrequest request){\n    //1.获取医院系统传递过来的map集合数据\n    //map<string, string[]> ---\x3e map<string, object>\n    map<string, string[]> parametermap = request.getparametermap();\n    //对于数组string[]数组后期不好处理，把就收到的map的value类型转换为object\n    map<string, object> parammapstring = httprequesthelper.switchmap(parametermap);\n    return r.ok();\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\n\n编写一个httprequesthelper工具类\n\npublic class httprequesthelper {\n    //将map<string, string[]> ---\x3e map<string, object>\n    public static map<string, object> switchmap(map<string, string[]> parammap) {\n        map<string, object> resultmap = new hashmap<>();\n        //遍历出\n        for (map.entry<string, string[]> param : parammap.entryset()) {\n            resultmap.put(param.getkey(), param.getvalue()[0]);\n        }\n        return resultmap;\n    }\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n\n\npublic static map<string, object> switchmap(map<string, string[]> parammap) {\n    map<string, object> resultmap = new hashmap<>();\n    set<map.entry<string, string[]>> entries = parammap.entryset();\n    entries.foreach(entry -> resultmap.put(entry.getkey(),entry.getvalue()[0]));\n    return resultmap;\n}\n\n\n1\n2\n3\n4\n5\n6\n\n\n使用fastjson工具将集合转换为对象\n\npublic void savehospital(map<string, object> parammapstring) {\n    //save方法传递的对象，需要把map转换为 hospital 对象\n    //使用json工具  fastjson gson jackson\n    //1.将map集合转换为json字符串\n    string jsonstring = jsonobject.tojsonstring(parammapstring);\n    //2.再将json字符串转换为对象\n    hospital hospital = jsonobject.parseobject(jsonstring, hospital.class);\n\n    //save方法参数是hospital带值对象\n    hospitalrepository.save(hospital);\n}\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n",charsets:{cjk:!0}},{title:"博客文章",frontmatter:{archivesPage:!0,title:"博客文章",permalink:"/blog/",article:!1},regularPath:"/@pages/archivesPage.html",relativePath:"@pages/archivesPage.md",key:"v-ca31da4e",path:"/blog/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"分类",frontmatter:{categoriesPage:!0,title:"分类",permalink:"/categories/",article:!1},regularPath:"/@pages/categoriesPage.html",relativePath:"@pages/categoriesPage.md",key:"v-457f4439",path:"/categories/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"标签",frontmatter:{tagsPage:!0,title:"标签",permalink:"/tags/",article:!1},regularPath:"/@pages/tagsPage.html",relativePath:"@pages/tagsPage.md",key:"v-2a230c59",path:"/tags/",headersStr:null,content:"",normalizedContent:"",charsets:{}},{title:"Home",frontmatter:{home:!0,heroText:"viki`s blog",tagline:"我们为什么触摸不到这苍穹上的点点星光，莫非人类可以通过死亡之路，去往那一片璀璨繁星，这么说来暮年的安详离世，该是朝着星海的徜徉漫步吧 --- 《至爱梵高·星空之谜》",actionText:"🎨🎨🎨",actionLink:"/pages/659d0f/",bannerBg:"/img/skyfly.jpg",features:[{title:"知识",details:"不积跬步无以至千里"},{title:"技术",details:"文章，经验，技巧"},{title:"设计",details:"VR，AR，XR"}],postList:"detailed"},regularPath:"/",relativePath:"index.md",key:"v-53fe3f05",path:"/",headersStr:null,content:"",normalizedContent:"",charsets:{}}],themeConfig:{pageButton:!1,nav:[{text:"首页",link:"/"},{text:"前端",items:[{text:"语法框架",items:[{text:"HTML",link:"/pages/69d591/"},{text:"CSS",link:"/pages/862342/"},{text:"JavaScript",link:"/pages/0e295d/"},{text:"ES6",link:"/pages/dbd4b7/"},{text:"Vue",link:"/pages/ec02d8/"},{text:"Element-UI",link:"/pages/1257a3/"},{text:"Vue-CLI",link:"https://cli.vuejs.org/zh/"}]},{text:"部署构建",items:[{text:"npm",link:"/pages/862342/"},{text:"yarn",link:"/pages/e743fe/"},{text:"webpack",link:"/pages/7038b1/"}]}]},{text:"Java",items:[{text:"Java基础",link:"/"},{text:"Java集合",link:"/"},{text:"Java线程",link:"/"},{text:"JUC",link:"/"},{text:"Java8新特性",link:"/pages/e4d55d/"},{text:"Java11新特性",link:"/"}]},{text:"Go",items:[{text:"Go docs",link:"https://go.dev/doc/"},{text:"Go Easystart",link:"https://www.topgoer.com/"},{text:"Dokcer docs",link:"https://docs.docker.com/"},{text:"kubernetes docs",link:"https://kubernetes.io/zh/docs/home/"}]},{text:"数据库",items:[{text:"MySQL",link:"/pages/659d0f/"},{text:"Redis",link:"/pages/7e8569/"},{text:"MongoDB",link:"/pages/7c9b4b/"},{text:"ElasticSearch",link:"/"}]},{text:"算法",items:[{text:"数据结构",link:"/"},{text:"排序算法",link:"/"},{text:"查找算法",link:"/"}]},{text:"Spring&框架",items:[{text:"Spring系列",items:[{text:"Spring",link:"/pages/a832bb/"},{text:"Spring MVC",link:"/pages/35de30/"},{text:"Spring Boot",link:"/pages/d803de/"},{text:"Spring Native",link:"/pages/d803de/"}]},{text:"Spring Cloud",items:[{text:"Spring GateWay",link:"/"},{text:"Spring Eureka",link:"/"},{text:"Spring Nacos",link:"/"},{text:"Spring Feign",link:"/"},{text:"Spring Hystrix",link:"/"},{text:"Spring Sentinel",link:"/"}]},{text:"ORM框架",items:[{text:"MyBatis",link:"/pages/5c205b/"},{text:"MyBatis-Plus",link:"/pages/4e88d5/"}]},{text:"常用框架",items:[{text:"RabbitMQ",link:"/"},{text:"EasyExcel",link:"/pages/ec2247/"}]}]},{text:"工具",items:[{text:"构建部署",items:[{text:"Git",link:"/pages/4a375c/"},{text:"Maven",link:"/pages/374a76/"},{text:"Linux",link:"/pages/711d35/"},{text:"Docker",link:"/pages/118379/"},{text:"Nginx",link:"/"}]},{text:"开发调试",items:[{text:"IDEA",link:"/pages/d1300e/"},{text:"VScode",link:"/pages/5451e7/"},{text:"Swagger2",link:"/pages/155967/"},{text:"Apifox",link:"/"},{text:"Postman",link:"/"}]},{text:"网络&其他",items:[{text:"计算机网络",link:"/pages/78eaba/"},{text:"设计模式",link:"/pages/c027ac/"}]}]},{text:"设计",link:"/"},{text:"关于",items:[{text:"好用利器",link:"/pages/46344d/"},{text:"细读文章",link:"/pages/2c260b/"},{text:"看一本书",link:"/"},{text:"日常发呆",link:"/"},{text:"联系我",link:"/"}]}],sidebarDepth:2,logo:"/img/logo2.jpg",repo:"https://github.com/vikicoco",searchMaxSuggestions:10,lastUpdated:"上次更新",sidebar:{"/11.前端/":[{title:"HTML",collapsable:!0,children:[["10.HTML/10.html快速上手.md","html快速上手","/pages/69d591/"]]},{title:"CSS",collapsable:!0,children:[["15.CSS/10.CSS快速上手.md","CSS基础","/pages/862342/"],["15.CSS/20.CSS常用效果.md","CSS常用效果","/pages/380bfa/"]]},{title:"JavaScript",collapsable:!0,children:[["20.JavaScript/10.js快速上手.md","js快速上手","/pages/0e295d/"]]},{title:"ES6",collapsable:!0,children:[["23.ES6/10.ES6快速上手.md","ES6快速上手","/pages/dbd4b7/"]]},{title:"Vue",collapsable:!0,children:[["25.Vue/10.Vue.md","Vue","/pages/9dedc8/"],["25.Vue/20.Vue3.md","Vue3","/pages/ec02d8/"]]},{title:"Element-UI",collapsable:!0,children:[["30.Element-UI/10.快速上手.md","快速上手","/pages/1257a3/"]]},{title:"npm",collapsable:!0,children:[]},{title:"yarn",collapsable:!0,children:[["40.yarn/10.yarn.md","yarn","/pages/e743fe/"]]},{title:"webpack",collapsable:!0,children:[["45.webpack/10.webpack快速上手.md","10webpack快速上手","/pages/7038b1/"]]}],catalogue:{},"/20.Java/":[{title:"Java基础",collapsable:!0,children:[["10.Java基础/10.异常处理.md","异常处理","/pages/b9d355/"]]},{title:"Java集合",collapsable:!0,children:[]},{title:"Java线程",collapsable:!0,children:[["30.Java线程/10.前置知识.md","前置知识","/pages/e422a2/"]]},{title:"Java8新特性",collapsable:!0,children:[["40.Java8新特性/10.lambda表达式.md","lambda表达式","/pages/e4d55d/"],["40.Java8新特性/15.lambda演化之旅.md","lambda演化之旅","/pages/23a0a3/"],["40.Java8新特性/20.常见函数式接口.md","常见函数式接口","/pages/fc50b7/"],["40.Java8新特性/25.StreamAPI.md","Stream API","/pages/01a53c/"]]},{title:"Java11新特性",collapsable:!0,children:[]},{title:"Java源码记录",collapsable:!0,children:[["60.Java源码记录/10.字符串相关.md","字符串相关","/pages/b19c02/"],["60.Java源码记录/20.Stream.md","Stream","/pages/ff7d53/"]]}],"/23.Go/":[["10.GoHW.md","GoHW","/pages/c1c484/"]],"/25.数据库/":[{title:"MySQL",collapsable:!0,children:[["10.MySQL/10.MySQL基础.md","MySQL基础","/pages/fd06c0/"],["10.MySQL/20.MySQL进阶.md","MySQL进阶","/pages/659d0f/"],["10.MySQL/30.索引失效.md","索引失效","/pages/454bc7/"],["10.MySQL/40.数据库设计规范.md","数据库设计规范","/pages/2b5d14/"],["10.MySQL/50.MySQL事务.md","MySQL事务","/pages/79ebd4/"]]},{title:"Redis",collapsable:!0,children:[["20.Redis/10.redis安装启动.md","redis安装启动","/pages/7e8569/"],["20.Redis/20.redis知识点.md","redis知识点","/pages/77a99b/"],["20.Redis/30.redis整合Springboot.md","redis整合Springboot","/pages/179208/"],["20.Redis/40.redis常用命令.md","redis常用命令","/pages/2fef79/"]]},{title:"MongoDB",collapsable:!0,children:[["30.MongoDB/10.MongoDB.md","MongoDB","/pages/7c9b4b/"],["30.MongoDB/20.MongoDB整合SpringBoot.md","MongoDB整合SpringBoot","/pages/3bb24f/"],["30.MongoDB/30.MongoDB应用场景.md","MongoDB应用场景","/pages/a34c22/"]]}],"/35.Spring系列/":[{title:"Spring",collapsable:!0,children:[["10.Spring/10.Spring笔记.md","Spring笔记","/pages/a832bb/"],["10.Spring/20.常用注解.md","常用注解","/pages/1b0d2d/"],["10.Spring/30.早期xml配置.md","早期xml配置","/pages/7b798f/"],["10.Spring/40.源码分析.md","源码分析","/pages/a9e167/"],["10.Spring/50.源码备注.md","源码备注","/pages/8a16ee/"]]},{title:"SpringMVC",collapsable:!0,children:[["20.SpringMVC/10.SpringMVC笔记.md","SpringMVC笔记","/pages/35de30/"],["20.SpringMVC/20.常用注解.md","常用注解","/pages/89cf77/"]]},{title:"SpringBoot",collapsable:!0,children:[{title:"assets",collapsable:!0,children:[]},["30.SpringBoot/20.Springboot基础配置.md","Springboot基础配置","/pages/87a76e/"],["30.SpringBoot/30.常用注解.md","常用注解","/pages/5eb237/"],["30.SpringBoot/40.源码分析.md","源码分析","/pages/e37732/"]]},{title:"源码速查",collapsable:!0,children:[["40.源码速查/10.Transactiona事务注解.md","Transactiona事务注解","/pages/8e5ec8/"]]}],"/36.SpringCloud/":[{title:"Nacos",collapsable:!0,children:[]}],"/37.ORM框架/":[{title:"Mybatis",collapsable:!0,children:[["10.Mybatis/10.JDBC&SQL注入.md","JDBC&SQL注入","/pages/5c205b/"]]},{title:"Mybatis-Plus",collapsable:!0,children:[["15.Mybatis-Plus/10.MyBatis-Plus常用操作.md","MyBatis-Plus常用操作","/pages/4e88d5/"]]}],"/38.其他框架/":[{title:"文件处理",collapsable:!0,children:[["10.文件处理/10.EasyExcel.md","EasyExcel","/pages/ec2247/"]]}],"/40.工具-构建部署/":[{title:"Git",collapsable:!0,children:[["10.Git/10.git多账号ssh免密登录.md","git多账号ssh免密登录","/pages/4a375c/"]]},{title:"Maven",collapsable:!0,children:[["20.Maven/10.Maven常用总结.md","Maven常用总结","/pages/374a76/"]]},{title:"Linux",collapsable:!0,children:[["30.Linux/10.CentOS7相关配置.md","CentOS7相关配置","/pages/711d35/"],["30.Linux/15.环境变量.md","环境变量","/pages/87e646/"],["30.Linux/20.常用命令.md","常用命令","/pages/80ad7f/"],["30.Linux/30.Vim.md","Vim","/pages/b78243/"]]},{title:"Docker",collapsable:!0,children:[["40.Docker/10.Docker安装使用.md","Docker安装使用","/pages/118379/"],["40.Docker/20.Docker开发环境搭建.md","Docker开发环境搭建","/pages/368a0b/"],["40.Docker/50.Docker参考.md","Docker参考","/pages/3510a2/"]]},{title:"Nginx",collapsable:!0,children:[]}],"/42.工具-开发调试/":[{title:"IDEA",collapsable:!0,children:[["10.IDEA/10.常用快捷键.md","常用快捷键","/pages/d1300e/"],["10.IDEA/20.idea插件市场.md","idea插件市场","/pages/70fee8/"]]},{title:"VScode",collapsable:!0,children:[["20.VScode/10.VScode常用操作.md","VScode常用操作","/pages/5451e7/"]]},{title:"Swagger2",collapsable:!0,children:[["30.Swagger2/10.快速上手.md","快速上手","/pages/155967/"]]},{title:"Apifox",collapsable:!0,children:[]},{title:"Postman",collapsable:!0,children:[]}],"/43.工具-网络&其他/":[{title:"计算机网络",collapsable:!0,children:[["10.计算机网络/10.计算机网络.md","计算机网络","/pages/78eaba/"]]},{title:"HTTP&HTTPS",collapsable:!0,children:[]},{title:"设计模式",collapsable:!0,children:[["30.设计模式/10.设计模式总结.md","设计模式总结","/pages/c027ac/"]]}],"/50.关于/":[{title:"经验之谈",collapsable:!0,children:[]},{title:"关于本站",collapsable:!0,children:[]},{title:"好用利器",collapsable:!0,children:[["10.好用利器/10.你真的会搜索吗？.md","你真的会搜索吗？","/pages/46344d/"],["10.好用利器/20.Typora.md","Typora","/pages/d744a1/"],["10.好用利器/30.Markdown语法.md","Markdown语法","/pages/d3fb30/"]]},{title:"细读文章",collapsable:!0,children:[["20.细读文章/10.细读文章①.md","好文归档","/pages/2c260b/"],["20.细读文章/20.关于微服务②.md","关于微服务②","/pages/11a8fe/"],["20.细读文章/30.Go未来所趋③.md","Go未来所趋③","/pages/0e2db5/"]]},{title:"想起来了",collapsable:!0,children:[["25.想起来了/10.随便写写.md","随便写写","/pages/54eb0a/"],["25.想起来了/20.小问题记录一下.md","小问题记录一下","/pages/715be6/"],["25.想起来了/30.如何解决跨域问题.md","如何解决跨域问题","/pages/e78cf8/"],["25.想起来了/40.接收map集合数据.md","接收map集合数据","/pages/a0d2c8/"]]},{title:"看一本书",collapsable:!0,children:[]},{title:"日常发呆",collapsable:!0,children:[]},{title:"联系我",collapsable:!0,children:[]}]},updateBar:{showToArticle:!1,moreArticle:"/archives"},titleBadge:!0,titleBadgeIcons:["/img/artical64.png"],category:!0,tag:!0,author:{name:"viki"},social:{icons:[{iconClass:"icon-youjian",title:"发邮件",link:"/"},{iconClass:"icon-github",title:"GitHub",link:"https://github.com/vikicoco"},{iconClass:"icon-erji",title:"听音乐",link:"https://music.163.com/#/discover/playlist"}]},footer:{createYear:2021,copyrightInfo:"viki | MIT License"},htmlModules:{pageB:'\n  <div class="wwads-cn wwads-horizontal pageB" data-id="136" style="width:100%;max-height:80px;min-height:auto;"></div>\n  <style>\n    .pageB img{width:80px!important;}\n    .wwads-horizontal .wwads-text, .wwads-content .wwads-text{line-height:1;}\n  </style>\n  ',windowRB:'\n    <div class="wwads-cn wwads-vertical windowRB" data-id="136" style="max-width:160px;\n    min-width: auto;min-height:auto;"></div>\n    <style>\n      .windowRB{ padding: 0;}\n      .windowRB .wwads-img{margin-top: 10px;}\n      .windowRB .wwads-content{margin: 0 10px 10px 10px;}\n      .custom-html-window-rb .close-but{\n        display: none;\n      }\n    </style>\n  '}}},wt=t(207),kt=t.n(wt),St=(t(149),t(208),t(104),t(218)),Et=t(219),_t=(t(370),t(150),t(44));var Ct={computed:{$filterPosts:function(){return this.$site.pages.filter((function(n){var e=n.frontmatter,t=e.pageComponent,r=e.article,a=e.home;return!(t||!1===r||!0===a)}))},$sortPosts:function(){return(n=this.$filterPosts).sort((function(n,e){var t=n.frontmatter.sticky,r=e.frontmatter.sticky;return t&&r?t==r?Object(_t.a)(n,e):t-r:t&&!r?-1:!t&&r?1:Object(_t.a)(n,e)})),n;var n},$sortPostsByDate:function(){return(n=this.$filterPosts).sort((function(n,e){return Object(_t.a)(n,e)})),n;var n},$groupPosts:function(){return function(n){for(var e={},t={},r=function(r,a){var o=n[r].frontmatter,i=o.categories,s=o.tags;"array"===Object(_t.n)(i)&&i.forEach((function(t){t&&(e[t]||(e[t]=[]),e[t].push(n[r]))})),"array"===Object(_t.n)(s)&&s.forEach((function(e){e&&(t[e]||(t[e]=[]),t[e].push(n[r]))}))},a=0,o=n.length;a<o;a++)r(a);return{categories:e,tags:t}}(this.$sortPosts)},$categoriesAndTags:function(){return function(n){var e=[],t=[];for(var r in n.categories)e.push({key:r,length:n.categories[r].length});for(var a in n.tags)t.push({key:a,length:n.tags[a].length});return{categories:e,tags:t}}(this.$groupPosts)}}};a.default.component(St.default),a.default.component(Et.default);function Tt(n){return n.toString().padStart(2,"0")}t(374);a.default.component("Badge",(function(){return Promise.all([t.e(0),t.e(11)]).then(t.bind(null,590))})),a.default.component("CodeGroup",(function(){return Promise.resolve().then(t.bind(null,219))})),a.default.component("CodeBlock",(function(){return Promise.resolve().then(t.bind(null,218))}));t(375);var jt=t(49),At=(t(231),t(232),{name:"Meting",props:{auto:{required:!1,type:String,default:""},server:{required:!1,type:String,default:""},type:{required:!1,type:String,default:""},mid:{required:!1,type:String,default:""},additionalAudios:{required:!1,type:Array,default:function(){return[]}},fixed:{required:!1,type:Boolean,default:!1},mini:{required:!1,type:Boolean,default:null},autoplay:{required:!1,type:Boolean,default:!1},theme:{required:!1,type:String,default:"#b7daff"},loop:{required:!1,type:String,default:"all"},order:{required:!1,type:String,default:"list"},preload:{required:!1,type:String,default:"auto"},volume:{required:!1,type:Number,default:.7},customAudioType:{required:!1,type:Object,default:void 0},mutex:{required:!1,type:Boolean,default:!0},lrcType:{required:!1,type:Number,default:0},listFolded:{required:!1,type:Boolean,default:!1},listMaxHeight:{required:!1,type:Number,default:250},storageName:{required:!1,type:String,default:"vuepress-plugin-meting"}},data:function(){return{metingApi:"https://api.i-meto.com/meting/api",audio:[]}},mounted:function(){var n,e=this;if(this.auto){var t=this.parse_link(this.auto);n=Object(jt.a)(Object(jt.a)({},t),{},{r:Math.random()})}else n={server:this.server,type:this.type,id:this.mid,r:Math.random()};var r=this.metingApi,a=[];Object.keys(n).forEach((function(e){return a.push(e+"="+n[e])})),r+="?"+a.join("&"),fetch(r,{headers:{referer:null}}).then((function(n){return n.json()})).then((function(n){var t=n.map((function(n){return{name:n.name||n.title||"Audio name",artist:n.artist||n.author||"Audio artist",url:n.url,cover:n.cover||n.pic,lrc:n.lrc||n.lyric||"",type:n.type||"auto"}}));e.audio=t.concat(e.additionalAudios)}))},methods:{parse_link:function(n){for(var e=0,t=[["music.163.com.*song.*id=(\\d+)","netease","song"],["music.163.com.*album.*id=(\\d+)","netease","album"],["music.163.com.*artist.*id=(\\d+)","netease","artist"],["music.163.com.*playlist.*id=(\\d+)","netease","playlist"],["music.163.com.*discover/toplist.*id=(\\d+)","netease","playlist"],["y.qq.com.*song/(\\w+).html","tencent","song"],["y.qq.com.*album/(\\w+).html","tencent","album"],["y.qq.com.*singer/(\\w+).html","tencent","artist"],["y.qq.com.*playsquare/(\\w+).html","tencent","playlist"],["y.qq.com.*playlist/(\\w+).html","tencent","playlist"],["xiami.com.*song/(\\w+)","xiami","song"],["xiami.com.*album/(\\w+)","xiami","album"],["xiami.com.*artist/(\\w+)","xiami","artist"],["xiami.com.*collect/(\\w+)","xiami","playlist"]];e<t.length;e++){var r=t[e],a=new RegExp(r[0]).exec(n);if(null!==a)return{server:r[1],type:r[2],id:a[1]}}return console.error("无法解析的链接: ".concat(n,"，请检查链接是否书写正确")),{server:"",type:"",id:""}}}}),Mt=Object(vt.a)(At,(function(){var n=this,e=n.$createElement;return(n._self._c||e)("APlayer",{attrs:{audio:n.audio,fixed:n.fixed,mini:n.mini,autoplay:n.autoplay,theme:n.theme,loop:n.loop,order:n.order,preload:n.preload,volume:n.volume,"custom-audio-type":n.customAudioType,mutex:n.mutex,"lrc-type":n.lrcType,"list-folded":n.listFolded,"list-max-height":n.listMaxHeight,"storage-name":n.storageName}})}),[],!1,null,null,null).exports,It={name:"MetingGlobal",data:function(){return Object(jt.a)(Object(jt.a)({},{auto:"",server:"netease",type:"playlist",mid:"2330265564"}),{additionalAudios:[],mini:null,autoplay:!1,theme:"#b7daff",loop:"all",order:"random",preload:"auto",volume:.2,mutex:!0,lrcType:0,listFolded:!1,listMaxHeight:250,storageName:"vuepress-plugin-meting"})},mounted:function(){/Android|webOS|iPhone|iPod|BlackBerry/i.test(navigator.userAgent)&&this.aplayer_fixed_mobile_switch()},methods:{aplayer_fixed_mobile_switch:function(){var n=document.getElementById("aplayer-fixed");if(null!==n){n.querySelector(".aplayer-body");var e=n.querySelector(".aplayer-miniswitcher"),t=(n.querySelector(".aplayer-lrc"),!1);r(),e.onclick=function(){t?r():t=!0}}function r(){t=!1}}}},Ot=Object(vt.a)(It,(function(){var n=this,e=n.$createElement;return(n._self._c||e)("Meting",{attrs:{id:"aplayer-fixed",auto:n.auto,server:n.server,type:n.type,mid:n.mid,"additional-audios":n.additionalAudios,fixed:!0,mini:n.mini,autoplay:n.autoplay,theme:n.theme,loop:n.loop,order:n.order,preload:n.preload,volume:n.volume,mutex:n.mutex,"lrc-type":n.lrcType,"list-folded":n.listFolded,"list-max-height":n.listMaxHeight,"storage-name":n.storageName}})}),[],!1,null,null,null).exports,Pt=[kt.a,function(n){var e=n.Vue,t=(n.options,n.router,n.siteData);t.pages.map((function(n){var e=n.frontmatter,r=e.date,a=e.author;"string"==typeof r&&"Z"===r.charAt(r.length-1)&&(n.frontmatter.date=function(n){n instanceof Date||(n=new Date(n));return"".concat(n.getUTCFullYear(),"-").concat(Tt(n.getUTCMonth()+1),"-").concat(Tt(n.getUTCDate())," ").concat(Tt(n.getUTCHours()),":").concat(Tt(n.getUTCMinutes()),":").concat(Tt(n.getUTCSeconds()))}(r)),a?n.author=a:t.themeConfig.author&&(n.author=t.themeConfig.author)})),e.mixin(Ct)},{},function(n){n.Vue.mixin({computed:{$dataBlock:function(){return this.$options.__data__block__}}})},{},{},function(n){var e=n.Vue;"undefined"!=typeof window&&(localStorage.setItem("aplayer-setting","[]"),e.use(t(378).default,{defaultCover:"https://github.com/SigureMo.png"})),e.component("Meting",Mt),e.component("MetingGlobal",Ot)}],Rt=["MetingGlobal"];t(141);t(211);function Bt(n,e){return(Bt=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}t(212),t(213);function qt(n){return(qt=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)})(n)}function zt(n,e){if(e&&("object"===Yn(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n)}function Lt(n){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(n){return!1}}();return function(){var t,r=qt(n);if(e){var a=qt(this).constructor;t=Reflect.construct(r,arguments,a)}else t=r.apply(this,arguments);return zt(this,t)}}var Dt=function(n){!function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),Object.defineProperty(n,"prototype",{writable:!1}),e&&Bt(n,e)}(t,n);var e=Lt(t);function t(){return Re(this,t),e.apply(this,arguments)}return qe(t)}(function(){function n(){Re(this,n),this.store=new a.default({data:{state:{}}})}return qe(n,[{key:"$get",value:function(n){return this.store.state[n]}},{key:"$set",value:function(n,e){a.default.set(this.store.state,n,e)}},{key:"$emit",value:function(){var n;(n=this.store).$emit.apply(n,arguments)}},{key:"$on",value:function(){var n;(n=this.store).$on.apply(n,arguments)}}]),n}());Object.assign(Dt.prototype,{getPageAsyncComponent:me,getLayoutAsyncComponent:fe,getAsyncComponent:ge,getVueComponent:he});var Nt={install:function(n){var e=new Dt;n.$vuepress=e,n.prototype.$vuepress=e}};function Ft(n){n.beforeEach((function(e,t,r){if(Vt(n,e.path))r();else if(/(\/|\.html)$/.test(e.path))if(/\/$/.test(e.path)){var a=e.path.replace(/\/$/,"")+".html";Vt(n,a)?r(a):r()}else r();else{var o=e.path+"/",i=e.path+".html";Vt(n,i)?r(i):Vt(n,o)?r(o):r()}}))}function Vt(n,e){var t=e.toLowerCase();return n.options.routes.some((function(n){return n.path.toLowerCase()===t}))}var $t={props:{pageKey:String,slotKey:{type:String,default:"default"}},render:function(n){var e=this.pageKey||this.$parent.$page.key;return ye("pageKey",e),a.default.component(e)||a.default.component(e,me(e)),a.default.component(e)?n(e):n("")}},Ut={functional:!0,props:{slotKey:String,required:!0},render:function(n,e){var t=e.props,r=e.slots;return n("div",{class:["content__".concat(t.slotKey)]},r()[t.slotKey])}},Ht={computed:{openInNewWindowTitle:function(){return this.$themeLocaleConfig.openNewWindowText||"(opens new window)"}}},Jt=(t(380),t(381),Object(vt.a)(Ht,(function(){var n=this.$createElement,e=this._self._c||n;return e("span",[e("svg",{staticClass:"icon outbound",attrs:{xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"}},[e("path",{attrs:{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}}),this._v(" "),e("polygon",{attrs:{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"}})]),this._v(" "),e("span",{staticClass:"sr-only"},[this._v(this._s(this.openInNewWindowTitle))])])}),[],!1,null,null,null).exports);function Wt(){return(Wt=Object(r.a)(regeneratorRuntime.mark((function n(e){var t,r,o,i;return regeneratorRuntime.wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return t="undefined"!=typeof window&&window.__VUEPRESS_ROUTER_BASE__?window.__VUEPRESS_ROUTER_BASE__:xt.routerBase||xt.base,Ft(r=new Qn({base:t,mode:"history",fallback:!1,routes:bt,scrollBehavior:function(n,e,t){return t||(n.hash?!a.default.$vuepress.$get("disableScrollBehavior")&&{selector:decodeURIComponent(n.hash)}:{x:0,y:0})}})),o={},n.prev=4,n.next=7,Promise.all(Pt.filter((function(n){return"function"==typeof n})).map((function(n){return n({Vue:a.default,options:o,router:r,siteData:xt,isServer:e})})));case 7:n.next=12;break;case 9:n.prev=9,n.t0=n.catch(4),console.error(n.t0);case 12:return i=new a.default(Object.assign(o,{router:r,render:function(n){return n("div",{attrs:{id:"app"}},[n("RouterView",{ref:"layout"}),n("div",{class:"global-ui"},Rt.map((function(e){return n(e)})))])}})),n.abrupt("return",{app:i,router:r});case 14:case"end":return n.stop()}}),n,null,[[4,9]])})))).apply(this,arguments)}a.default.config.productionTip=!1,a.default.use(Qn),a.default.use(Nt),a.default.mixin(function(n,e){var t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:a.default;Kn(e),t.$vuepress.$set("siteData",e);var r=n(t.$vuepress.$get("siteData")),o=new r,i=Object.getOwnPropertyDescriptors(Object.getPrototypeOf(o)),s={};return Object.keys(i).reduce((function(n,e){return e.startsWith("$")&&(n[e]=i[e].get),n}),s),{computed:s}}((function(n){return function(){function e(){Re(this,e)}return qe(e,[{key:"setPage",value:function(n){this.__page=n}},{key:"$site",get:function(){return n}},{key:"$themeConfig",get:function(){return this.$site.themeConfig}},{key:"$frontmatter",get:function(){return this.$page.frontmatter}},{key:"$localeConfig",get:function(){var n,e,t=this.$site.locales,r=void 0===t?{}:t;for(var a in r)"/"===a?e=r[a]:0===this.$page.path.indexOf(a)&&(n=r[a]);return n||e||{}}},{key:"$siteTitle",get:function(){return this.$localeConfig.title||this.$site.title||""}},{key:"$canonicalUrl",get:function(){var n=this.$page.frontmatter.canonicalUrl;return"string"==typeof n&&n}},{key:"$title",get:function(){var n=this.$page,e=this.$page.frontmatter.metaTitle;if("string"==typeof e)return e;var t=this.$siteTitle,r=n.frontmatter.home?null:n.frontmatter.title||n.title;return t?r?r+" | "+t:t:r||"VuePress"}},{key:"$description",get:function(){var n=function(n){if(n){var e=n.filter((function(n){return"description"===n.name}))[0];if(e)return e.content}}(this.$page.frontmatter.meta);return n||(this.$page.frontmatter.description||this.$localeConfig.description||this.$site.description||"")}},{key:"$lang",get:function(){return this.$page.frontmatter.lang||this.$localeConfig.lang||"en-US"}},{key:"$localePath",get:function(){return this.$localeConfig.path||"/"}},{key:"$themeLocaleConfig",get:function(){return(this.$site.themeConfig.locales||{})[this.$localePath]||{}}},{key:"$page",get:function(){return this.__page?this.__page:function(n,e){for(var t=0;t<n.length;t++){var r=n[t];if(r.path.toLowerCase()===e.toLowerCase())return r}return{path:"",frontmatter:{}}}(this.$site.pages,this.$route.path)}}]),e}()}),xt)),a.default.component("Content",$t),a.default.component("ContentSlotsDistributor",Ut),a.default.component("OutboundLink",Jt),a.default.component("ClientOnly",{functional:!0,render:function(n,e){var t=e.parent,r=e.children;if(t._isMounted)return r;t.$once("hook:mounted",(function(){t.$forceUpdate()}))}}),a.default.component("Layout",fe("Layout")),a.default.component("NotFound",fe("NotFound")),a.default.prototype.$withBase=function(n){var e=this.$site.base;return"/"===n.charAt(0)?e+n.slice(1):n},window.__VUEPRESS__={version:"1.9.2",hash:""},function(n){return Wt.apply(this,arguments)}(!1).then((function(n){var e=n.app;n.router.onReady((function(){e.$mount("#app")}))}))}]);