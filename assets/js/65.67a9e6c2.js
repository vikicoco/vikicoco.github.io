(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{571:function(t,a,s){"use strict";s.r(a);var e=s(16),c=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tcp-→-transmission-control-protocol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-→-transmission-control-protocol"}},[t._v("#")]),t._v(" TCP → Transmission Control Protocol")]),t._v(" "),s("h2",{attrs:{id:"常用熟知端口号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用熟知端口号"}},[t._v("#")]),t._v(" 常用熟知端口号")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F122897a2-fa1e-49b8-95b5-a0a7ef94f778%2FUntitled.png?table=block&id=b8fd06ab-857f-4af0-82bb-4a4841d79703&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}})]),t._v(" "),s("h1",{attrs:{id:"tcp可靠传输的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp可靠传输的原理"}},[t._v("#")]),t._v(" TCP可靠传输的原理")]),t._v(" "),s("h2",{attrs:{id:"停止等待协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#停止等待协议"}},[t._v("#")]),t._v(" 停止等待协议")]),t._v(" "),s("p",[t._v("A → B 发送一个分组就等待 B 回送确认收到报文，然后再发送下一个分组")]),t._v(" "),s("ul",[s("li",[t._v("超时计时器")]),t._v(" "),s("li",[t._v("超时重传")]),t._v(" "),s("li",[t._v("A 暂时保留已发送分组的副本")]),t._v(" "),s("li",[t._v("分组编号")]),t._v(" "),s("li",[t._v("B→A 确认丢失")]),t._v(" "),s("li",[t._v("B→A 确认迟到")]),t._v(" "),s("li",[t._v("自动重传请求 ARQ （Automatic Repeat reQuest）")])]),t._v(" "),s("p",[t._v("🗣️ 优点：协议实现简单。缺点：信道里利用率低")]),t._v(" "),s("h2",{attrs:{id:"连续arq协议-滑动窗口协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#连续arq协议-滑动窗口协议"}},[t._v("#")]),t._v(" 连续ARQ协议&滑动窗口协议")]),t._v(" "),s("p",[t._v("A → B 发送方连续发送多个分组，接收方接收完这多个分组的最后一个分组后才发送一个确认，解决信道利用率低的问题")]),t._v(" "),s("ul",[s("li",[t._v("发送窗口")]),t._v(" "),s("li",[t._v("累计确认 有优缺点")]),t._v(" "),s("li",[t._v("Go-Back-N → 窗口回退N")])]),t._v(" "),s("p",[t._v("🗣️ 当通信线路不好时，连续ARQ协议可能会带来负面影响")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://www.zhihu.com/question/34003599",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP面向字节流和报文段的关系是什么？"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"tcp首部格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp首部格式"}},[t._v("#")]),t._v(" TCP首部格式")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fda758870-a50e-492d-acba-fee2220ae79d%2FUntitled.png?table=block&id=0792d1a4-fa1c-4e7d-ae21-6720b3296d27&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}}),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("源端口、目的端口")]),t._v("    [各占16位]")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("序号")]),t._v("（报文段序列号）    [占32位]")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("确认号")]),t._v("（若确认号为 N ，则序号 N - 1 为止的所有字节流数据都已经正确收到）    [占32位]")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("数据偏移")]),t._v("（记录首部的长度，TCP报文段的起始位到TCP报文段数据部分的起始位的差值）    [占4位]")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("保留")]),t._v("（为今后使用，目前置0）    [占6位]")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("紧急URGent")]),t._v("（当URG字段为1时，表示紧急指针字段有效，我有紧急数据发送）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("确认ACKonwledgment")]),t._v("（ACK=1时，确认号才有效，连接建立后，ACK必须为1）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("推送PuSH")]),t._v("（交互式通信时即时交付，不必等待缓冲区满）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("复位ReSet")]),t._v("（立即释放连接，或拒绝非法连接）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("同步SYNchronization")]),t._v("（{SYN=1，ACK=0} → 表示一个连接请求报文）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("终止FINis")]),t._v("（FIN=1时，表示传输完毕即将释放连接）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("窗口")]),t._v("（即接收方的接收窗口，接收方让发送方设置其发送窗口大小的依据）")])]),t._v(" "),s("li",[s("p",[t._v("检验和（检验首部和数据部分，和UDP一样加上伪首部）")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("紧急指针")]),t._v("（与URG联合，即时窗口为0也可以发送紧急数据）")])]),t._v(" "),s("li",[s("p",[t._v("选项")]),t._v(" "),s("p",[t._v("（长度可变，首部长度就可以在这里加长）")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("MSS")]),t._v(" → maximum segment size 数据字段最大长度 类比"),s("strong",[t._v("MTU")])]),t._v(" "),s("li",[t._v("窗口扩大\n"),s("ul",[s("li",[s("strong",[t._v("移位值S")])])])]),t._v(" "),s("li",[t._v("时间戳\n"),s("ul",[s("li",[s("strong",[t._v("防止序号绕回")])])])]),t._v(" "),s("li",[s("strong",[t._v("选择确认SACK")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("填充")]),t._v("（将首部填充为4字节的整数倍）")])])]),t._v(" "),s("h1",{attrs:{id:"tcp可靠传输的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp可靠传输的实现"}},[t._v("#")]),t._v(" TCP可靠传输的实现")]),t._v(" "),s("h2",{attrs:{id:"以字节为单位的滑动窗口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#以字节为单位的滑动窗口"}},[t._v("#")]),t._v(" 以字节为单位的滑动窗口")]),t._v(" "),s("ul",[s("li",[t._v("滑动窗口后沿")]),t._v(" "),s("li",[t._v("滑动窗口前沿")]),t._v(" "),s("li",[t._v("发送窗口")]),t._v(" "),s("li",[t._v("接收窗口")]),t._v(" "),s("li",[t._v("可用窗口or有效窗口")]),t._v(" "),s("li",[t._v("确认未收到，A超时重传")]),t._v(" "),s("li",[t._v("缓存空间")]),t._v(" "),s("li",[t._v("序号空间")]),t._v(" "),s("li",[t._v("确认推迟时间0.5s")])]),t._v(" "),s("p",[t._v("窗口值越大，能连续发送的数据就越多！窗口值受网络拥塞影响")]),t._v(" "),s("p",[t._v("发送窗口的位置状态有两种情况，不动，前移，发送窗口不可能向后移动")]),t._v(" "),s("p",[t._v("发送窗口和发送缓存的后沿是重合的")]),t._v(" "),s("p",[t._v("未按序到达的数据现在接收缓存中存放，等其他数据正确到达后再按序交付给上层的应用进程")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F36ae39b5-0bd4-4d42-835c-43db1c65d647%2FUntitled.png?table=block&id=cffc10b6-0f7e-47fa-8318-2252c452410c&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}}),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F729b9a96-fac5-4dbe-9e66-1bbe0e9fcc43%2FUntitled.png?table=block&id=5979d289-7b19-4e9f-9482-ff3a7337d152&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}}),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F70b1db35-ba12-46fe-b567-d27d095ffba5%2FUntitled.png?table=block&id=71a0fa30-5069-49c5-9642-8e57171c5613&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}}),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F0ca54b12-8c6c-435f-8157-739a0b0f8c71%2FUntitled.png?table=block&id=bd461a0a-6fef-46e5-91f7-236ba50a033e&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}}),t._v(" "),s("h2",{attrs:{id:"超时重传的时间选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#超时重传的时间选择"}},[t._v("#")]),t._v(" 超时重传的时间选择")]),t._v(" "),s("p",[t._v("采用自适应算法，第一个采用测量到的RTT值（Round Trip Time），之后每次测量的值与前一次的值进行加权计算得出新的RTTs时间，0≤α<1（当α趋近于0，则更新得慢，反之越快），RFC 6298推荐α时间为0.125")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F3c96acfc-760a-407e-90db-4d22beead12d%2FUntitled.png?table=block&id=2bb3e193-698a-449e-8352-cd1d1134519d&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}})]),t._v(" "),s("p",[t._v("超时重传时间RTO（Response TimeOut）应该略大于RTTs，RFC 6298建议 RTO=RTTs + 4RTTd，第一次的RTTd值取第一次RTT值的一半，之后的按如下公式与前一次的RTTd值计算，β推荐值为0.25")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Fba8c5390-e213-4b10-92c8-2e99b8bda18b%2FUntitled.png?table=block&id=b54e5fab-7ae9-4a23-be44-7a57f5c83135&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}})]),t._v(" "),s("ul",[s("li",[t._v("报文往返时间RTT")]),t._v(" "),s("li",[t._v("加权平均往返时间RTTs → Smoothed （平滑往返时间）")]),t._v(" "),s("li",[t._v("超时重传时间RTO RTO=RTTs + 4RTTd")]),t._v(" "),s("li",[t._v("RTTD是RTT的偏差加权平均值")])]),t._v(" "),s("h3",{attrs:{id:"关于超时重传rto值存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于超时重传rto值存在的问题"}},[t._v("#")]),t._v(" 关于超时重传RTO值存在的问题")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F7a5edbbc-449a-4a4e-86dd-9db220f2b841%2FUntitled.png?table=block&id=c69ce483-cd31-4ac5-a202-c8af6926185b&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}}),t._v(" "),s("p",[t._v("如何确定是对哪一个报文段的确认？")]),t._v(" "),s("p",[t._v("针对这个问题，Karn提出了一个算法，只要报文段发生了重传，就不采用往返时间样本（但RTO值就无法更新），进一步解决的方法是，如果一直发生超时重传则RTO值自增为原来旧的RTO值的两倍，直到不在发生超时重传后根据公式计算新的超时重传时间RTO的值。这样较为稳妥")]),t._v(" "),s("h2",{attrs:{id:"选择确认sack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择确认sack"}},[t._v("#")]),t._v(" 选择确认SACK")]),t._v(" "),s("p",[t._v("书上讲了个寂寞。。。。。")]),t._v(" "),s("ul",[s("li",[t._v("选择确认（Selective ACK）")])]),t._v(" "),s("h1",{attrs:{id:"tcp的流量控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp的流量控制"}},[t._v("#")]),t._v(" TCP的流量控制")]),t._v(" "),s("h2",{attrs:{id:"利用滑动窗口实现流量控制-flow-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用滑动窗口实现流量控制-flow-control"}},[t._v("#")]),t._v(" 利用滑动窗口实现流量控制（Flow Control）")]),t._v(" "),s("p",[t._v("让发送方发送速率不要太快，接收方来得及接收")]),t._v(" "),s("ul",[s("li",[t._v("持续计数器（persistence timer）打破非零窗口通知在链路中丢失的死锁局面")]),t._v(" "),s("li",[t._v("rwnd（receiver window）接收窗口")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2Ff1e7d414-3a0d-4538-8924-75422377532b%2FUntitled.png?table=block&id=c145caac-fc56-4d62-ae29-32476369b9f5&spaceId=ec5804cb-6662-4358-8c08-821d253175ab&width=2000&userId=7120e6c1-34c7-4809-813e-58d2af2bfe46&cache=v2",alt:"img"}})]),t._v(" "),s("h2",{attrs:{id:"tcp的传输效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp的传输效率"}},[t._v("#")]),t._v(" TCP的传输效率")]),t._v(" "),s("p",[t._v("主要是用发送缓存 缓存更多的数据但不超过MSS，接收缓存腾出足够多的缓存空间来增大接收窗口的值，让发送方一次能发送更大的报文段！！！")]),t._v(" "),s("ul",[s("li",[t._v("最大报文段长度MSS")]),t._v(" "),s("li",[t._v("TCP推送（TCP Push）")]),t._v(" "),s("li",[t._v("TCP计时器")]),t._v(" "),s("li",[t._v("Nagle算法（先发送一个收到确认报文后，立即发送发送缓存中的所有数据）")]),t._v(" "),s("li",[t._v("糊涂窗口综合征（silly window syndrome）（接收缓存腾出的效率，确定接收窗口尽量大）")])]),t._v(" "),s("h1",{attrs:{id:"tcp的拥塞控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp的拥塞控制"}},[t._v("#")]),t._v(" TCP的拥塞控制")]),t._v(" "),s("ul",[s("li",[t._v("拥塞（congestion）")]),t._v(" "),s("li",[t._v("轻度拥塞")]),t._v(" "),s("li",[t._v("死锁（deadlock）")]),t._v(" "),s("li",[t._v("开环控制")]),t._v(" "),s("li",[t._v("闭环控制")])]),t._v(" "),s("h2",{attrs:{id:"tcp的拥塞控制方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp的拥塞控制方法"}},[t._v("#")]),t._v(" TCP的拥塞控制方法")]),t._v(" "),s("h3",{attrs:{id:"tcp拥塞控制的算法有四种"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp拥塞控制的算法有四种"}},[t._v("#")]),t._v(" TCP拥塞控制的算法有四种")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("慢开始（slow-start）")]),t._v(" "),s("ul",[s("li",[t._v("SMSS（发送方最大报文段）")]),t._v(" "),s("li",[t._v("慢开始门限（ssthresh）")])]),t._v(" "),s("p",[t._v("先发送一个报文段试探以下网络的拥塞情况，在正常收到接收方的确认后，就把拥塞窗口cwnd增大（前一个cwnd）一倍（乘法），每收到一个新报文段的确认后，就增加最多一个SMSS的数值。")]),t._v(" "),s("p",[t._v("这就是慢开始，一步一步增加拥塞窗口cwnd的值，提升发送速率")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c30e5756-e8de-4474-acd1-db6394bb3d1c/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c30e5756-e8de-4474-acd1-db6394bb3d1c/Untitled.png"}})]),t._v(" "),s("p",[t._v("慢开始的cwnd值要设置一个上限，超过这个上限后就使用其他拥塞控制算法")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/96c0c43e-9ecd-4ae8-a182-b21d09ac2eb8/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/96c0c43e-9ecd-4ae8-a182-b21d09ac2eb8/Untitled.png"}})])]),t._v(" "),s("li",[s("p",[t._v("拥塞避免（congestion avoidance）")]),t._v(" "),s("p",[t._v("每经过一个往返时间RTT就把发送窗口cwnd加1，成线性规律缓慢增长，比慢开始算法增长速率慢得多。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d07b12be-d4a5-4235-b664-453bec45e9a6/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d07b12be-d4a5-4235-b664-453bec45e9a6/Untitled.png"}})])]),t._v(" "),s("li",[s("p",[t._v("快重传（fast retransmit）")]),t._v(" "),s("p",[t._v("快重传是为了解决网络中个别报文段发生丢失，导致发送方接收不到确认报文，误以为网络发生了拥塞启动慢开始算法，把拥塞窗口置为1降低了传输效率。")]),t._v(" "),s("p",[t._v("快重传：接收方收到一个M1报文就回送一个确认报文，当M2报文丢失后，接收方应立即发送对M1报文的接收确认，发送方接着继续发送M3,M4报文段，此时接收方还是没有接收到M2报文段，继续发送对M1的接收确认；当发送方一连收到3个重复确认，就知道接收方没有收到M2报文段，立即启动快重传算法，重传M2报文段。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1f3bc386-b7f0-40f0-9039-d3d515e32866/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1f3bc386-b7f0-40f0-9039-d3d515e32866/Untitled.png"}})])]),t._v(" "),s("li",[s("p",[t._v("快恢复（fast recovery）")]),t._v(" "),s("p",[t._v("当发送方收到了三个连续的重复确认，变启动快重传算法重传丢失的分组，并启动快恢复算法避免拥塞避免算法以为是网络拥塞了启动慢开始算法（本来对丢失的分组接收方是可以什么都不做的，所以没有快重传算法，发送方就收不到确认，以为发生了超时，直接启动慢开始算法，慢开始算法cwnd的值是重新以1开始增加，而快恢复算法不是从最开始的1增加，而是把门限值 ssthresh = cwnd / 2 = 8）,从而提高传输速率。")])])]),t._v(" "),s("h3",{attrs:{id:"拥塞控制流程图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拥塞控制流程图"}},[t._v("#")]),t._v(" 拥塞控制流程图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7a5edbbc-449a-4a4e-86dd-9db220f2b841/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7a5edbbc-449a-4a4e-86dd-9db220f2b841/Untitled.png"}})]),t._v(" "),s("p",[t._v("发送窗口始终不能大于接收窗口和拥塞窗口二者的最小值")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f1e7d414-3a0d-4538-8924-75422377532b/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f1e7d414-3a0d-4538-8924-75422377532b/Untitled.png"}})]),t._v(" "),s("h2",{attrs:{id:"主动队列管理aqm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主动队列管理aqm"}},[t._v("#")]),t._v(" 主动队列管理AQM")]),t._v(" "),s("p",[t._v("网络层路由器的分组丢失策略会引发TCP拥塞控制误认为网络发生了拥塞。")]),t._v(" "),s("p",[t._v("主动队列管理是把被动化为主动，给路由器的队列设置两个参数，最小门限和最大门限")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7baa5e89-c28d-4dd1-8476-fd6d7d3a8fa7/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/7baa5e89-c28d-4dd1-8476-fd6d7d3a8fa7/Untitled.png"}})]),t._v(" "),s("p",[t._v("以某一概率某丢弃个分组能够避免TCP发生全局性的拥塞控制")]),t._v(" "),s("p",[t._v("RED能够检测到网络拥塞的早期征兆，预检测！")]),t._v(" "),s("ul",[s("li",[t._v("路由器的处理规则，先进先出 FIFO")]),t._v(" "),s("li",[t._v("尾部丢弃策略（tail-dropplicy），因为队列满了")]),t._v(" "),s("li",[t._v("全局同步（global syncronization），全部TCP连接直接从慢开始状态开始（要避免全局同步现象）")]),t._v(" "),s("li",[t._v("随机早期检测RED（Random Early Detection）")])]),t._v(" "),s("h1",{attrs:{id:"tcp的运输连接管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp的运输连接管理"}},[t._v("#")]),t._v(" TCP的运输连接管理")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("连接建立")]),t._v(" "),s("p",[t._v("TCP三次握手")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b696ebcb-9da3-4116-92e4-4953d1f2dbef/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b696ebcb-9da3-4116-92e4-4953d1f2dbef/Untitled.png"}})]),t._v(" "),s("p",[t._v("SYN=1的报文段不能携带数据，但要消耗一个序号")]),t._v(" "),s("p",[t._v("ACK=1表示确认号有效，连接建立以后都为1")]),t._v(" "),s("p",[t._v("其实第二次握手可以分为两次握手，Server第一次发送确认报文ACK，发送同步报文SYN，也可以说成是四次握手。")])]),t._v(" "),s("li",[s("p",[t._v("数据传送")])]),t._v(" "),s("li",[s("p",[t._v("连接释放")]),t._v(" "),s("p",[t._v("TCP的四次挥手")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/542b5de3-183e-499b-9fa7-ec35cd08b326/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/542b5de3-183e-499b-9fa7-ec35cd08b326/Untitled.png"}})]),t._v(" "),s("ul",[s("li",[s("p",[t._v("时间等待计时器（TIME-WAIT timer）")])]),t._v(" "),s("li",[s("p",[t._v("MSL最长报文段寿命")]),t._v(" "),s("p",[t._v("MSL存在的意义，防止A发送的最后一个ACK报文段能够顺利到达B，丢失后，B会重传FIN+ACK。如果没收到最后一个确认ACK报文，则B无法正常进入CLOSED状态。")])])])]),t._v(" "),s("li",[s("p",[t._v("保活计时器 keepalive timer")]),t._v(" "),s("p",[t._v("确保客户机在发生故障后不能正常关闭连接，收到客户机数据后重置KT，当一直没有收到客户机报文段时，等KT过期（一般是两小时），两小时过后还没收到客户机的数据，那么每隔75秒发送一个探测报文，若一连发送10个探测报文无响应后，服务器便知道客户机出现了故障，便关闭这个TCP连接！！！")])])]),t._v(" "),s("h3",{attrs:{id:"tcp的有限机状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp的有限机状态"}},[t._v("#")]),t._v(" TCP的有限机状态")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9777bf78-e9d5-408f-9e70-812c79d58e23/Untitled.png",alt:"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9777bf78-e9d5-408f-9e70-812c79d58e23/Untitled.png"}})]),t._v(" "),s("h1",{attrs:{id:"udp-→-user-datagram-protocol"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp-→-user-datagram-protocol"}},[t._v("#")]),t._v(" UDP → User Datagram Protocol")])])}),[],!1,null,null,null);a.default=c.exports}}]);