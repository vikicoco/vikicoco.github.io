(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{573:function(t,s,a){"use strict";a.r(s);var e=a(16),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"设计模式笔记"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设计模式笔记"}},[t._v("#")]),t._v(" 设计模式笔记")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdai.tech/md/dev-spec/pattern/1_overview.html#%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f---overview",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("参考文章")]),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"原则和分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原则和分类"}},[t._v("#")]),t._v(" 原则和分类")]),t._v(" "),a("h3",{attrs:{id:"_7个原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7个原则"}},[t._v("#")]),t._v(" 7个原则")]),t._v(" "),a("p",[a("code",[t._v("单一职责原则")]),t._v(" "),a("code",[t._v("里氏替换原则")]),t._v(" "),a("code",[t._v("依赖倒置原则")]),t._v(" "),a("code",[t._v("接口隔离原则")])]),t._v(" "),a("p",[a("code",[t._v("迪米特法则")]),t._v(" "),a("code",[t._v("开闭原则")]),t._v(" "),a("code",[t._v("组合/聚合复用原则")])]),t._v(" "),a("h3",{attrs:{id:"_23种模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_23种模式"}},[t._v("#")]),t._v(" 23种模式")]),t._v(" "),a("h4",{attrs:{id:"创建型-5种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建型-5种"}},[t._v("#")]),t._v(" 创建型 5种")]),t._v(" "),a("blockquote",[a("p",[t._v("创建对象的模式：对类的实例化进行抽象")])]),t._v(" "),a("blockquote",[a("p",[t._v("封装具体类的信息，隐藏类的实例化过程")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdai.tech/md/dev-spec/pattern/2_singleton.html#%e5%88%9b%e5%bb%ba%e5%9e%8b---%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8fsingleton-pattern",target:"_blank",rel:"noopener noreferrer"}},[t._v("单例模式"),a("OutboundLink")],1),t._v(" "),a("code",[t._v("简单工厂")]),t._v(" "),a("code",[t._v("工厂方法")]),t._v(" "),a("code",[t._v("抽象工厂")]),t._v(" "),a("code",[t._v("建造者模式")]),t._v(" "),a("code",[t._v("原型模式")])]),t._v(" "),a("h4",{attrs:{id:"结构型-7种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构型-7种"}},[t._v("#")]),t._v(" 结构型 7种")]),t._v(" "),a("blockquote",[a("p",[t._v("处理类/对象的组合")])]),t._v(" "),a("p",[a("code",[t._v("门面模式")]),t._v(" "),a("code",[t._v("适配器模式")]),t._v(" "),a("code",[t._v("桥接模式")]),t._v(" "),a("code",[t._v("组合模式")]),t._v(" "),a("code",[t._v("装饰器模式")]),t._v(" "),a("code",[t._v("享元模式")]),t._v(" "),a("code",[t._v("代理模式")])]),t._v(" "),a("h4",{attrs:{id:"行为型-11种"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行为型-11种"}},[t._v("#")]),t._v(" 行为型 11种")]),t._v(" "),a("blockquote",[a("p",[t._v("对不同对象之间的责任划分和算法的抽象化？？？")])]),t._v(" "),a("p",[a("code",[t._v("责任链模式")]),t._v(" "),a("code",[t._v("策略模式")]),t._v(" "),a("code",[t._v("模板方法模式")]),t._v(" "),a("code",[t._v("命令模式")]),t._v(" "),a("code",[t._v("观察者模式")]),t._v(" "),a("code",[t._v("访问者模式")]),t._v(" "),a("code",[t._v("状态模式")]),t._v(" "),a("code",[t._v("解释器模式")]),t._v(" "),a("code",[t._v("迭代器模式")]),t._v(" "),a("code",[t._v("中介者模式")]),t._v(" "),a("code",[t._v("备忘录模式")])]),t._v(" "),a("h3",{attrs:{id:"_1-单例模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-单例模式"}},[t._v("#")]),t._v(" 1.单例模式")]),t._v(" "),a("blockquote",[a("p",[t._v("最佳实践是"),a("strong",[t._v("采用枚举方式")]),t._v("（JVM提供线程安全、防止反射攻击，防止序列化破坏。）")]),t._v(" "),a("p",[t._v("为了单例创建时机可控，使用静态内部类，防止反射攻击.setAccessible(true)，可以在构造器里加已存在，再new就直接抛异常")])]),t._v(" "),a("p",[a("strong",[t._v("饿汉式的两种方式方式")])]),t._v(" "),a("p",[t._v("1.私有化构造器直接new一个")]),t._v(" "),a("p",[t._v("2.枚举方式")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uniqueInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("懒汉式的四种实现方式")])]),t._v(" "),a("p",[t._v("1.一个if，线程不安全")]),t._v(" "),a("p",[t._v("2.synchronized锁")]),t._v(" "),a("p",[t._v("3.双重校验锁，两个if")]),t._v(" "),a("p",[t._v("4.内部类实现，JVM提供线程安全，volatile防止指令重排，构造器判断防止反射攻击，readResolve()防止序列化破坏")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理反射攻击")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("synchronized")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RuntimeException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"单例模式，对象已经创建，反射不可以再创建"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" INSTANCE "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingletonHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INSTANCE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//实现readResolve方法可以解决反序列化攻击")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//反序列化时会检查有没有这个方法，如果有可以调用这个方法返回对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readResolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InnerHolder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("INSTANCE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844904186027458568",target:"_blank",rel:"noopener noreferrer"}},[t._v("单例模式反射攻击（双重校验锁）"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.aliyun.com/article/238468",target:"_blank",rel:"noopener noreferrer"}},[t._v("单例模式反射攻击（静态内部类）"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/4d9911afadd9",target:"_blank",rel:"noopener noreferrer"}},[t._v("单例模式序列化破坏"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_2-简单工厂模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-简单工厂模式"}},[t._v("#")]),t._v(" 2.简单工厂模式")]),t._v(" "),a("blockquote",[a("p",[t._v("提供一个类来集中管理对象创建的细节，让客户类和具体子类解耦，只用继承简单工厂类传入参数，具体创建过程交由该类实现")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdai.tech/md/dev-spec/pattern/3_simple_factory.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("简单工厂模式"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_3-工厂方法模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-工厂方法模式"}},[t._v("#")]),t._v(" 3.工厂方法模式")]),t._v(" "),a("blockquote",[a("p",[t._v("定义了一个创建对象的接口，但由子类决定要实例化哪个类。工厂方法把实例化操作推迟到子类。")])]),t._v(" "),a("blockquote",[a("p",[t._v("与简单工厂相比，在简单工厂中，创建对象的是另一个类，而在工厂方法中，是由子类来创建对象。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdai.tech/md/dev-spec/pattern/4_factory_method.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("工厂方法模式"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_4-抽象工厂模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-抽象工厂模式"}},[t._v("#")]),t._v(" 4.抽象工厂模式")]),t._v(" "),a("blockquote",[a("p",[t._v("创建一连串的相关对象，工厂方法只是用于创建一个对象")])]),t._v(" "),a("blockquote",[a("p",[t._v("抽象工厂使用多个工厂方法创建一连串对象")])]),t._v(" "),a("blockquote",[a("p",[t._v("客户类直接使用抽象工厂类的方法获取多个实例")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdai.tech/md/dev-spec/pattern/5_abstract_factory.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("抽象工厂模式"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_5-模板方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-模板方法"}},[t._v("#")]),t._v(" 5.模板方法")]),t._v(" "),a("blockquote",[a("p",[t._v("拥有相同的算法结构，定义相同的部分算法（方法），不同的算法（方法）交由子类实现")])]),t._v(" "),a("blockquote",[a("p",[t._v("Spring IOC 容器对bean的初始化使用的refresh()方法就是一个典型的模板方法")])]),t._v(" "),a("blockquote",[a("p",[t._v("模板方法也称钩子方法")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://pdai.tech/md/dev-spec/pattern/17_template.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("模板方法"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);